' Gambas class file

Export
Create Static

'Class _Keyring

Property Read Enabled As Boolean

Private $bOpen As Boolean
Private $sKDEWalletId As String
Private $sSecretTool As String
Private $sKDEOldWalletId As String
Private $bKDEOldWalletId As Boolean

Private Sub OpenWallet()
  
  Dim sResult As String
  Dim sWallet As String
  
  If $bOpen Then Return
  
  Select Case Desktop.Type
  
    Case "KDE"
    
      Shell "dcop kded kwalletd localWallet" To sResult
      sWallet = Trim(Split(sResult, "\n")[0])
      Shell Subst("dcop kded kwalletd open &1 0", Shell(sWallet)) To sResult
      $sKDEWalletId = Trim(sResult)
    
    Case "GNOME", "LXDE", "MATE", "XFCE", "UNITY", "CYGWIN"
    
      $sSecretTool = System.Find("secret-tool")
      If Not $sSecretTool Then Error.Raise("'secret-tool' is not found. Did you install it?")
    
    Case "KDE4"
    
      Shell "qdbus org.kde.kwalletd /modules/kwalletd localWallet" To sResult
      sWallet = Trim(Split(sResult, "\n")[0])
      Shell Subst("qdbus org.kde.kwalletd /modules/kwalletd open &1 0 &2", Shell$(sWallet), Shell$(Application.Title)) To sResult
      $sKDEWalletId = Trim(sResult)
      If Not $sKDEWalletId Then Error.Raise("No wallet found")
    
    Case "KDE5"
    
      Shell "qdbus org.kde.kwalletd5 /modules/kwalletd5 localWallet" To sResult
      sWallet = Trim(Split(sResult, "\n")[0])
      If Not sWallet Then Error.Raise("No wallet found")
      Shell Subst("qdbus org.kde.kwalletd5 /modules/kwalletd5 open &1 0 &2", Shell$(sWallet), Shell$(Application.Title)) To sResult
      $sKDEWalletId = Trim(sResult)
      If Not $sKDEWalletId Then Error.Raise("No wallet found")
    
    Default
      
      Error.Raise("desktop is not supported")
  
  End Select
  
Catch
  
  Error.Raise("Cannot store passwords on desktop " & Desktop.Type & ": " & Error.Text)

End


Public Sub _get((Key) As String) As String
  
  Dim sResult As String
  Dim sWallet As String
  
  OpenWallet
  
  Select Case Desktop.Type
  
    Case "KDE"
    
      Shell Subst("dcop kded kwalletd readPassword &1 &2 &3", $sKDEWalletId, Shell$(Application.Name), Shell$(Key)) To sResult
      sResult = Replace(sResult, "\n", "")
      Return sResult

    Case "GNOME", "LXDE", "MATE", "XFCE", "UNITY", "CYGWIN"
    
      If $sSecretTool Then
        Exec [$sSecretTool, "lookup", "name", Key, "magic", Application.Name] To sResult
        Return Replace(sResult, "\n", "")
      Endif
      
    Case "KDE4"
    
      Shell Subst("qdbus org.kde.kwalletd /modules/kwalletd readPassword &1 &2 &3 &4", $sKDEWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Application.Title)) To sResult
      sResult = Replace(sResult, "\n", "")
      Return sResult
  
    Case "KDE5"
    
      Shell Subst("qdbus org.kde.kwalletd5 /modules/kwalletd5 readPassword &1 &2 &3 &4", $sKDEWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Application.Title)) To sResult
      sResult = Replace(sResult, "\n", "")
      ' Compatibility with KDE4 wallet that was always used
      If Not sResult Then
        If Not $bKDEOldWalletId Then
          $bKDEOldWalletId = True
          Shell "qdbus org.kde.kwalletd /modules/kwalletd localWallet" To sResult
          sWallet = Trim(Split(sResult, "\n")[0])
          Shell Subst("qdbus org.kde.kwalletd /modules/kwalletd open &1 0 &2", Shell$(sWallet), Shell$(Application.Title)) To sResult
          $sKDEOldWalletId = Trim(sResult)
        Endif
        If $sKDEOldWalletId Then
          Shell Subst("qdbus org.kde.kwalletd /modules/kwalletd readPassword &1 &2 &3 &4", $sKDEOldWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Application.Title)) To sResult
          sResult = Replace(sResult, "\n", "")
          Error "gb.desktop: warning: password read from old KDE4 wallet. Just save your password again to use the KDE5 wallet."
        Endif
      Endif
      Return sResult
  
  End Select
  
End

Public Sub _put(Value As String, (Key) As String)
  
  OpenWallet
  
  Select Case Desktop.Type
  
    Case "KDE"
    
      Shell Subst("dcop kded kwalletd writePassword &1 &2 &3 &4", $sKDEWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Value)) Wait

    Case "GNOME", "LXDE", "MATE", "XFCE", "UNITY", "CYGWIN"
    
      If $sSecretTool Then
        If Value Then
          Shell "echo -n " & Shell(Value) & "| " & $sSecretTool & " store --label='" & Replace(Key, "'", "'\\''") & "' name " & Shell$(Key) & " magic " & Shell(Application.Name) Wait
        Else
          Exec [$sSecretTool, "clear", "name", Key, "magic", Application.Name] Wait
        Endif
      ' Else
      '   _Keyring.SetPassword(Key, Value)
      Endif
      
    Case "KDE4"
  
      Shell Subst("qdbus org.kde.kwalletd /modules/kwalletd writePassword &1 &2 &3 &4 &5 >/dev/null 2>&&1", $sKDEWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Value), Shell$(Application.Title)) Wait

    Case "KDE5"
  
      Shell Subst("qdbus org.kde.kwalletd5 /modules/kwalletd5 writePassword &1 &2 &3 &4 &5 >/dev/null 2>&&1", $sKDEWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Value), Shell$(Application.Title)) Wait

  End Select
  
End

Private Function Enabled_Read() As Boolean

  Select Case Desktop.Type
  
    Case "KDE", "KDE4", "KDE5"
    
      Return True
    
    Case "GNOME", "LXDE", "MATE", "XFCE", "UNITY", "CYGWIN"
    
      Try OpenWallet
      If Error Then Return False
      Return True
    
    Default
      
      Return False
      
  End Select

End
