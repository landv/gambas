' Gambas class file

Export
Create Static

Public Procedure Modify(Index As String, Columns As String[], Optional Table As String, Optional Database As String = modMain.$Connection.Name)

  Delete(Table, Index, Database)
  If Table Then
    modMain.RunQuery("CREATE INDEX `" & Index & "` ON `" & Database & "`.`" & Table & "` (" & modMain.ArrayToString(Columns, True) & ")")
  Else
    modMain.$Index.Add("INDEX `" & Index & "` (" & modMain.ArrayToString(Columns, True) & ")")
  Endif

End

Public Procedure Add(Index As String, Columns As String[], Optional Table As String, Optional Database As String = modMain.$Connection.Name)

  If Table Then
    modMain.RunQuery("CREATE INDEX `" & Index & "` ON `" & Database & "`.`" & Table & "` (" & modMain.ArrayToString(Columns, True) & ")")
  Else
    modMain.$Index.Add("INDEX `" & Index & "` (" & modMain.ArrayToString(Columns, True) & ")")
  Endif

End

Public Procedure Delete(Table As String, Index As String, Optional Database As String = modMain.$Connection.Name)

  modMain.RunQuery("DROP INDEX `" & Index & "` ON `" & Database & "`.`" & Table & "`")

End

Public Procedure PrimaryKey(Table As String, Columns As String[], Optional Database As String = modMain.$Connection.Name)

  Try modMain.RunQuery("ALTER TABLE `" & Database & "`.`" & Table & "` DROP PRIMARY KEY")
  modMain.RunQuery("ALTER TABLE `" & Database & "`.`" & Table & "` ADD PRIMARY KEY (" & modMain.ArrayToString(Columns, True) & ")")

End

Public Function Columns(Table As String, Index As String, Optional Database As String = modMain.$Connection.Name) As String[]

  Dim asTEMP As New String[]

  modMain.$hResult = modMain.$Connection.Exec("SHOW INDEX FROM `" & Database & "`.`" & Table & "` WHERE `Table` = '" & Table & "' AND `Key_name` = '" & Index & "'")
  For Each modMain.$hResult
    asTEMP.Add(modMain.$hResult!Column_name)
  Next
  Return asTEMP

End
