' Gambas module file

Public Sub Main()

  Dim repo As Repository
  Dim branch As Branch
  Dim s As GitStatus
  Dim files As New String[]

  Object.Attach(Git, Me, "Git")
  If Not Exist("/home/adrien/Programmation/Gambas/src/gambas-gb.git/") Then
    repo = Git.Clone("https://gitlab.com/gambas/gambas.git", "/home/adrien/Programmation/Gambas/src/gambas-gb.git/")
  Else
    repo = Git.Open("/home/adrien/Programmation/Gambas/src/gambas-gb.git/")
  Endif

  Print repo.Path
  Print repo.Workdir

  For Each branch In repo.Branches
    Print Branch.Name
  Next
  Print "===="

  s = repo.Status()

  For Each s
    If s.Ignored Then Continue
    Print "S:";; s.Path;; s.StatusString
    repo.Index.Remove(s.Path)
    files.Add(s.Path)
  Next

  repo.Index.Save

  s = repo.Status()
  Print "===="

  For Each s
    If s.Ignored Then Continue
    Print "S:";; s.Path;; s.StatusString
  Next

  Print "===="

  repo.Reset(files)
  Print repo.Head.Id

  s = repo.Status()

  For Each s
    If s.Ignored Then Continue
    Print "S:";; s.Path;; s.StatusString
  Next

Catch
  Error Error.Text
End

Public Sub Git_Transfer()

  Print Chr(27); "[2K\r";; Round(Git.Transfer.ReceivedObjects / Git.Transfer.TotalObjects * 100); "%";;
  Print Git.Transfer.ReceivedObjects; "/"; Git.Transfer.TotalObjects; " objects ";
  Print Git.Transfer.ReceivedBytes; " received at "; Git.Transfer.Speed;

End

