' Gambas class file

'EXPORT

Private Const TYPE_WHERE As Integer = 0
Private Const TYPE_SELECT As Integer = 1
Private Const TYPE_DELETE As Integer = 2

Private $iType As Integer
Private $sField As String
Private $sTable As String
Private $sWhere As String
Private $sOrderBy As String

Static Public Function _call() As Request
  
  Dim hReq As New Request
  Return hReq
  
End


Static Public Function Select(Optional Field As Variant) As Request
  
  Dim hReq As New Request(Field, TYPE_SELECT)
  Return hReq
  
End

Static Public Function Delete() As Request
  
  Dim hReq As New Request("", TYPE_DELETE)
  Return hReq
  
End

Public Sub _new(Optional Field As Variant, Optional Type As Integer = TYPE_WHERE)
  
  Dim aField As String[]
  
  $iType = Type

  Try aField = Field
  If aField Then 
    $sField = aField.Join(",")
  Else
    $sField = Field
  Endif
  
End

Public Function From(Table As String) As Request
  
  $sTable = Table
  Return Me
  
End


Public Function Where((Where) As String, Optional Op As String = "AND") As Request

  If Not Where Then Return Me
  If $sWhere Then $sWhere &= " " & Op & " "
  $sWhere &= "(" & Where & ")"
  Return Me
  
End

Public Function OrderBy((OrderBy) As Variant) As Request
  
  Dim aOrderBy As String[]
  
  If IsNull(OrderBy) Then Return Me
  
  Try aOrderBy = OrderBy
  
  If aOrderBy Then
    OrderBy = aOrderBy.Join(",")
  Endif

  If $sOrderBy Then $sOrderBy &= ","  
  $sOrderBy &= OrderBy
  Return Me
  
End

Public Function Get(hConn As Connection) As String
  
  Dim sReq As String
  
  If $iType = TYPE_WHERE Then
  
    sReq = Replace($sWhere, "&", "&&")
  
  Else
  
    If Not $sTable Then Return

    Select Case $iType
      Case TYPE_SELECT
        sReq = "SELECT "
      Case TYPE_DELETE
        sReq = "DELETE "
    End Select
  
    sReq &= $sField & " FROM " & hConn.Quote($sTable, True)
    If $sWhere Then sReq &= " WHERE " & $sWhere
    
  Endif
  
  If $sOrderBy Then sReq &= " ORDER BY " & $sOrderBy
  
  Return sReq
    
End
