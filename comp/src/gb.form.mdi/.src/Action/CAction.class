' Gambas class file

Public (Key) As String
Public Text As String
Public Display As String
Public DefaultShortcut As String
Public (Shortcut) As String
Public Icon As Picture
Public IconPath As String
Public HasShortcut As Boolean

Private $sOldShortcut As String

Private Sub UnquoteShortcut(sStr As String) As String
  
  sStr = Replace(sStr, "&&", Chr$(1))
  sStr = Replace(sStr, "&", "")
  sStr = Replace(sStr, Chr$(1), "&")
  
  Return sStr
  
End

Public Sub _new(sKey As String, bHasShortcut As Boolean, cSlot As Collection, hMerge As CAction)

  Dim sPicture As String
  Dim aControl As Object[]

  'Debug sKey;; bHasShortcut;; cSlot["Picture"]

  Key = sKey
  
  Text = Tr$(cSlot["Text"])
  If hMerge And If Not Text Then Text = hMerge.Text
  Display = UnquoteShortcut(Text)

  DefaultShortcut = cSlot["Shortcut"]
  If hMerge And If Not DefaultShortcut Then DefaultShortcut = hMerge.DefaultShortcut
  
  HasShortcut = bHasShortcut
  If hMerge And If Not HasShortcut Then HasShortcut = hMerge.HasShortcut
  
  Shortcut = MAction.GetShortcut(Key)
  If Not Shortcut Then Shortcut = DefaultShortcut
  $sOldShortcut = Shortcut
  
  sPicture = cSlot["Picture"]
  
  If Not sPicture Then
    aControl = Action[sKey].Controls
    If aControl.Count = 1 And If Object.Type(aControl[0]) = "MenuButton" Then
      sPicture = "icon:/small/menu"
    Endif
  Endif
  
  If Left(sPicture) = "$" Then
  Else
    If sPicture Not Begins "icon:/" Then sPicture = ".." &/ sPicture
    IconPath = sPicture
    Try Icon = Picture[IconPath]
  Endif
  
  If hMerge Then
    If Not sPicture Or If Left(sPicture) = "$" And hMerge.IconPath Then
      IconPath = hMerge.IconPath
      Icon = hMerge.Icon
    Endif
  Endif
  
End

Public Sub Save()
  
  Dim hAction As Object
  
  If Not HasShortcut Then Return
  If Shortcut = $sOldShortcut Then Return
  
  If Shortcut = DefaultShortcut Then
    MAction.SetShortcut(Key, "")
  Else
    MAction.SetShortcut(Key, Shortcut)
  Endif
  
  hAction = Action[Key]
  
  hAction.Shortcut = Shortcut
  Action["." & Key].Shortcut = Shortcut
  
  $sOldShortcut = Shortcut
  
End

Public Sub _compare(hAction As CAction) As Integer
  
  Return String.Comp(Display, hAction.Display)
  
End

Public Sub GetConfigIcon(Optional W As Integer) As Picture
  
  Dim aIcon As String[]
  Dim aControl As Object[]
  Dim sType As String
  
  If Icon Then
    If W = 0 Then Return Icon
    aIcon = Split(IconPath, "/")
    aIcon[1] = W
    Return Picture[aIcon.Join("/")]
  Endif
  
  aControl = Action[Key].Controls
  If aControl.Count = 0 Then Return
  
  If W = 0 Then W = Stock.GetSize("small")
  
  sType = Object.Type(aControl[0])
  If sType = "MenuButton" Then Return Picture["icon:/small/menu"]
  
  IconPath = "./control" &/ LCase(sType) & ".png"
  Try Return Picture[IconPath].Image.Stretch(W, W).Picture
  
End
