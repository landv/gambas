' Gambas class file

EXPORT
INHERITS UserContainer

PUBLIC CONST _Properties AS String = "*,Action,Orientation{Align.Top;Bottom;Left;Right}=Top,Resizable=True,Border,Hidden"

EVENT Show
EVENT Hide
EVENT Resize

PROPERTY Orientation AS Integer
PROPERTY Border AS Boolean
PROPERTY Hidden AS Boolean
PROPERTY Resizable AS Boolean
PROPERTY Dimension AS Integer
PROPERTY Tooltip AS String
PROPERTY Value AS Boolean
PROPERTY Action AS String
PROPERTY Design AS Boolean
PROPERTY Settings AS String

PRIVATE $hForm AS FSidePanel
PRIVATE $bAnimate AS Boolean

PUBLIC SUB _new()

  $hForm = NEW FSidePanel(ME)
  $hForm.Move(0, 0)
  'Object.Attach($hForm, ME, "Form")
  ME._Container = $hForm.GetContainer()

END

PRIVATE FUNCTION Orientation_Read() AS Integer

  RETURN $hForm.GetOrientation()

END


PRIVATE SUB Orientation_Write(iOrientation AS Integer)

  $hForm.SetOrientation(iOrientation)

END


PRIVATE FUNCTION Border_Read() AS Boolean

  RETURN $hForm.GetContainer().Border <> Border.None

END

PRIVATE SUB Border_Write(bBorder AS Boolean)

  $hForm.GetContainer().Border = If(bBorder, Border.Sunken, Border.None)

END

PRIVATE FUNCTION Hidden_Read() AS Boolean

  RETURN $hForm.IsHidden()

END

PRIVATE SUB Hidden_Write(bHidden AS Boolean)

  $hForm.SetHidden(bHidden)

END

PRIVATE FUNCTION Dimension_Read() AS Integer

  RETURN $hForm.GetDimension()

END


PRIVATE FUNCTION Resizable_Read() AS Boolean

  RETURN NOT $hForm.IsFixed()

END

PRIVATE SUB Resizable_Write(bResizable AS Boolean)

  $hForm.SetFixed(NOT bResizable)

END

PUBLIC SUB _Show()

  RAISE Show

END

PUBLIC SUB _Hide()

  RAISE Hide

END


PUBLIC SUB _Resize()

  RAISE Resize

END


PRIVATE SUB Dimension_Write(Value AS Integer)

  $hForm.SetDimension(Value)  

END

PRIVATE FUNCTION Tooltip_Read() AS String

  RETURN $hForm.GetTooltip()  

END

PRIVATE SUB Tooltip_Write(Value AS String)

  $hForm.SetTooltip(Value)

END

PRIVATE FUNCTION Action_Read() AS String

  RETURN Action.Get(ME)

END

PRIVATE SUB Action_Write(Value AS String)

  Action.Register(ME, Value)

END

PRIVATE FUNCTION Value_Read() AS Boolean

  RETURN NOT Hidden_Read()  

END

PRIVATE SUB Value_Write(Value AS Boolean)

  Hidden_Write(NOT Value)

END

PRIVATE FUNCTION Design_Read() AS Boolean

  RETURN SUPER.Design  

END

PRIVATE SUB Design_Write(Value AS Boolean)

  SUPER.Design = Value
  $hForm.SetDesign  

END


PRIVATE FUNCTION Settings_Read() AS String

  'DEBUG If(Hidden_Read(), "1", "0") & "," & CStr(Dimension_Read())

  RETURN If(Hidden_Read(), "1", "0") & "," & CStr(Dimension_Read())

END

PRIVATE SUB Settings_Write(Value AS String)

  DIM aVal AS String[]
  
  'DEBUG Value
  
  aVal = Split(Value, ",")
  
  TRY Dimension_Write(CInt(aVal[1]))
  TRY Hidden_Write(aVal[0] <> "0")

END
