' Gambas class file

Export

Event Activate

Public List As String[]
Public Icons As String[]
Public Start As Integer

Property Delay As Integer
Property Read Editor As TextBox

Private $hObserver As Observer
Private $hTimer As Timer
Private $hPopup As Window
Private $hList As GridView
Private $hWatcher As Watcher
Private $bExplicit As Boolean
Private $hObsWindow As Observer
Private $iHeight As Integer

Private Sub FindTextBox(hCtrl As Control) As Control

  If hCtrl Is Container Then
    For Each hCtrl In Container(hCtrl).Children
      If hCtrl Is TextBox Then Return hCtrl
    Next
  Else If hCtrl Is TextBox Then
    Return hCtrl
  Endif

End

Private Sub GetTextBox() As TextBox

  Return $hObserver.Object

End

Public Sub _new(hCtrl As Control)

  hCtrl = FindTextBox(hCtrl)

  $hObserver = New Observer(hCtrl) As "TextBox"
  $hWatcher = New Watcher(hCtrl) As "TextBox"

  $hTimer = New Timer As "Timer"
  $hTimer.Delay = 350

End

Public Sub Open()

  HideList
  $bExplicit = True
  Timer_Timer

End

Public Sub TextBox_Change()

  If Last.Length = 0 Then HideList
  $hTimer.Start

End

Private Sub HideList()

  If $hPopup And If $hPopup.Visible Then
    'Debug System.Backtrace.Join(" ")
    $hPopup.Hide
    $hObsWindow = Null
  Endif
  $hTimer.Stop

End

Public Sub TextBox_KeyPress()

  Dim iRow As Integer

  If $hPopup And If $hPopup.Visible Then

    Select Case Key.Code

      Case Key.Down, Key.PageDown
        iRow = Min($hList.Rows.Max, $hList.Row + If(Key.Code = Key.Down, 1, $hList.ClientH \ $hList.Rows.H))
        $hList.Row = iRow
        Stop Event
        Return

      Case Key.Up, Key.PageUp
        iRow = Max(0, $hList.Row - If(Key.Code = Key.Up, 1, $hList.ClientH \ $hList.Rows.H))
        $hList.Row = iRow
        Stop Event
        Return

      Case Key.Home
        $hList.Row = 0
        Stop Event
        Return

      Case Key.End
        $hList.Row = $hList.Rows.Count - 1
        Stop Event
        Return

      Case Key.Enter, Key.Return
        GridView_MouseUp
        Stop Event
        Return

      Case Key.Escape
        HideList
        Stop Event
        Return

    End Select

  Else

    If Key.Code = Key.Space And If Key.Control Then
      Me.Open
      Stop Event
    Endif

  Endif

End

Private Sub MovePopup()

  Dim hCtrl As TextBox
  Dim X As Integer
  Dim Y As Integer

  If Not $hPopup Then Return

  hCtrl = GetTextBox()
  X = hCtrl.Font.TextWidth(String.Left(hCtrl.Text, Start))
  Y = hCtrl.ScreenY + hCtrl.H

  $hPopup.Move(hCtrl.ScreenX + X, Y, Desktop.Scale * 48, $iHeight)

End

Public Sub Timer_Timer()

  Dim aList As String[]
  Dim hCtrl As TextBox
  Dim hPanel As Panel

  'Debug

  $hTimer.Stop

  List = Null
  Me.Fill(GetTextBox().Text, $bExplicit)
  aList = List

  $bExplicit = False
  If Not aList Or If aList.Count = 0 Then Return

  hCtrl = GetTextBox()
  Object.Lock(hCtrl)

  If Not $hPopup Then

    $hPopup = New Window As "Popup"
    $hPopup.Arrangement = Arrange.Fill
    $hPopup.Border = False
    $hPopup.SkipTaskbar = True
    $hPopup.Stacking = Window.Above
    $hPopup.Persistent = True
    $hPopup.TakeFocus = False

    hPanel = New Panel($hPopup)
    hPanel.Arrangement = Arrange.Fill
    HPanel.Foreground = Color.Black
    hPanel.Border = Border.Plain

    $hList = New GridView(hPanel) As "GridView"
    $hList.Border = False
    $hList.Grid = False
    $hList.Mode = Select.Single
    $hList.ScrollBar = Scroll.Vertical
    $hList.Columns.Count = 1
    $hList.Padding = 0

  Endif

  $hList.Rows.Count = aList.Count
  $hList.Row = 0 'Me.GetIndex()

  $iHeight = $hList.Rows.Height * Min(8, aList.Count) + 2

  MovePopup
  $hPopup.Show
  '$hPopup.Raise
  $hObsWindow = New Observer(hCtrl.Window) As "Window"

  Object.Unlock(hCtrl)

End

' Public Sub Popup_Activate()
'
'   With GetTextBox()
'     .Window.Show
'     .SetFocus
'   End With
'
' End

Public Sub TextBox_Hide()

  HideList

End

Public Sub TextBox_Move()

  HideList

End

Public Sub TextBox_Resize()

  HideList

End

Private Sub DeletePopup()

  If $hPopup Then
    $hPopup.Delete
    $hPopup = Null
  Endif

End

Public Sub TextBox_LostFocus()

  If Not $hPopup Then Return
  If $hList.HasFocus Then Return

  HideList
  DeletePopup

End

Public Sub GridView_GotFocus()

  GetTextBox().Window.Activate
  GetTextBox().SetFocus

End

Private Function Delay_Read() As Integer

  Return $hTimer.Delay

End

Private Sub Delay_Write(Value As Integer)

  $hTimer.Delay = Value

End

Public Sub GridView_MouseUp()

  Dim hCtrl As TextBox

  If $hList.Row < 0 Then Return

  hCtrl = GetTextBox()

  Try hCtrl.Text = String.Left(hCtrl.Text, Start) & List[$hList.Row]
  HideList
  'hCtrl.SetFocus
  Raise Activate

End

Public Sub GridView_Data(Row As Integer, (Column) As Integer)

  Try $hList.Data.Text = List[Row]
  If Icons Then Try $hList.Data.Picture = Picture[Icons[Row]]

End

Public Sub Fill(Text As String, Explicit As Boolean)

  If Len(Text) < 3 Or If Explicit Then Return
  List = ["Gambas", "Almost", "Means", "Basic!", Text]

End

Private Function Editor_Read() As TextBox

  Return $hObserver.Object

End

Public Sub Window_Move()

  MovePopup

End
