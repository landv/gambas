#Balloon

C
Control
R
Control

Delay
P
i

Font
P
Font

Visible
R
b

_call
M

(Message)s(Control)Control;[(Icon)Picture;(X)i(Y)i]
Info
M

(Message)s(Control)Control;[(X)i(Y)i]
Warning
M

(Message)s(Control)Control;[(X)i(Y)i]
Error
M

(Message)s(Control)Control;[(X)i(Y)i]
Question
M

(Message)s(Control)Control;[(X)i(Y)i]
Delete
M

(Message)s(Control)Control;[(X)i(Y)i]
Hide
M

[(Control)Control;]
#ButtonBox
UserControl
C
_Properties
C
s
*,Action,Text,Alignment{Align.Normal;Left;Center;Right}=Normal,Picture,ReadOnly,Border=True,Button=True
_DefaultEvent
C
s
Click
_DefaultSize
C
s
24,4
_Similar
C
s
TextBox
:Click
:


:Change
:


:Activate
:


Picture
p
Picture

Text
p
s

Length
r
i

ReadOnly
p
b

Border
p
b

Editor
r
MaskBox

Button
p
b

Alignment
p
i

_new
m


Button_Click
m


Background_GotFocus
m


Clear
m


Background_Arrange
m


Background_Draw
m


TextBox_GotFocus
m


TextBox_LostFocus
m


TextBox_Activate
m


TextBox_Change
m


#ColorButton
UserControl
C
:Change
:


Color
p
i

Value
p
i

_Properties
C
s
*,Value{Color}
_DefaultEvent
C
s
Change
_DefaultSize
C
s
8,4
_new
m


Button_Click
m


Button_Resize
m


#ColorChooser
UserControl
C
:Change
:


:Activate
:


_Properties
C
s
*,ShowAlpha,ShowColorMap=True
_DefaultEvent
C
s
Change
_DefaultSize
C
s
36,36
_Group
C
s
Chooser
SelectedColor
p
i

Value
p
i

ShowAlpha
p
b

ShowColorMap
p
b

_new
m


_RaiseChange
m


_RaiseActivate
m


#DateBox
UserControl
C
_Properties
C
s
*,Action,Value,ReadOnly,Border=True,Mode{DateChooser.*}=DateOnly
_DefaultSize
C
s
24,4
_Similar
C
s
TextBox
:Activate
:


:Click
:


:Change
:


Value
p
d

ReadOnly
p
b

Border
p
b

Mode
p
i

_new
m


ButtonBox_Click
m


ButtonBox_KeyPress
m


ButtonBox_Activate
m


ButtonBox_Change
m


PopupWindow_Open
m


DateChooser_Activate
m


DateChooser_Cancel
m


#DateChooser
UserControl
C
Value
p
d

Year
p
i

Month
p
i

Day
p
i

Font
p
Font

Colors
r
_DateChooser_Colors

Mode
p
i

Data
r
_DateChooser_Data

DateOnly
C
i
0
DateTime
C
i
1
TimeOnly
C
i
2
:Change
:


:Activate
:


:Cancel
:


:Data
:

(Date)d
_Properties
C
s
*,Mode{DateChooser.*}=DateOnly
_DefaultEvent
C
s
Change
_DefaultSize
C
s
40,28
_Group
C
s
Chooser
_new
m


_Change
m


_Activate
m


_Cancel
m


SetFocus
m


_get
m
_DateChooser_Date
(Date)d
_GetData
m
_DateChooser_Data
(dDate)d[(bCreate)b]
#DirChooser
UserControl
C
_Properties
C
s
*,Border=True,Root,Picture,ShowHidden,ShowFile,ShowDetailed,ShowBookmark=True,ShowSplitter=True
_DefaultEvent
C
s
Change
_DefaultSize
C
s
36,36
_Group
C
s
Chooser
Root
p
s

Picture
p
Picture

SelectedPath
p
s

Value
p
s

ShowFile
p
b

ShowHidden
p
b

ShowDetailed
p
b

ShowBookmark
p
b

ShowSplitter
p
b

Bookmarks
p
Array

Icon
p
Picture

Settings
p
Variant[]

DirView
r
DirView

FileView
r
FileView

Border
p
b

:Change
:


:Activate
:


:Icon
:

(Path)s
_new
m


frmChooser_Open
m


frmChooser_Change
m


frmChooser_Select
m


frmChooser_GetIcon
m

(Path)s
Reload
m


#DirView
UserControl
C
_Properties
C
s
*,Border=True,Root,Picture,ShowHidden
_DefaultEvent
C
s
Click
_Group
C
s
View
:Select
:


:Click
:


:Activate
:


:Menu
:


:Icon
:

(Path)s
Root
p
s

Current
p
s

ShowHidden
p
b

Picture
p
Picture

Border
p
b

Icon
p
Picture

Renaming
r
b

Settings
p
Variant[]

_new
m


TreeView_Expand
m


TreeView_Collapse
m


TreeView_Select
m


TimerExpand_Timer
m


TreeView_Activate
m


TreeView_Click
m


TreeView_Menu
m


TreeView_Rename
m


TreeView_Cancel
m


NewFolder
m


Reload
m


#Expander
UserContainer
C
_Properties
C
s
*,Text,TextFont,Animated,Hidden
_DefaultEvent
C
s
Show
_Similar
C
s
Panel
:Show
:


:Hide
:


Hidden
p
b

Text
p
s

TextFont
p
Font

Animated
p
b

_new
m


_Show
m


_Hide
m


#FileChooser
UserControl
C
_Properties
C
s
*,Border=True,Root,Picture,Multi,Filter,ShowHidden,ShowDirectory,ShowDetailed,ShowBookmark=True,ShowFile=True,ShowButton,Margin,ReadOnly
_DefaultEvent
C
s
Change
_DefaultSize
C
s
36,36
_Group
C
s
Chooser
Root
p
s

Picture
p
Picture

Dir
p
s

SelectedPath
p
s

SelectedPaths
r
String[]

Value
p
v

Multi
p
b

ShowDirectory
p
b

ShowHidden
p
b

ShowDetailed
p
b

ShowBookmark
p
b

ShowFile
p
b

Bookmarks
p
Array

Settings
p
Variant[]

DirView
r
DirView

FileView
r
FileView

ShowButton
p
b

Extension
r
Container

Border
p
b

Margin
p
b

ReadOnly
p
b

Filter
p
String[]

FilterIndex
p
i

Icon
p
Picture

:Change
:


:Activate
:


:Icon
:

(Path)s
:Cancel
:


_new
m


frmChooser_Open
m


frmChooser_Change
m


frmChooser_Select
m


frmChooser_GetIcon
m

(Path)s
Reload
m


frmChooser_Cancel
m


SetFocus
m


#FileView
UserControl
C
_Properties
C
s
*,Border=True,Mode{Select.*},Dir,ShowDetailed,ShowHidden,ShowDirectory
_DefaultEvent
C
s
Click
_Group
C
s
View
:Select
:


:Click
:


:Activate
:


:Menu
:


:Icon
:

(Path)s
Dir
p
s

ShowHidden
p
b

ShowDirectory
p
b

Current
p
s

Mode
p
i

ShowDetailed
p
b

Selection
r
String[]

Filter
p
String[]

Icon
p
Picture

IconSize
p
i

Border
p
b

Settings
p
Variant[]

Count
r
i

Background
p
i

Foreground
p
i

_init
M


_new
m


Refresh_Timer
m


Reload
m


UnselectAll
m


View_Select
m


View_Click
m


View_Activate
m


View_Menu
m


View_Compare
m

(Key)s(OtherKey)s
SelectAll
m


#FontChooser
UserControl
C
:Change
:


:Activate
:


_Properties
C
s
*,FixedOnly,ShowStyle=True,ShowPreview=True,ShowLabel=True
_DefaultEvent
C
s
Change
_DefaultSize
C
s
36,36
_Group
C
s
Chooser
SelectedFont
p
s

Value
p
s

FixedOnly
p
b

ShowStyle
p
b

ShowPreview
p
b

ShowLabel
p
b

_new
m


_Change
m


_Activate
m


#GridView
UserControl
C
_Properties
C
s
*,Mode{Select.None;Single;Multiple}=None,Grid=True,ShowCursor=False,Header{GridView.None;Horizontal;Vertical;Both}=None,ScrollBar{Scroll.*}=Both,Border=True,AutoResize=True,Resizable=True,Sorted
_Group
C
s
View
_DefaultEvent
C
s
Click
None
C
i
0
Horizontal
C
i
1
Vertical
C
i
2
Both
C
i
3
Rows
r
_GridView_Rows

Columns
r
_GridView_Columns

Border
p
b

Grid
p
b

Mode
p
i

Data
r
_GridView_Data

Row
p
i

Column
p
i

Resizable
p
b

Scrollbar
p
i

AutoResize
p
b

Header
p
i

ShowCursor
p
b

Current
r
_GridView_Cell

Font
p
Font

Sorted
p
b

ScrollX
p
i

ScrollY
p
i

ScrollW
r
i

ScrollWidth
r
i

ScrollH
r
i

ScrollHeight
r
i

ClientX
r
i

ClientY
r
i

ClientW
r
i

ClientWidth
r
i

ClientH
r
i

ClientHeight
r
i

:KeyPress
:


:Data
:

(Row)i(Column)i
:Change
:


:Select
:


:Click
:


:Activate
:


:Scroll
:


:ColumnClick
:

(Column)i
:RowClick
:

(Row)i
:ColumnResize
:

(Column)i
:RowResize
:

(Row)i
:MouseDown
:


:Sort
:


_new
m


Scroll
m

(X)i(Y)i
_IsRowSelected
m
b
(iRow)i
Select
m

[(Start)i(Length)i]
ScrollArea_Draw
m


Clear
m


_GetSpan
m
Short[]
(iRow)i(iCol)i
_GetCellData
m
_GridView_Data
(iRow)i(iColumn)i[(bCreate)b]
ScrollArea_Arrange
m


_ResizeContents
m


ScrollArea_Enter
m


ScrollArea_Leave
m


ScrollArea_MouseMove
m


MoveTo
m

(Row)i(Column)i
TimerScroll_Timer
m


ScrollArea_MouseDrag
m


ScrollArea_MouseDown
m


UnSelectAll
m


ScrollArea_MouseUp
m


ScrollArea_DblClick
m


_CheckCell
m

(iRow)i(iColumn)i
_CheckCurrent
m


_get
m
_GridView_Cell
(Row)i(Column)i
_EnsureVisible
m

(iRow)i(iCol)i
TimerEnsureVisible_Timer
m


_SelectRow
m

(iRow)i(bSelect)b
_ClearCell
m

(iRow)i(iCol)i
ScrollArea_Scroll
m


_RaiseSelect
m


SelectAll
m


ScrollArea_KeyPress
m


_SetSpan
m

(iRow)i(iCol)i(iRowSpan)i(iColSpan)i
_GetCellWidth
m
i
(iRow)i(iCol)i
_GetCellHeight
m
i
(iRow)i(iCol)i
RowAt
m
i
(Y)i
ColumnAt
m
i
(X)i
_GetVisibleWidth
m
i

_RemoveRows
m

(Start)i(Length)i
_InsertRows
m

(Start)i(Length)i
_GetPreferredWidth
m
i
(iCol)i
_GetPreferredHeight
m
i
(iRow)i
_RaiseRowResize
m

(iRow)i
_RaiseColumnResize
m

(iCol)i
_RaiseSort
m


#IconPanel
UserContainer
C
_Properties
C
s
*,Count{Range:1;256}=1,Index,Text,TextFont,Picture,Border
_Similar
C
s
TabStrip
_IsMultiContainer
C
b
-1
_DefaultEvent
C
s
Click
:Click
:


Count
p
i

Index
p
i

Text
p
s

Picture
p
Picture

Font
p
Font

TextFont
p
Font

Border
p
b

_new
m


_UpdateIconViewWidth
m


Panel_Arrange
m


_get
m
_IconPanelContainer
(Index)i
_GetView
m
GridView

_GetIndex
m
i
(hCont)_IconPanelContainer;
View_Select
m


View_MouseWheel
m


#IconView
UserControl
C
_Properties
C
s
*,Picture,Mode{Select.*}=Single,Orientation{Arrange.Horizontal;Vertical}=Vertical,Sorted,Editable,GridSize{Range:0;128},IconLines{Range:1;8}=2,Border=True,ScrollBar{Scroll.*}=Both
_Group
C
s
View
_DefaultEvent
C
s
Click
_Similar
C
s
ListView
Mode
p
i

Orientation
p
i

Border
p
b

ScrollBar
p
i

Font
p
Font

Background
p
i

Count
r
i

Current
r
_IconView_Item

Item
r
_IconView_Item

Available
r
b

Key
p
s

Compare
p
i

Editable
p
b

Sorted
p
b

Ascending
p
b

Picture
p
Picture

IconSize
r
i

IconLines
p
i

GridSize
p
i

:Select
:


:Activate
:


:Click
:


:Rename
:


:Cancel
:


:Compare
:

(Key)s(OtherKey)s
_new
m


_get
m
_IconView_Item
(Key)s
Clear
m


ScrollArea_Arrange
m


Exist
m
b
(Key)s
FindAt
m
b
(X)i(Y)i
MoveTo
m
b
(Key)s
_FindItem
m
i
(hItem)_IconView_Item;
MoveFirst
m
b

MoveNext
m
b

MovePrevious
m
b

MoveBack
m


_UpdateIconSize
m

(Picture)Picture;
Add
m
_IconView_Item
(Key)s(Text)s[(Picture)Picture;(After)s]
_SortIsDirty
m


Remove
m

(Key)s
_GetItemGeometry
m

(hItem)_IconView_Item;(hRect)Rect;
ScrollArea_Draw
m


ScrollArea_Scroll
m


ScrollArea_Leave
m


_EnsureVisible
m

(iPos)i
UnselectAll
m


SelectAll
m


ScrollArea_KeyPress
m


ScrollArea_DblClick
m


ScrollArea_MouseDown
m


ScrollArea_MouseMove
m


SelTimer_Timer
m


ScrollArea_MouseUp
m


_SelectItem
m

(hItem)_IconView_Item;(bSelected)b
_RefreshItem
m

(hItem)_IconView_Item;
SelectionChanged_Timer
m


_CompareItem
m
b
(sKey1)s(sKey2)s
UpdateSort_Timer
m


_MoveItem
m

(hItem)_IconView_Item;(iNewPos)i
_RenameItem
m

(hItem)_IconView_Item;
RenameBox_Activate
m


RenameBox_KeyPress
m


RenameBox_LostFocus
m


_Begin
m


_End
m


#InputBox

C
_call
M
s
(Prompt)s[(Title)s(Default)s]
#ListContainer
UserContainer
C
_Properties
C
s
*,-Padding,-Spacing,-Arrangement,-AutoResize,-Indent,Border=True
_DefaultArrangement
C
s
V
_DefaultEvent
C
s
Click
:Click
:


:Activate
:


:Scroll
:


Count
r
i

Index
p
i

Current
p
Control

Background
p
i

Border
p
b

_new
m


ScrollView_NewChild
m

(Child)Control;
Child_NewChild
m

(Child)Control;
ScrollView_Scroll
m


Child_Insert
m

(Child)Control;
EnsureVisible
m


Child_MouseDown
m


Child_MouseMove
m


Child_MouseUp
m


Child_Timer
m


Child_DblClick
m


Select
m

(hChild)Control;
Clear
m


Lock
m


Unlock
m


ScrollView_KeyPress
m


#MaskBox
TextBox
C
_Properties
C
s
*,-Password,-MaxLength,Action,Mask
_Similar
C
s
TextBox
_DrawWith
C
s
TextBox
Mask
p
s

_new
m


TextBox_KeyPress
m


TextBox_GotFocus
m


TextBox_Change
m


TextBox_LostFocus
m


TextBox_Menu
m


#MenuButton
UserControl
C
_Properties
C
s
*,Action,AutoResize,Text,Picture,Arrow=True,Border=True,Menu,MenuOnly
_DefaultSize
C
s
6,4
_Similar
C
s
Button
_DefaultEvent
C
s
Click
:Click
:


Picture
p
Picture

Text
p
s

Menu
p
s

Arrow
p
b

MenuOnly
p
b

Value
p
b

AutoResize
p
b

Border
p
b

_new
m


Button_GotFocus
m


Button_Click
m


Arrow_Click
m


DrawingArea_GotFocus
m


DrawingArea_LostFocus
m


DrawingArea_Enter
m


DrawingArea_Leave
m


DrawingArea_MouseDown
m


DrawingArea_MouseUp
m


DrawingArea_MouseMove
m


DrawingArea_Draw
m


DrawingArea_KeyPress
m


DrawingArea_KeyRelease
m


#Message

C
Optional
M
i
(Message)s(Button)s(Key)s[(Icon)s(Force)b]
#ScrollArea
UserContainer
C
_Properties
C
s
*,Border=True,ScrollBar{Scroll.*}=Both,Painted,Focus,NoBackground,Tablet
_DefaultEvent
C
s
Draw
_DefaultSize
C
s
24,24
_Similar
C
s
DrawingArea,ScrollView
ScrollX
p
i

ScrollY
p
i

ScrollWidth
r
i

ScrollW
r
i

ScrollHeight
r
i

ScrollH
r
i

Border
p
b

Focus
p
b

Painted
p
b

NoBackground
p
b

ScrollBar
p
i

Tracking
p
b

Background
p
i

Tablet
p
b

Shadow
p
b

View
r
DrawingArea

:Scroll
:


:Draw
:


Scroll
m

(X)i(Y)i
_new
m


ScrollArea_Arrange
m


ResizeContents
m

(Width)i(Height)i
DrawingArea_Draw
m


Scrollbar_Change
m


DrawingArea_MouseWheel
m


EnsureVisible
m

(X)i(Y)i(W)i(H)i
_SetShadowOffset
m

(North)i(South)i(West)i(East)i
#SidePanel
UserContainer
C
_Properties
C
s
*,Action,Orientation{Align.Top;Bottom;Left;Right}=Top,Resizable=True,Border,Separator,Transparent,Hidden
_Similar
C
s
Panel
:Show
:


:Hide
:


:Resize
:


Orientation
p
i

Border
p
b

Separator
p
b

Hidden
p
b

Resizable
p
b

Dimension
p
i

Tooltip
p
s

Value
p
b

Action
p
s

Design
p
b

Settings
p
Variant[]

Transparent
p
b

_new
m


_Show
m


_Hide
m


_Resize
m


#Stock

C
Debug
P
b

List
R
String[]

Themes
R
String[]

Icons
R
String[]

GetSize
M
i
(Size)s
_get
M
Picture
(Key)s[(Default)s]
Refresh
M


#TabPanel
UserContainer
C
_Properties
C
s
*,Border=True,Count{Range:1;256}=1,Index,Text,TextFont,Picture,Orientation{Align.Top;Bottom}=Top,Closable,Highlight
_Similar
C
s
TabStrip
_IsMultiContainer
C
b
-1
_DefaultEvent
C
s
Click
:Click
:


:Close
:

(Index)i
Index
p
i

Count
p
i

Text
p
s

Picture
p
Picture

Font
p
Font

TextFont
p
Font

Border
p
b

Orientation
p
i

Highlight
p
b

Closable
p
b

Current
r
_TabPanelContainer

_new
m


_EnsureCurrentVisible
m


TabBar_Arrange
m


Remove
m

(Index)i
_get
m
_TabPanelContainer
(Index)i
_GetIndex
m
i
(hCont)Control;
_GetButton
m
_TabPanelButton
(iIndex)i
TabBarContainer_Draw
m


TabBar_Draw
m


_GetBackground
m
i

TabBar_MouseDown
m


TabBar_DblClick
m


Panel_Draw
m


Panel_Arrange
m


_SetVisible
m

(Index)i(bVisible)b
_MoveNext
m


_MovePrevious
m


_IsVisible
m
b
(Index)i
_GetFirstIndex
m
i

_Close
m

(Index)i
TabBarContainer_KeyPress
m


#TableView
GridView
C
_Properties
C
s
*,NoKeyboard
_Group
C
s
View
_Similar
C
s
GridView
:Save
:

(Row)i(Column)i(Value)s
:Insert
:


:Click
:


Editor
r
Control

NoKeyboard
p
b

_new
m


Save
m
b

Cancel
m


GridView_MouseDown
m


GridView_RowResize
m

(Row)i
GridView_ColumnResize
m

(Column)i
GridView_Scroll
m


GridView_Resize
m


GridView_Hide
m


GridView_Change
m


Edit
m

[(List)String[];(ReadOnly)b]
EditWith
m

(Editor)Control;
Editor_Activate
m


Editor_Click
m


Editor_KeyPress
m


Timer_Timer
m


#ToolPanel
UserContainer
C
_Properties
C
s
*,Count{Range:1;256}=1,Index,Text,TextFont,Picture,Animated,Border
_Similar
C
s
TabStrip
_IsMultiContainer
C
b
-1
:Click
:


Count
p
i

Index
p
i

Text
p
s

Picture
p
Picture

Animated
p
b

Font
p
Font

TextFont
p
Font

Border
p
b

_new
m


ToolPanelContainer_Change
m


ToolPanel_Resize
m


_get
m
ToolPanelContainer
(Index)i
#ValueBox
UserControl
C
_Properties
C
s
*,Action,Text,Type{ValueBox.*}=Number,Value,ReadOnly,Border=True
_DefaultSize
C
s
24,4
_Similar
C
s
TextBox
Type
p
i

Value
p
v

Border
p
b

ReadOnly
p
b

Text
p
s

Number
C
i
0
Date
C
i
1
Time
C
i
2
Currency
C
i
3
DateTime
C
i
4
IPAddress
C
i
5
_new
m


NumberBox_KeyPress
m


NumberBox_Change
m


#Wizard
UserContainer
C
_Properties
C
s
*,Count{Range:1;256}=1,Index,Text,TextFont,Picture,ShowTitle=True,ShowIndex=False,Border=True
_DefaultEvent
C
s
Change
_Similar
C
s
TabStrip
_IsMultiContainer
C
b
-1
:BeforeChange
:


:Change
:


:Cancel
:


:Click
:


:Close
:


Count
p
i

Index
p
i

LastIndex
r
i

Text
p
s

Picture
p
Picture

ShowTitle
p
b

ShowIndex
p
b

Border
p
b

TextFont
p
Font

_new
m


WizardContainer__Refresh
m


_get
m
_WizardContainer
(Index)i
Wizard_Previous
m


Wizard_Next
m


Wizard_Cancel
m


#_DateChooser_Colors

CA
_Calendar
v
FCalendar

Clear
m


_put
m

(Color)i(Date)d
_get
m
i
(Date)d
#_DateChooser_Data

C
Foreground
v
i

Background
v
i

Text
v
s

Font
p
Font

#_DateChooser_Date

C
Background
p
i

Foreground
p
i

Text
p
s

Font
p
Font

_Date
v
d

_View
v
DateChooser

#_GridView_Cell

C
:_Foo
:


Text
p
s

RichText
p
s

Picture
p
Picture

Font
p
Font

Alignment
p
i

WordWrap
p
b

Background
p
i

Foreground
p
i

Padding
p
i

RowSpan
p
i

ColumnSpan
p
i

X
r
i

Left
r
i

Y
r
i

Top
r
i

Width
r
i

W
r
i

Height
r
i

H
r
i

_Row
v
i

_Column
v
i

_View
v
GridView

Refresh
m


Clear
m


EnsureVisible
m


#_GridView_Column

C
X
r
i

Left
r
i

Width
p
i

W
p
i

Text
p
s

Title
p
s

Resizable
p
b

Expand
p
b

Alignment
p
i

Background
p
i

:_Refresh
:


_X
v
i

_W
v
i

_Column
v
i

_new
m


_GetExplicitWidth
m
i

#_GridView_Columns

C
Count
p
i

Max
r
i

Height
r
i

H
r
i

Resizable
p
b

Width
p
i

W
p
i

Sort
p
i

Ascending
p
b

:_Refresh
:


_Layout
m


Column__Refresh
m


_get
m
_GridView_Column
(Index)i
_GetWidth
m
i

_FindColumnFromPos
m
i
(X)i
#_GridView_Data

C
Text
v
s

RichText
v
s

Picture
v
Picture

Alignment
v
i

Padding
v
i

WordWrap
v
b

Foreground
v
i

Background
v
i

Font
p
Font

#_GridView_Row

C
:_Refresh
:


Y
r
i

Top
r
i

Height
p
i

H
p
i

Selected
p
b

Text
p
s

Title
p
s

_Row
v
i

Refresh
m


#_GridView_Rows

C
Count
p
i

Max
r
i

Width
p
i

W
p
i

Resizable
p
b

Height
p
i

H
p
i

Selection
r
Integer[]

:_Refresh
:


_GetSel
m
GridViewSelection

Remove
m

(Start)i[(Length)i]
_get
m
_GridView_Row
(Row)i
_GetDefaultRowHeight
m
i

_GetRowY
m
i
(iRow)i
_GetRowHeight
m
i
(iRow)i
_ResetRowHeight
m

(iRow)i
_SetRowHeight
m

(iRow)i(H)i
_GetHeight
m
i

_FindRowFromPos
m
i
(Y)i
_GetRowText
m
s
(iRow)i
_SetRowText
m

(iRow)i(sText)s
Select
m

[(Start)i(Length)i]
UnSelect
m

[(Start)i(Length)i]
SelectAll
m


UnSelectAll
m


_IsSelected
m
b
(iRow)i
_SaveSelection
m
GridViewSelection

_RestoreSelection
m

(hSel)GridViewSelection;
Insert
m

(Start)i[(Length)i]
_Clear
m


#_IconPanelContainer
UserControl
C
Text
p
s

Picture
p
Picture

Container
r
Container

_new
m


#_IconView_Item

C
Key
r
s

Picture
p
Picture

Text
p
s

Selected
p
b

Editable
p
b

X
r
i

Y
r
i

W
r
i

H
r
i

Width
r
i

Height
r
i

_Key
v
s

:_Foo
:


_new
m


_GetTextRect
m
Rect
(hRect)Rect;(bHorizontal)b
_Draw
m

(hRect)Rect;(hClip)Rect;(hIconView)IconView;(bHorizontal)b(bFocus)b(bHover)b
EnsureVisible
m


_Inside
m
b
(hRect)Rect;(hIconView)IconView;(bHorizontal)b(X)i(Y)i
_compare
m
i
(hItem)_IconView_Item;
Rename
m


MoveAfter
m

[(Key)s]
MoveFirst
m


MoveBefore
m

[(Key)s]
MoveLast
m


_IsEllipsized
m
b

#_TabPanelContainer
UserControl
C
Text
p
s

Picture
p
Picture

Visible
p
b

_new
m


_Delete
m


Delete
m


#_WizardContainer
UserControl
C
:_Refresh
:


Text
p
s

Picture
p
Picture

Container
r
Container

_new
m


