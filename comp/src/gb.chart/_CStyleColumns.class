' Gambas class file

PRIVATE $iType AS Integer

PUBLIC SUB _New(Value AS Integer)
  
  $iType = Value
  
END

PUBLIC SUB Draw(CX AS Integer, CY AS Integer, CW AS Integer, CH AS Integer)
  DIM oSerie AS _CSerie
  DIM cnt AS Integer
  DIM fMaxVal AS Float
  DIM itmp AS Float
  DIM i, j AS Integer
  DIM f AS Float
  DIM YHeadersW AS Integer
  DIM iTwoLetterHeight AS Integer = draw.Font.Height() * 2 * Chart._fProportionnal
  DIM fTabPos AS Float
  DIM iXUnit AS Float
  DIM iStaticSpace AS Integer = 5 * Chart._fProportionnal
  DIM hRect AS NEW CRect
  DIM hUnits AS CPoint
  DIM fCumul AS Float
  DIM fPrevCumul AS Float
  'Get the maxValue for Y Labels width and value
  
  ' FOR i = 0 TO Chart.DataSet[0].Data.Max
  '   itmp = Chart.DataSet[0].Data[i]
  '   IF fMaxVal < itmp THEN fMaxVal = itmp
  '   IF cnt < draw.TextWidth(itmp & "  ") THEN cnt = draw.TextWidth(itmp & "  ")
  ' NEXT 
  draw.Font.Size = 11 * Chart._fProportionnal
  
  SELECT CASE $iType
    CASE ChartType.Columns, ChartType.ColumnsLineCombination
      fMaxVal = MTools.GetChartMaxValue(Chart)
    CASE ChartType.ColumnsStacked
      fMaxVal = MTools.GetChartMaxCumulate(Chart)
    CASE ChartType.ColumnsPercent
      fMaxVal = 100
  END SELECT
  IF fMaxVal = 0 THEN RETURN 
  cnt = draw.TextWidth(fMaxVal & "00")
  'Get the max width needed for draw the Y labels
  YHeadersW = CX + iStaticSpace + cnt + iStaticSpace * 2
  
  'Set the graph square position value
  hRect.Top = CY + iTwoLetterHeight
  hRect.Bottom = CY + CH - iTwoLetterHeight
  hRect.Left = YHeadersW
  hRect.Right = CX + CW - YHeadersW
  'Draw the background
  Draw.ForeColor = Color.LightGray
  Draw.FillColor = Color.LightGray
  Draw.FillStyle = Fill.Solid
  Draw.Rect(hRect.Left, hRect.Top, hRect.Right - hRect.Left, hRect.Bottom - hRect.Top)
  Draw.ForeColor = Color.Black
  
  hUnits = MTools.DrawChartAxes(Chart, hRect, 0, fMaxVal, Align.Center)
  
  SELECT CASE $iType
    CASE ChartType.Columns
      fTabPos = hRect.Left + hUnits.x / 2
      FOR EACH oSerie IN Chart
        FOR i = 0 TO Chart.Count - 1
          draw.ForeColor = Color.DarkGray
          Draw.FillStyle = Fill.Solid
          Draw.FillColor = Chart.Colors[i]
          draw.Rect(fTabPos + i * (hUnits.X - 1), hRect.Bottom, hUnits.X, oSerie[i] * - hUnits.y)
        NEXT
        fTabPos += i * hUnits.x + hUnits.x
      NEXT
    CASE ChartType.ColumnsStacked, ChartType.ColumnsPercent
      hUnits.X = (hRect.Right - hRect.Left) / (Chart.CountDataSets * 2)
      fTabPos = hRect.Left + hUnits.x / 2
      FOR EACH oSerie IN Chart
        fCumul = hRect.Bottom + 1
        IF $iType = ChartType.ColumnsPercent THEN 
          fMaxVal = 0
          FOR i = 0 TO Chart.Count - 1
            fMaxVal += oSerie[i]
          NEXT
        ENDIF
        IF fMaxVal = 0 THEN RETURN 
        FOR i = 0 TO Chart.Count - 1 
          IF $iType = ChartType.ColumnsPercent THEN             
            f = ((oSerie[i] / fMaxVal * 100) * - hUnits.y) - 1
          ELSE 
            f = (oSerie[i] * - hUnits.y) - 1
          ENDIF
          draw.ForeColor = Color.DarkGray
          Draw.FillStyle = Fill.Solid
          Draw.FillColor = Chart.Colors[i]
          draw.Rect(fTabPos, fCumul, hUnits.X, f)
          fCumul += f + 1
          
        NEXT
        'fPrevCumul = fCumul * hUnits.Y
        fTabPos += hUnits.x * 2
      NEXT
  END SELECT
  'MTools.DrawSymbol(5, 15, 15)
END
