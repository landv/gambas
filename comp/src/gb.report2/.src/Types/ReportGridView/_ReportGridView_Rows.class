' Gambas class file

Export
Property Count As Integer
Property Height As String
Property Width As String
Property Read _Width As Float


Private $cText As Collection
Private $cHeight As Collection
Private _cHeight As Collection
Private $sBaseHeight As String = "5mm"
Public _Height As Float
Private $fWidth As Float
Private $iCount As Integer
'Public _Height As Float
Event Foo


Private Function GetView() As ReportGridView
  
  Return Object.Parent(Me)
  
End

Public Sub _get(Index As Integer) As _ReportGridView_Row
  
  Dim hRow As New _ReportGridView_Row As "Row"
  hRow._Row = Index
  Return hRow
  
End

Public Sub _GetHeight(iRow As Integer) As Float
  
  Try Return _cHeight[iRow]
  Return _Height
  
End

Public Sub _GetRowHeight(iRow As Integer) As String
  
  Try Return $cHeight[iRow]
  Return $sBaseHeight
  
End



Public Sub _SetRowHeight(iRow As Integer, H As String) 
  
   'H = Min(1024, H)
  
  If Not $cHeight Then 
    $cHeight = New Collection
    _cHeight = New Collection
    '$aHeight = New Integer[]
  Endif
  $cHeight[iRow] = H
End

Public Sub _NormalizeUnits()
  
  Dim s As String
  If $cHeight Then
    For Each s In $cHeight
      _cHeight[$cHeight.Key] = TSizeParse[s].ToInch()
    Next
  Endif
  _Height = TSizeParse[$sBaseHeight].ToInch()
End

Private Function Count_Read() As Integer

  Return $iCount

End

Private Sub Count_Write(Value As Integer)

  $iCount = Value

End

Private Function Height_Read() As String

  Return $sBaseHeight

End

Private Sub Height_Write(Value As String)

  $sBaseHeight = Value

End

Public Sub Row_Foo()
  
  
  
End

Private Function Width_Read() As String

  

End

Private Sub Width_Write(Value As String)

  

End

Private Function _Width_Read() As Float
  Dim fWidth As Float
  With GetView()
    If $iCount Then
      If .Header = .Vertical Or If .Header = .Both Then 
        If $fWidth Then
          Return $fWidth
        Else
          fWidth = Me.Report._FromPixelsels(Max(Paint.Font.TextWidth("9"), Paint.Font.TextWidth("0")) * (2 + CInt(Log10(Max(1, $iCount))))) '+ fPadding * 2 + 2
          Return Max(fWidth, $fWidth)
        Endif
      Endif
    Endif
End With
  

End

Public Sub _GetRowText(iRow As Integer) As String
  
  Dim sText As String
  
  If $cText Then sText = $cText[iRow]
  If Not sText Then sText = CStr(iRow + 1)
  Return sText
  
End

Public Sub _SetRowText(iRow As Integer, sText As String)
  
  Dim W As Integer
  
  If Not $cText Then $cText = New Collection
  $cText[iRow] = sText
  If sText Then
    W = TSizeParse[Str(Paint.TextSize(sText).Width) & "px"].ToInch()
    If W > Me._Width Then $fWidth = W
  Endif
  
End
