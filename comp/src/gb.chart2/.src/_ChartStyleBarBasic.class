' Gambas class file

Inherits _ChartStyleBar
Property Read Symbols As String[] Use $aSymbols
Private $bYShowInterLines As Boolean
Private $bShowValues As Boolean
Private $fBarWidth As Float = 1.0
Private $oBarFont As Font
Private $fSeriesPadding As Float
Public Sub _new()
  
  $aSymbols = Super.Symbols.Insert(["Y_ShowInterLines", "ShowValues", "BarWidth", "BarFont"])
  $aSymbols.ReadOnly = True
  $oBarFont = New Font
End


Public Sub _get(Symbol As String) As Variant

  Select Case Symbol
    Case "Y_ShowInterlines"
      Return $bYShowInterLines
      Case "ShowValues"
        Return $bShowValues
      Case "BarWidth"
        Return $fBarWidth
      Case "BarFont"
        Return $oBarFont

    Case Else
      Return Super[Symbol]

  End Select

End


Public Sub _put(Value As Variant, Symbol As String)


  Select Case Symbol
  Case "Y_ShowInterlines"
    $bYShowInterLines = Value
  Case "ShowValues"
    $bShowValues = Value
  Case "BarWidth"
    $fBarWidth = Min(Max(Value, 0.1), 1.0)
  Case "BarFont"
    $oBarFont = Value

    Case Else
      Super[Symbol] = Value
  End Select

End

Public Sub _PaintContent(hParam As Collection)

  Dim hChart As Chart = Me._GetParent()

  Dim i As Integer
  Dim fBarH As Float
  Dim j As Integer
  Dim fX As Float
  Dim fBarW As Float = hParam!BarWidth * $fBarWidth
  Dim fCenter As Float = hParam!Rect.Top + hParam!Center
  Dim H As Integer
  Dim fStart As Float
  Dim f As Float
  
  Paint.Background = Color.Black
  fStart = IIf(hParam!YMinValue > 0, hParam!YMinValue, 0)
  For j = 0 To hChart.Datas.Max
    fX = hParam!SeriesWidth * J + hParam!SeriesPadding

  For i = 0 To hChart.Datas[j].Values.Max
    f = hChart.Datas[j].Values[i]
    If f > 0 Then
    fBarH = Max(hParam!UnitHeight * f - fStart * hParam!UnitHeight, 0)
    Else
    fBarH = Min(hParam!UnitHeight * f - fStart * hParam!UnitHeight, 0)
    Endif
    
    Paint.FillRect(fX + hParam!Rect.Left + hParam!BarWidth * i + (hParam!BarWidth - fBarW) / 2, fCenter - fBarH, fBarW, fBarH, hChart.Colors[i Mod hChart.Colors.count])
    
    
    If $bShowValues Then
      Paint.Font = $oBarFont
      Paint.font.Size = Paint.Font.Size * hParam!Ratio
      
      If fBarH < 0 Then 
        H = Paint.Font.H
      Else 
        H = 0
      Endif
      
      Paint.DrawText(f, fX + hParam!Rect.Left + hParam!BarWidth * i, fCenter - fBarH - Paint.Font.H + H, hParam!BarWidth, Paint.Font.H, Align.center)
      
    Endif
  Next
Next


End





Private Function Symbols_Read() As String[]

  

End
