' Gambas class file

' Gambas class file



Private CSI As String = Chr(27) & "["
Property Read Modified As Boolean

Property ColorMode As Integer 
Property Foreground As Integer
Property Background As Integer 
Property Bold As Boolean
Property Dim As Boolean 
Property Underline As Boolean 
Property Reverse As Boolean 
Property Blink As Boolean 
Private Enum FLAG_BG, FLAG_FG, FLAG_BOLD, FLAG_DIM, FLAG_REV, FLAG_UND, FLAG_BLK
'Private Enum FLAG_BOLD, FLAG_DIM, FLAG_UND, FLAG_REV, FLAG_BLK, FLAG_FG, FLAG_BG

Private $aModified As New Boolean[8]
Private $aValues As New Boolean[5]

Private $iColorMode As Integer = Color.Default
Private $iForeground As Integer
Private $iBackGround As Integer
Private $bBold As Boolean
Private $bDim As Boolean
Private $bReverse As Boolean
Private $bUnderline As Boolean
Private $bBlink As Boolean




Public Sub _new()
  
  $iForeground = Color.Black
  $iBackGround = Color.White
  
End


Private Function Modified_Read() As Boolean

  Dim b As Boolean

  For Each b In $aModified
    If b Then Return True
  Next

End



Private Function Foreground_Read() As Integer

  Return $iForeground

End

Private Sub Foreground_Write(Value As Integer)

  If $iForeground <> Value Then $aModified[FLAG_FG] = True
  $iForeground = Value

End

Private Function Background_Read() As Integer

  Return $iBackGround

End

Private Sub Background_Write(Value As Integer)

  If $iBackGround <> Value Then $aModified[FLAG_BG] = True
  $iBackGround = Value
End

Private Function Bold_Read() As Boolean

  Return $bBold

End

Private Sub Bold_Write(Value As Boolean)

  If $bBold <> Value Then 
    $aModified[FLAG_BOLD] = True
  Endif
  $bBold = Value

End

Private Function Dim_Read() As Boolean

  Return $bDim

End

Private Sub Dim_Write(Value As Boolean)

  If $bDim <> Value Then $aModified[FLAG_DIM] = True
  $bDim = Value

End

Private Function Underline_Read() As Boolean

  Return $bUnderline

End

Private Sub Underline_Write(Value As Boolean)

  If $bUnderline <> Value Then $aModified[FLAG_UND] = True
  $bUnderline = Value

End

Private Function Reverse_Read() As Boolean

  Return $bReverse

End

Private Sub Reverse_Write(Value As Boolean)

  If $bReverse <> Value Then $aModified[FLAG_REV] = True
  $bReverse = Value

End

Private Function Blink_Read() As Boolean

  Return $bBlink

End

Private Sub Blink_Write(Value As Boolean)

  If $bBlink <> Value Then $aModified[FLAG_BLK] = True
  $bBlink = Value

End




Private Function ColorMode_Read() As Integer

  Return $iColorMode

End

Private Sub ColorMode_Write(Value As Integer)

  $iColorMode = Value
  '$bModified = True

End

Public Sub Send()

  Print Me._GetString();
  
End

Public Function _GetString() As String
  
    Dim sValue As String
  If $aModified[FLAG_BOLD] Then sValue &= IIf($bBold, "1;", "22;")
  If $aModified[FLAG_DIM] Then sValue &= IIf($bDim, "8;", "28;")
  If $aModified[FLAG_BLK] Then sValue &= IIf($bBlink, "5;", "25;")
  If $aModified[FLAG_UND] Then sValue &= IIf($bUnderline, "4;", "24;")
  If $aModified[FLAG_REV] Then sValue &= IIf($bReverse, "7;", "27;")
  
  If $aModified[FLAG_FG] Then
    Select Case $iColorMode
      Case Color.Default
        sValue &= (30 + Max(Min($iForeground, 8), 0)) & ";"
      Case Color.Mode256
         sValue &= "38;5;" & Max(Min($iForeground, 255), 0) & ";"
      Case Color.ModeRGB
        sValue &= "38;2;" & Subst("&1;&2;&3;", GetRed($iForeGround), GetGreen($iForeground), GetBlue($iForeground))
    End Select
  Endif
  
  If $aModified[FLAG_BG] Then
    Select Case $iColorMode
      Case Color.Default
        sValue &= (40 + Max(Min($iBackGround, 8), 0)) & ";"
      Case Color.Mode256
         sValue &= "48;5;" & Max(Min($iBackGround, 255), 0) & ";"
      Case Color.ModeRGB
        sValue &= "48;2;" & Subst("&1;&2;&3;", GetRed($iBackGround), GetGreen($iBackGround), GetBlue($iBackGround))
    End Select
  Endif
  
  
  
  
  
  If Not sValue Then Return
  
  If sValue Ends ";" Then sValue = Left(sValue, -1)
  
  sValue = CSI & sValue & "m"
  
  $aModified = New Boolean[8]
  'Debug sValue
  Return sValue
  
End


Private Function GetRed(iValue As Integer) As Integer
  
  Return Lsr(iValue, 16) And 255
  
End

Private Function GetGreen(iValue As Integer) As Integer
  
  Return Lsr(iValue, 8) And 255
  
End

Private Function GetBlue(iValue As Integer) As Integer
  
  Return iValue And 255
  
End


Public Sub FillFrom(iAttr As Integer)

  If BTst(iAttr, FLAG_BG) Then
    Me.Background = Lsr(iAttr, 16) And 255
  Else
    Me.Background = 0
  Endif

  If BTst(iAttr, FLAG_FG) Then
    Me.Foreground = Lsr(iAttr, 24) And 255
  Else
    Me.Foreground = 0
  Endif
  
  Me.Bold = BTst(iAttr, FLAG_BOLD)
  Me.Dim = BTst(iAttr, FLAG_DIM)
  Me.Reverse = BTst(iAttr, FLAG_REV)
  Me.Underline = BTst(iAttr, FLAG_UND)
  Me.Blink = BTst(iAttr, FLAG_BLK)
  
End


Public Sub Reset()
  
  $iForeground = -1
  $iBackGround = -1
  $bBold = False
  $bDim = False
  $bUnderline = False
  $bReverse = False
  $bBlink = False
  $aModified = New Boolean[8]
  Print CSI & "0m";
  
End

Public Sub IsVoid() As Boolean
  
  If $iForeground >= 0 Then Return
  If $iBackground >= 0 Then Return
  If $bBold Or If $bDim Or If $bUnderline Or If $bReverse Or If $bBlink Then Return
  Return True
  
End
