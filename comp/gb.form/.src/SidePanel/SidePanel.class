' Gambas class file

Export
Inherits UserContainer

Public Const _Properties As String = "*,Action,Orientation{Align.Top;Bottom;Left;Right}=Top,Resizable=True,Border,Separator,Transparent,Hidden"
Public Const _Similar As String = "Panel"

Event Show
Event Hide
Event Resize

Property Orientation As Integer
Property Border As Boolean
Property Separator As Boolean
Property Hidden As Boolean
Property Resizable As Boolean
Property Dimension As Integer
Property Tooltip As String
Property Value As Boolean
Property Action As String
Property Design As Boolean
Property Settings As Variant[]
Property Transparent As Boolean
Property MinSize As Integer

Private $hForm As FSidePanel

Public Sub _new()

  $hForm = New FSidePanel(Me)
  $hForm.Move(0, 0)
  'Object.Attach($hForm, ME, "Form")
  Me._Container = $hForm.GetContainer()

End

Private Function Orientation_Read() As Integer

  Return $hForm.GetOrientation()

End


Private Sub Orientation_Write(iOrientation As Integer)

  $hForm.SetOrientation(iOrientation)

End


Private Function Border_Read() As Boolean

  Return $hForm.GetContainer().Border <> Border.None

End

Private Sub Border_Write(bBorder As Boolean)

  $hForm.GetContainer().Border = If(bBorder, Border.Sunken, Border.None)

End

Private Function Hidden_Read() As Boolean

  Return $hForm.IsHidden()

End

Private Sub Hidden_Write(bHidden As Boolean)

  $hForm.SetHidden(bHidden)

End

Private Function Dimension_Read() As Integer

  Return $hForm.GetDimension()

End


Private Function Resizable_Read() As Boolean

  Return Not $hForm.IsFixed()

End

Private Sub Resizable_Write(bResizable As Boolean)

  $hForm.SetFixed(Not bResizable)

End

Public Sub _Show()

  Raise Show

End

Public Sub _Hide()

  Raise Hide

End


Public Sub _Resize()

  Raise Resize

End


Private Sub Dimension_Write(Value As Integer)

  $hForm.SetDimension(Value)  

End

Private Function Tooltip_Read() As String

  Return $hForm.GetTooltip()  

End

Private Sub Tooltip_Write(Value As String)

  $hForm.SetTooltip(Value)

End

Private Function Action_Read() As String

  Return Super.Action

End

Private Sub Action_Write(Value As String)

  Super.Action = Value

End

Private Function Value_Read() As Boolean

  Return Not Hidden_Read()  

End

Private Sub Value_Write(Value As Boolean)

  Hidden_Write(Not Value)

End

Private Function Design_Read() As Boolean

  Return Super.Design  

End

Private Sub Design_Write(Value As Boolean)

  Super.Design = Value
  $hForm.SetDesign  

End


Private Function Settings_Read() As Variant[]

  Return [CVariant(Hidden_Read()), Dimension_Read(), Transparent_Read()]

End

Private Sub Settings_Write(Value As Variant[])

  Try Transparent_Write(Value[2])
  Try Hidden_Write(Value[0])
  Try Dimension_Write(Value[1])

End

Private Function Separator_Read() As Boolean

  Return $hForm.HasSeparator()

End

Private Sub Separator_Write(Value As Boolean)

  $hForm.SetSeparator(Value)

End

Private Function Transparent_Read() As Boolean

  Return $hForm.IsTransparent()

End

Private Sub Transparent_Write(Value As Boolean)

  $hForm.SetTransparent(Value)

End

Private Function MinSize_Read() As Integer

  Return $hForm.GetMinSize()

End

Private Sub MinSize_Write(Value As Integer)

  $hForm.SetMinSize(Value)

End
