#Balloon

C
Control
R
Control

Delay
P
i

Font
P
Font

Visible
R
b

_call
M

(Message)s(Control)Control;[(Icon)Picture;(X)i(Y)i]
Info
M

(Message)s(Control)Control;[(X)i(Y)i]
Warning
M

(Message)s(Control)Control;[(X)i(Y)i]
Error
M

(Message)s(Control)Control;[(X)i(Y)i]
Question
M

(Message)s(Control)Control;[(X)i(Y)i]
Delete
M

(Message)s(Control)Control;[(X)i(Y)i]
Hide
M

[(Control)Control;]
#ButtonBox
UserControl
C
_Properties
C
s
"*,Action,Text,Alignment{Align.Normal;Left;Center;Right}=Normal,Picture,ReadOnly,Border=True,Button=True,ClearButton,Filter,FilterMenu{Menu}"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"24,4"
_Similar
C
s
"TextBox"
:Click
:


:Change
:


:Activate
:


:Clear
:


:Filter
:


Picture
p
Picture

Text
p
s

Pos
p
i

Length
r
i

ReadOnly
p
b

Border
p
b

Editor
r
MaskBox

Button
p
b

Alignment
p
i

ClearButton
p
b

Filter
p
b

FilterMenu
p
s

_new
m


Button_Click
m


Background_GotFocus
m


Clear
m


Background_Arrange
m


Background_Draw
m


TextBox_GotFocus
m


TextBox_LostFocus
m


TextBox_Activate
m


TextBox_Change
m


_AddButton
m

(hButton)ToolButton;
ClearButton_Click
m


FilterTimer_Timer
m


FilterPictureBox_MouseDown
m


FilterNow
m


#ColorButton
UserControl
C
:Change
:


Color
p
i

Value
p
i

_Properties
C
s
"*,Value{Color}"
_DefaultEvent
C
s
"Change"
_DefaultSize
C
s
"8,4"
_new
m


Button_Click
m


Button_Resize
m


#ColorChooser
UserControl
C
:Change
:


:Activate
:


_Properties
C
s
"*,Border=True,ShowAlpha,ShowColorMap=True,ShowCustom"
_DefaultEvent
C
s
"Change"
_DefaultSize
C
s
"36,36"
_Group
C
s
"Chooser"
SelectedColor
p
i

Value
p
i

ShowAlpha
p
b

ShowColorMap
p
b

ShowCustom
p
b

Border
p
b

_new
m


_RaiseChange
m


_RaiseActivate
m


#ColorPalette
UserControl
C
_Properties
C
s
"*,Border=True,ReadOnly"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"36,4"
_Group
C
s
"Chooser"
:Click
:


:Activate
:


Border
p
b

Colors
p
Integer[]

Index
p
i

Current
p
i

ReadOnly
p
b

_new
m


Clear
m


Add
m

(Color)i
AddFirst
m

(Color)i
Exist
m
b
(Color)i
View_Draw
m


View_MouseDown
m


View_MouseMove
m


View_Menu
m


View_DblClick
m


View_Leave
m


View_Scroll
m


View_Arrange
m


mnuRemove_Click
m


mnuRemoveAll_Click
m


mnuSort_Click
m


#Completion

C
:Activate
:


List
v
String[]

Icons
v
String[]

Start
v
i

Delay
p
i

Editor
p
Control

_new
m

(hCtrl)Control;
Open
m


Timer_Timer
m


TextBox_Change
m


TextBox_KeyPress
m


GridView_MouseUp
m


Fill
m

(Text)s(Explicit)b
TextBox_Hide
m


TextBox_Move
m


TextBox_Resize
m


TextBox_LostFocus
m


GridView_GotFocus
m


GridView_Data
m

(Row)i(Column)i
Window_Move
m


#DateBox
UserControl
C
_Properties
C
s
"*,Action,Value,ReadOnly,Border=True,Mode{DateChooser.*}=DateOnly"
_DefaultSize
C
s
"24,4"
_Similar
C
s
"TextBox"
_Group
C
s
"Chooser"
:Activate
:


:Click
:


:Change
:


Value
p
d

ReadOnly
p
b

Border
p
b

Mode
p
i

_new
m


ButtonBox_Click
m


ButtonBox_KeyPress
m


ButtonBox_Activate
m


ButtonBox_Change
m


PopupWindow_Open
m


DateChooser_Activate
m


DateChooser_Cancel
m


#DateChooser
UserControl
C
Value
p
d

Year
p
i

Month
p
i

Day
p
i

Font
p
Font

Colors
r
_DateChooser_Colors

Mode
p
i

Data
r
_DateChooser_Data

Border
p
b

MinValue
p
d

MaxValue
p
d

DateOnly
C
i
0
DateTime
C
i
1
TimeOnly
C
i
2
:Change
:


:Activate
:


:Cancel
:


:Data
:

(Date)d
_Properties
C
s
"*,Border=True,Mode{DateChooser.*}=DateOnly"
_DefaultEvent
C
s
"Change"
_DefaultSize
C
s
"40,28"
_Group
C
s
"Chooser"
_new
m


_Change
m


_Activate
m


_Cancel
m


SetFocus
m


_get
m
_DateChooser_Date
(Date)d
_GetData
m
_DateChooser_Data
(dDate)d[(bCreate)b]
#DirBox
UserControl
C
_Properties
C
s
"*,Action,Border=True"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"32,4"
_Similar
C
s
"TextBox"
_Group
C
s
"Chooser"
:Click
:


:Change
:


Value
p
s

Border
p
b

_new
m


Button_Click
m


#DirChooser
UserControl
C
_Properties
C
s
"*,Border=True,Root,Picture,ShowHidden,ShowFile,ShowDetailed,ShowPreview,ShowBookmark=True,ShowSplitter=True"
_DefaultEvent
C
s
"Change"
_DefaultSize
C
s
"36,36"
_Group
C
s
"Chooser"
Root
p
s

Picture
p
Picture

SelectedPath
p
s

Value
p
s

ShowFile
p
b

ShowHidden
p
b

ShowDetailed
p
b

ShowBookmark
p
b

ShowSplitter
p
b

ShowPreview
p
b

Bookmarks
p
Collection[]

Icon
p
Picture

Settings
p
Variant[]

DirView
r
DirView

FileView
r
FileView

Border
p
b

:Change
:


:Activate
:


:Icon
:

(Path)s
_new
m


frmChooser_Open
m


frmChooser_Change
m


frmChooser_Select
m


frmChooser_GetIcon
m

(Path)s
Reload
m


#DirView
UserControl
C
_Properties
C
s
"*,Border=True,Root,Picture,ShowHidden,HideRoot"
_DefaultEvent
C
s
"Click"
_Group
C
s
"View"
:Select
:


:Click
:


:Activate
:


:Menu
:


:Icon
:

(Path)s
Root
p
s

Current
p
s

ShowHidden
p
b

Picture
p
Picture

Border
p
b

Icon
p
Picture

Renaming
r
b

Settings
p
Variant[]

HideRoot
p
b

_new
m


TreeView_Expand
m


TreeView_Collapse
m


TreeView_Select
m


TimerExpand_Timer
m


TreeView_Activate
m


TreeView_Menu
m


Refresh_Timer
m


TreeView_Rename
m


TreeView_Cancel
m


NewFolder
m


Rename
m


Reload
m


Watch_Create
m


Watch_Delete
m


Watch_MoveFrom
m


Watch_MoveTo
m


Watch_Move
m


Watcher_Show
m


Watcher_Hide
m


#DocumentView
UserControl
C
_Properties
C
s
"*,Border,Arrangement{Arrange.Row;Column;Vertical;Horizontal;Fill}=Row,Padding=10,Spacing=10,Column,AutoCenter,ShowShadow"
_Group
C
s
"View"
_Similar
C
s
"GridView"
_ShowPageNumber
v
b

Portrait
C
i
0
Paysage
C
i
1
DocWidth
p
i

PageWidth
p
i

DocHeight
p
i

PageHeight
p
i

Count
p
i

Max
r
i

Layout
r
_DocumentLayout

Zoom
p
f

Scale
p
f

Column
p
i

Row
p
i

Arrangement
p
i

Padding
p
i

Spacing
p
i

ShowShadow
p
b

Item
r
_DocumentItem

FirstVisibleDocument
r
i

LastVisibleDocument
r
i

AutoCenter
p
b

Border
p
b

:Layout
:

(Page)i
:Draw
:

(Page)i(Width)i(Height)i
:Finished
:


:Zoom
:


_new
m


tmrLoad_Timer
m


View_Draw
m


Find
m
i
(X)i(Y)i
View_Arrange
m


View_Scroll
m


Refresh
m


Reset
m


tmrRefresh_Timer
m


Goto
m

(Page)i
View_MouseWheel
m


Obs_MouseWheel
m


_GetItemWidth
m
i
(Index)i
_GetItemHeight
m
i
(Index)i
_Get
m
_DocumentItem
(Index)i
MoveTo
m
b
(Index)i
MoveFirst
m
b

MoveNext
m
b

MovePrevious
m
b

View_MouseDown
m


View_MouseMove
m


View_MouseUp
m


_IsVisible
m
b
(Index)i
#Expander
UserContainer
C
_Properties
C
s
"*,Border=True,Text,TextFont,Animated,Hidden"
_DefaultEvent
C
s
"Show"
_Similar
C
s
"Panel"
:Show
:


:Hide
:


Hidden
p
b

Text
p
s

TextFont
p
Font

Animated
p
b

Border
p
b

_new
m


_Show
m


_Hide
m


#FileChooser
UserControl
C
_Properties
C
s
"*,Border=True,Root,Picture,Multi,Filter,ShowHidden,ShowDirectory,ShowDetailed,ShowPreview,ShowBookmark=True,ShowFile=True,ShowButton,Margin,ReadOnly"
_DefaultEvent
C
s
"Change"
_DefaultSize
C
s
"36,36"
_Group
C
s
"Chooser"
Root
p
s

Picture
p
Picture

Dir
p
s

SelectedPath
p
s

SelectedPaths
r
String[]

Value
p
v

Multi
p
b

ShowDirectory
p
b

ShowHidden
p
b

ShowDetailed
p
b

ShowBookmark
p
b

ShowFile
p
b

ShowPreview
p
b

Bookmarks
p
Collection[]

Settings
p
Variant[]

DirView
r
DirView

FileView
r
FileView

ShowButton
p
b

Extension
r
Container

Border
p
b

Margin
p
b

ReadOnly
p
b

Filter
p
String[]

FilterIndex
p
i

Icon
p
Picture

:Change
:


:Activate
:


:Icon
:

(Path)s
:Cancel
:


_new
m


frmChooser_Open
m


frmChooser_Change
m


frmChooser_Select
m


frmChooser_GetIcon
m

(Path)s
Reload
m


frmChooser_Cancel
m


SetFocus
m


#FileCompletion
Completion
C
_new
m


Fill
m

(Text)s(Explicit)b
#FileProperties
UserControl
C
_Properties
C
s
"*,Border=True"
_DefaultSize
C
s
"36,36"
_Group
C
s
"View"
:Data
:


Path
p
s

Border
p
b

Data
r
_FilePropertiesData

_new
m


frmChooser_Open
m


Add
m

(Panel)Control;(Title)s
_RaiseData
m
_FilePropertiesData

#FileView
UserControl
C
_Properties
C
s
"*,Border=True,Mode{Select.*}=Single,Dir,ShowDetailed,ShowHidden,ShowDirectory,ShowPreview"
_DefaultEvent
C
s
"Click"
_Group
C
s
"View"
:Select
:


:Click
:


:Activate
:


:Menu
:


:Icon
:

(Path)s
Dir
p
s

ShowHidden
p
b

ShowDirectory
p
b

Current
p
s

Mode
p
i

ShowDetailed
p
b

ShowPreview
p
b

Selection
p
String[]

Filter
p
String[]

Icon
p
Picture

IconSize
p
i

Border
p
b

Settings
p
Variant[]

Count
r
i

Background
p
i

Foreground
p
i

_init
M


_exit
M


_new
m


_GetHiddenColor
M
i

TaskPreview_Read
m

(Data)s
TaskPreview_Kill
m


RefreshViewAfter
m


Refresh_Timer
m


Reload
m


EnsureVisible_Timer
m


UnselectAll
m


View_Select
m


View_Click
m


View_Activate
m


View_Menu
m


View_Compare
m

(Key)s(OtherKey)s
SelectAll
m


Rename
m


View_Rename
m


Watch_Create
m


Watch_Delete
m


Watch_MoveFrom
m


Watch_MoveTo
m


Watch_Stat
m


Watcher_Hide
m


Watcher_Show
m


#FontBox
UserControl
C
_Properties
C
s
"*,Action,Border=True"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"32,4"
_Similar
C
s
"TextBox"
_Group
C
s
"Chooser"
:Click
:


:Change
:


Value
p
s

Border
p
b

Default
p
s

_new
m


ButtonBox_Click
m


ButtonBox_Clear
m


ButtonBox_KeyPress
m


#FontChooser
UserControl
C
:Change
:


:Activate
:


_Properties
C
s
"*,Border=True,FixedOnly,ShowStyle=True,ShowPreview=True,ShowRelative=True"
_DefaultEvent
C
s
"Change"
_DefaultSize
C
s
"36,36"
_Group
C
s
"Chooser"
SelectedFont
p
s

Value
p
s

FixedOnly
p
b

ShowStyle
p
b

ShowPreview
p
b

ShowLabel
p
b

'Deprecated
ShowRelative
p
b

Border
p
b

_new
m


_Change
m


_Activate
m


#IconPanel
UserContainer
C
_Properties
C
s
"*,Count{Range:1;256}=1,Index,Text,TextFont,Picture,Border"
_Similar
C
s
"TabStrip"
_IsMultiContainer
C
b
T
_DefaultEvent
C
s
"Click"
:Click
:


Count
p
i

Index
p
i

Text
p
s

Picture
p
Picture

Font
p
Font

TextFont
p
Font

Border
p
b

_new
m


_UpdateIconViewWidth
m


Panel_Arrange
m


_get
m
_IconPanelContainer
(Index)i
_GetView
m
GridView

_GetIndex
m
i
(hCont)_IconPanelContainer;
View_Select
m


View_MouseWheel
m


_SetVisible
m

(hCont)_IconPanelContainer;(bVisible)b
#ImageView
UserControl
C
_Properties
C
s
"*,Border=True,Alignment{Align.*}=Center,Grid,UseMouse=True"
_DefaultSize
C
s
"36,36"
_Group
C
s
"View"
_DrawWith
C
s
"DrawingArea"
:Draw
:

(View)Image;
Image
p
Image

:Scroll
:


Border
p
b

Zoom
p
f

Design
p
b

Grid
p
b

UseMouse
p
b

Alignment
p
i

ScrollX
p
i

ScrollY
p
i

ScrollWidth
r
i

ScrollW
r
i

ScrollHeight
r
i

ScrollH
r
i

_new
m


View_Arrange
m


Scroll
m

(X)i(Y)i
ViewToImage
m
Point
(ViewPoint)Point;
ImageToView
m
Point
(ImagePoint)Point;
_Paint
m

(hImage)Image;(X)f(Y)f[(hRect)Rect;]
View_Draw
m


View_MouseDown
m


View_MouseMove
m


Update
m

[(Image)Image;]
ZoomFit
m


View_Scroll
m


EnsureVisible
m

(X)i(Y)i(W)i(H)i
#InputBox

C
_call
M
s
(Prompt)s[(Title)s(Default)s]
#LCDLabel
UserControl
C
_Properties
C
s
"*,Text,Alignment{Align.Normal;Left;Center;Right}=Normal,Sheared,Padding{Range:0;63},Border,HighlightColor{Color}"
_DefaultSize
C
s
"24,4"
_Similar
C
s
"Label"
Text
p
s

Alignment
p
i

Sheared
p
b

Padding
p
i

Border
p
b

HighlightColor
p
i

Value
p
f

_new
m


View_Draw
m


#ListContainer
UserContainer
C
_Properties
C
s
"*,-Padding,-Spacing,-Arrangement,-AutoResize,-Indent,Border=True"
_DefaultArrangement
C
s
"V"
_DefaultEvent
C
s
"Click"
_Group
C
s
"Deprecated"
:Click
:


:Activate
:


:Scroll
:


Count
r
i

Index
p
i

Current
p
Control

Background
p
i

Border
p
b

_new
m


ScrollView_NewChild
m

(Child)Control;
Child_NewChild
m

(Child)Control;
ScrollView_Scroll
m


Child_Insert
m

(Child)Control;
EnsureVisible
m


Child_MouseDown
m


Child_MouseMove
m


Child_MouseUp
m


Child_Timer
m


Child_DblClick
m


Select
m

(hChild)Control;
Clear
m


Lock
m


Unlock
m


ScrollView_KeyPress
m


#ListEditor
UserControl
C
_Properties
C
s
"*,List,Border=True,Moveable=True"
_DefaultSize
C
s
"24,32"
_Similar
C
s
"ListBox"
_Group
C
s
"View"
List
p
String[]

Border
p
b

Text
p
s

Moveable
p
b

Editor
r
Control

:Select
:


:Change
:


_new
m


_RaiseSelect
m


_RaiseChange
m


#MaskBox
TextBox
C
_Properties
C
s
"*,-Password,-MaxLength,Action,Filter,Mask,ShowDefault"
_Similar
C
s
"TextBox"
_DrawWith
C
s
"TextBox"
:Filter
:

(Char)s
Mask
p
s

Filter
p
s

ShowDefault
p
b

_new
m


Clear
m


TextBox_KeyPress
m


TextBox_GotFocus
m


TextBox_Change
m


TextBox_LostFocus
m


TextBox_Menu
m


#MenuButton
UserControl
C
_Properties
C
s
"*,Action,AutoResize,Text,Picture,Arrow=True,Border=True,Menu,MenuOnly"
_DefaultSize
C
s
"6,4"
_Similar
C
s
"Button"
_DefaultEvent
C
s
"Click"
:Click
:


Picture
p
Picture

Text
p
s

Menu
p
s

Arrow
p
b

MenuOnly
p
b

Value
p
b

AutoResize
p
b

Border
p
b

_new
m


Button_GotFocus
m


Button_Click
m


WatchTimer_Timer
m


DrawingArea_GotFocus
m


DrawingArea_LostFocus
m


DrawingArea_Enter
m


DrawingArea_Leave
m


DrawingArea_MouseDown
m


DrawingArea_MouseUp
m


DrawingArea_MouseMove
m


DrawingArea_Draw
m


DrawingArea_KeyPress
m


DrawingArea_KeyRelease
m


DrawingArea_Font
m


#Message

C
Optional
M
i
(Message)s(Button)s(Key)s[(Icon)s(Force)b]
#MessageView
UserControl
C
_Properties
C
s
"*,Border,Animated,Separator"
_DefaultSize
C
s
"32,6"
_Group
C
s
"View"
_DrawWith
C
s
"DrawingArea"
:Open
:


:Close
:


Animated
p
b

Separator
p
b

Border
p
b

_new
m


Open
m

(Text)s[(Icon)Picture;]
Close
m


View_Arrange
m


View_DblClick
m


CloseButton_Click
m


View_Draw
m


#SidePanel
UserContainer
C
_Properties
C
s
"*,Action,Orientation{Align.Top;Bottom;Left;Right}=Top,Resizable=True,Border,Separator,Transparent,Hidden"
_Similar
C
s
"Panel"
:Show
:


:Hide
:


:Resize
:


Orientation
p
i

Border
p
b

Separator
p
b

Hidden
p
b

Resizable
p
b

Dimension
p
i

Tooltip
p
s

Value
p
b

Action
p
s

Design
p
b

Settings
p
Variant[]

Transparent
p
b

MinSize
p
i

_new
m


_Show
m


_Hide
m


_Resize
m


#SliderBox
UserControl
C
_Properties
C
s
"*,MinValue=0,MaxValue=100,Step=1,DefaultValue,Value"
_DefaultEvent
C
s
"Change"
_DefaultSize
C
s
"32,4"
_Similar
C
s
"Slider"
:Change
:


Value
p
i

MinValue
p
i

MaxValue
p
i

Step
p
i

DefaultValue
p
i

Font
p
Font

_new
m


Slider_Change
m


SpinBox_Change
m


SpinBox_MouseWheel
m


Slider_DblClick
m


#SpinBar
UserControl
C
_Properties
C
s
"*,Border=True,Value,MaxValue=1.0,MinValue,Text,Step=0.1"
_DefaultEvent
C
s
"Change"
_DefaultSize
C
s
"32,4"
_Similar
C
s
"Slider"
:Change
:


Value
p
f

MaxValue
p
f

MinValue
p
f

Text
p
s

Step
p
f

Background
p
i

Border
p
b

_new
m


View_MouseMove
m


View_MouseDown
m


View_MouseUp
m


Timer_Timer
m


View_MouseWheel
m


View_DblClick
m


View_Draw
m


View_Arrange
m


View_Leave
m


Text_LostFocus
m


Text_GotFocus
m


Text_KeyPress
m


Text_MouseWheel
m


View_Font
m


#Spinner
UserControl
C
_Properties
C
s
"*,Border,Label"
_DefaultSize
C
s
"8,8"
Border
p
b

Label
p
b

Value
p
f

Enabled
p
b

_new
m


Start
m


Stop
m


Wait
m


DrawingArea_Draw
m


Timer_Timer
m


#Stock

C
Debug
P
b

List
R
String[]

Themes
R
String[]

Icons
R
String[]

GetSize
M
i
(Size)s
_get
M
Picture
(Key)s[(Default)s]
Refresh
M


#SwitchButton
UserControl
C
_Properties
C
s
"*,Action,Value,Animated"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"16,4"
_Similar
C
s
"Button"
:Click
:


Value
p
b

Animated
p
b

Background
p
i

_new
m


DrawingArea_Draw
m


DrawingArea_Enter
m


DrawingArea_Leave
m


DrawingArea_GotFocus
m


DrawingArea_LostFocus
m


DrawingArea_MouseDown
m


DrawingArea_MouseUp
m


Timer_Timer
m


DrawingArea_MouseWheel
m


DrawingArea_KeyPress
m


#TabPanel
UserContainer
C
_Properties
C
s
"*,Border=True,Count{Range:1;256}=1,Index,Text,TextFont,Picture,Orientation{Align.Top;Bottom}=Top,Closable,CloseButton,Moveable,Highlight"
_Similar
C
s
"TabStrip"
_IsMultiContainer
C
b
T
_DefaultEvent
C
s
"Click"
:Click
:


:Close
:

(Index)i
Index
p
i

:Move
:

(Source)i(Target)i
:CloseAll
:


Count
p
i

Text
p
s

Picture
p
Picture

Font
p
Font

TextFont
p
Font

Border
p
b

Orientation
p
i

Highlight
p
b

Closable
p
b

Current
r
_TabPanelContainer

Background
p
i

Moveable
p
b

CloseButton
p
b

_new
m


_EnsureCurrentVisible
m


EnsureCurrentVisible_Timer
m


_GetFirstIndex
m
i

TabBar_Arrange
m


Arrow_Enter
m


Arrow_Leave
m


Arrow_Draw
m


_GetBackground
m
i

Arrow_MouseDown
m


_MoveNext
m


_MovePrevious
m


Arrow_MouseUp
m


TimerRepeat_Timer
m


Arrow_DblClick
m


Remove
m

(Index)i
_get
m
_TabPanelContainer
(Index)i
_GetIndex
m
i
(hCont)Control;
_GetButton
m
_TabPanelButton
(iIndex)i
TabBarContainer_Draw
m


Panel_Draw
m


Panel_Arrange
m


_SetVisible
m

(Index)i(bVisible)b
_IsVisible
m
b
(Index)i
_Close
m

(Index)i
TabBarContainer_KeyPress
m


_MoveTab
m

(hSrc)_TabPanelButton;(hDst)_TabPanelButton;(bAfter)b
TabPanel_Arrange
m


ClosePanel_Draw
m


CloseAll_Click
m


#TableView
GridView
C
_Properties
C
s
"*,NoKeyboard"
_Group
C
s
"View"
_Similar
C
s
"GridView"
:Save
:

(Row)i(Column)i(Value)s
:Insert
:


:Click
:


:Hide
:


Editor
r
Control

NoKeyboard
p
b

_new
m


Save
m
b

Cancel
m


GridView_MouseDown
m


GridView_RowResize
m

(Row)i
GridView_ColumnResize
m

(Column)i
GridView_Scroll
m


GridView_Arrange
m


GridView_Resize
m


GridView_Hide
m


GridView_Change
m


Edit
m

[(List)String[];(ReadOnly)b]
EditWith
m

(Editor)Control;
Editor_Activate
m


Editor_Click
m


Editor_KeyPress
m


Timer_Timer
m


Clear
m


#ToolPanel
UserContainer
C
_Properties
C
s
"*,Count{Range:1;256}=1,Index,Text,TextFont,Picture,Animated,Border"
_Similar
C
s
"TabStrip"
_IsMultiContainer
C
b
T
:Click
:


Count
p
i

Index
p
i

Text
p
s

Picture
p
Picture

Animated
p
b

Font
p
Font

TextFont
p
Font

Border
p
b

_new
m


ToolPanelContainer_Change
m


ToolPanel_Resize
m


_get
m
ToolPanelContainer
(Index)i
#URLLabel
UserControl
C
_Properties
C
s
"*,Padding{Range:0;63},AutoResize,Link,Text,Border,Alignment{Align.*}"
_DefaultSize
C
s
"24,4"
_DefaultEvent
C
s
"Click"
:Click
:


Text
p
s

Link
p
s

Visited
p
b

AutoResize
p
b

Padding
p
i

Border
p
b

Alignment
p
i

_new
m


DrawingArea_Draw
m


DrawingArea_MouseDown
m


#ValueBox
UserControl
C
_Properties
C
s
"*,Action,Text,Type{ValueBox.*}=Number,ReadOnly,Border=True"
_DefaultSize
C
s
"24,4"
_Similar
C
s
"TextBox"
:Change
:


Type
p
i

Value
p
v

Border
p
b

ReadOnly
p
b

Text
p
s

Number
C
i
0
Date
C
i
1
Time
C
i
2
Currency
C
i
3
DateTime
C
i
4
IPAddress
C
i
5
_new
m


NumberBox_KeyPress
m


NumberBox_Change
m


DateBox_Change
m


CurrencyBox_Change
m


IpAddressBox_Change
m


#Wizard
UserContainer
C
_Properties
C
s
"*,Count{Range:1;256}=1,Index,Text,TextFont,Picture,ShowTitle=True,ShowIndex=False,ShowButton=True,Border=True,ActionText,ActionPicture,Animated"
_DefaultEvent
C
s
"Change"
_Similar
C
s
"TabStrip"
_IsMultiContainer
C
b
T
:BeforeChange
:


:Change
:


:Cancel
:


:Click
:


:Close
:


Count
p
i

Index
p
i

LastIndex
r
i

Text
p
s

Picture
p
Picture

ShowTitle
p
b

ShowIndex
p
b

Border
p
b

TextFont
p
Font

ActionText
p
s

ActionPicture
p
Picture

Animated
p
b

ShowButton
p
b

_new
m


Update
m


WizardContainer__Refresh
m


_get
m
_WizardContainer
(Index)i
Wizard_Previous
m


MovePrevious
m


Wizard_Next
m


MoveNext
m


Wizard_Cancel
m


#_DateChooser_Colors

CA
_Calendar
v
FCalendar

Clear
m


_put
m

(Color)i(Date)d
_get
m
i
(Date)d
#_DateChooser_Data

C
Foreground
v
i

Background
v
i

Text
v
s

Font
p
Font

#_DateChooser_Date

C
Background
p
i

Foreground
p
i

Text
p
s

Font
p
Font

_Date
v
d

_View
v
DateChooser

#_DocumentItem

C
Height
r
i

Width
r
i

_Index
v
i

:Foo
:


EnsureVisible
m


IsVisible
m
b

#_DocumentLayout

C
Width
v
i

Height
v
i

Orientation
v
i

#_FilePropertiesData

C
Type
v
s

Icon
v
Picture

#_IconPanelContainer
UserControl
C
Text
p
s

Picture
p
Picture

Container
r
Container

Visible
p
b

_new
m


#_MultiContainer
UserContainer

:Click
:


Count
p
i

Index
p
i

Text
p
s

Picture
p
Picture

Current
r
_MultiContainerTab

_SetCount
m

(iCount)i
_SetIndex
m

(iIndex)i
_UpdateContainer
m

(hCont)Container;
_get
m
Container
(Index)i
_Remove
m

(iIndex)i
Remove
m

(Index)i
#_MultiContainerTab
UserControl

Text
p
s

RichText
p
s

Picture
p
Picture

Visible
p
b

Container
r
Container

#_TabPanelContainer
UserControl
C
Text
p
s

RichText
p
s

Picture
p
Picture

Visible
p
b

Closable
p
b

_new
m


_Delete
m


Delete
m


#_WizardContainer
UserControl
C
:_Refresh
:


Text
p
s

Picture
p
Picture

Container
r
Container

_new
m


