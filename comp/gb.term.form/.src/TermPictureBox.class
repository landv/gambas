' Gambas class file

Export
Inherits TermControl
Class Rect
Class Image
Class Color
Private $hImage As Image '= Image.Load("all.png")
Property Image As Image
Property Stretch As Integer
Property Alignment As Integer
Private $iAlignment As Integer
Private $iStretch As Integer
'None: Do nothing
'Proportional: Fit to one near border and adapt the other side
'Cut/Zoom: Adapt to the far border and cut the rest
'Fit: use the PictureBox content size
'If Picture box.None is not set the the ALignment property is set to centered
Public Enum None, Proportional, Cut, Fit
Private $aTermColor As Integer[] = [
  &H000000, &H800000, &H008000, &H808000, &H000080, &H800080, &H008080, &Hc0c0c0,
  &H808080, &Hff0000, &H00ff00, &Hffff00, &H0000ff, &Hff00ff, &H00ffff, &Hffffff,
  &H000000, &H00005f, &H000087, &H0000af, &H0000d7, &H0000ff,
  &H005f00, &H005f5f, &H005f87, &H005faf, &H005fd7, &H005fff,
  &H008700, &H00875f, &H008787, &H0087af, &H0087d7, &H0087ff,
  &H00af00, &H00af5f, &H00af87, &H00afaf, &H00afd7, &H00afff,
  &H00d700, &H00d75f, &H00d787, &H00d7af, &H00d7d7, &H00d7ff,
  &H00ff00, &H00ff5f, &H00ff87, &H00ffaf, &H00ffd7, &H00ffff,
  &H5f0000, &H5f005f, &H5f0087, &H5f00af, &H5f00d7, &H5f00ff,
  &H5f5f00, &H5f5f5f, &H5f5f87, &H5f5faf, &H5f5fd7, &H5f5fff,
  &H5f8700, &H5f875f, &H5f8787, &H5f87af, &H5f87d7, &H5f87ff,
  &H5faf00, &H5faf5f, &H5faf87, &H5fafaf, &H5fafd7, &H5fafff,
  &H5fd700, &H5fd75f, &H5fd787, &H5fd7af, &H5fd7d7, &H5fd7ff,
  &H5fff00, &H5fff5f, &H5fff87, &H5fffaf, &H5fffd7, &H5fffff,
  &H870000, &H87005f, &H870087, &H8700af, &H8700d7, &H8700ff,
  &H875f00, &H875f5f, &H875f87, &H875faf, &H875fd7, &H875fff,
  &H878700, &H87875f, &H878787, &H8787af, &H8787d7, &H8787ff,
  &H87af00, &H87af5f, &H87af87, &H87afaf, &H87afd7, &H87afff,
  &H87d700, &H87d75f, &H87d787, &H87d7af, &H87d7d7, &H87d7ff,
  &H87ff00, &H87ff5f, &H87ff87, &H87ffaf, &H87ffd7, &H87ffff,
  &Haf0000, &Haf005f, &Haf0087, &Haf00af, &Haf00d7, &Haf00ff,
  &Haf5f00, &Haf5f5f, &Haf5f87, &Haf5faf, &Haf5fd7, &Haf5fff,
  &Haf8700, &Haf875f, &Haf8787, &Haf87af, &Haf87d7, &Haf87ff,
  &Hafaf00, &Hafaf5f, &Hafaf87, &Hafafaf, &Hafafd7, &Hafafff,
  &Hafd700, &Hafd75f, &Hafd787, &Hafd7af, &Hafd7d7, &Hafd7ff,
  &Hafff00, &Hafff5f, &Hafff87, &Hafffaf, &Hafffd7, &Hafffff,
  &Hd70000, &Hd7005f, &Hd70087, &Hd700af, &Hd700d7, &Hd700ff,
  &Hd75f00, &Hd75f5f, &Hd75f87, &Hd75faf, &Hd75fd7, &Hd75fff,
  &Hd78700, &Hd7875f, &Hd78787, &Hd787af, &Hd787d7, &Hd787ff,
  &Hd7af00, &Hd7af5f, &Hd7af87, &Hd7afaf, &Hd7afd7, &Hd7afff,
  &Hd7d700, &Hd7d75f, &Hd7d787, &Hd7d7af, &Hd7d7d7, &Hd7d7ff,
  &Hd7ff00, &Hd7ff5f, &Hd7ff87, &Hd7ffaf, &Hd7ffd7, &Hd7ffff,
  &Hff0000, &Hff005f, &Hff0087, &Hff00af, &Hff00d7, &Hff00ff,
  &Hff5f00, &Hff5f5f, &Hff5f87, &Hff5faf, &Hff5fd7, &Hff5fff,
  &Hff8700, &Hff875f, &Hff8787, &Hff87af, &Hff87d7, &Hff87ff,
  &Hffaf00, &Hffaf5f, &Hffaf87, &Hffafaf, &Hffafd7, &Hffafff,
  &Hffd700, &Hffd75f, &Hffd787, &Hffd7af, &Hffd7d7, &Hffd7ff,
  &Hffff00, &Hffff5f, &Hffff87, &Hffffaf, &Hffffd7, &Hffffff,
  &H080808, &H121212, &H1c1c1c, &H262626, &H303030, &H3a3a3a,
  &H444444, &H4e4e4e, &H585858, &H606060, &H666666, &H767676,
  &H808080, &H8a8a8a, &H949494, &H9e9e9e, &Ha8a8a8, &Hb2b2b2,
  &Hbcbcbc, &Hc6c6c6, &Hd0d0d0, &Hdadada, &He4e4e4, &Heeeeee]
'Private $aaImage As New Byte[][]
Static Public Sub _init()

  ' Component.Load(Component.Path &/ "gb.Image")
  ' Component.Load(Component.Path &/ "gb.Image.io")
  
  
End





Public Sub _new()

  ' Dim aLine As Byte[]
  ' Dim yPix As Byte
  ' Dim y As Integer
  ' Dim x As Integer
  '
  '   $hImage = $hImage.Stretch(150, 100)
  '
  '   For y = 0 To $hImage.Height
  '     aline = New Byte[]
  '     For x = 0 To $hImage.Width
  '       aLine.Add(ConvTermColor(Color.SetAlpha($hImage[x, y], 0)))
  '     Next
  '     $aaImage.Add(aline)
  '   Next
  '
  '
  '   _Render
  Me._ColorMode = TermColor.Mode256

End

Private Function Image_Read() As Image

  Return $hImage

End

Private Sub Image_Write(Value As Image)

  $hImage = Value

End

Public Sub _Render()

  Dim img As Image
  Dim x, y As Integer
  Dim fg, bg As Integer
  Dim hattr As New Attr
  Dim hClientRect As Rect
  Dim hChar As Char
  Dim hRect As Rect = Me._GetRect()

  If Not Me._NeedRender Then Return
  Super._Render
  If $hImage = Null Then Return
  'Return
  hClientRect = Me._GetClientRect()
  'img2 = $hImage.Copy()
  'hattr.ColorMode = TermColor.Mode256
  Select Case $iStretch
    Case TermPictureBox.Cut
    Case TermPictureBox.Fit
      img = $hImage.Stretch(hClientRect.Width, (hClientRect.Height) * 2)

    Case TermPictureBox.Proportional
    Case Else
      'AKA None
      img = $hImage.Copy()
  End Select

  Select Case $iAlignment
    Case Align.Right
    Case Align.Center
    Case Else
      'AKA ALign.Left
  End Select

  For y = 0 To img.Height - 1 Step 2
    For x = 0 To img.Width - 1
      hChar = New Char

      fg = ConvTermColor(Color.SetAlpha(img[x, y], 0))
      bg = ConvTermColor(Color.SetAlpha(img[x, y + 1], 0))
      hattr.ColorMode = TermColor.Mode256
      hattr.Foreground = fg
      hattr.Background = bg
      hChar.Attr = hattr.GetInteger()
      hChar.c = &H2580
      Try Me._Content[hClientRect.Top + y / 2][hClientRect.Left + x] = hChar
    Next
  Next

  'Print
  ' For y = 0 To $aaImage.Max Step 2
  '   For x = 0 To $aaImage[0].Max
  '     fg = $aaImage[y][x]
  '     Try bg = $aaImage[y + 1][x]
  '           hattr.Foreground = fg
  '     hattr.Background = bg
  '     hattr.Send()
  '     Print String.Chr(&H2580);
  '   Next
  '   Print
  '
  '
  '
  '
  ' Next
  Me._NeedRender = False

End

Private Function ConvTermColor(iTermColor As Integer) As Integer

  Dim i As Integer
  Dim fMax As Float = 1
  Dim fCur As Float
  Dim iCur As Integer

  For i = 0 To $aTermColor.Max
    fcur = Color.Distance($aTermColor[i], iTermColor)
    If fcur < fMax Then
      fMax = fcur
      iCur = i
    Endif
  Next
  Return iCur

End

Private Function Stretch_Read() As Integer

  Return $iStretch

End

Private Sub Stretch_Write(Value As Integer)

  $iStretch = Value

End

Private Function Alignment_Read() As Integer

  Return $iAlignment

End

Private Sub Alignment_Write(Value As Integer)

  $iAlignment = Value

End
