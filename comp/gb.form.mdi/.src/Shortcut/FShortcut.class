' Gambas class file

Private SHORTCUTS_MAGIC As String = "# Gambas shortcuts file 1.0"

Private $aAction As CAction[]
Private $hEditor As FShortcutEditor
Private $hVoid As Picture

Public Sub Run() As Boolean
  
  Return Not Me.ShowModal() 
  
End

Public Sub _new()
  
  $hEditor = New FShortcutEditor(Me)
  $hEditor.Hide
  $hEditor.Ignore = True
  
End

Private Sub RefreshTable()

  Dim iInd As Integer
  Dim hAction As CAction
  Dim hIcon As Picture

  For iInd = 0 To $aAction.Max
  
    hAction = $aAction[iInd]
  
    tvwShortcut[iInd, 0].Text = hAction.Display
    tvwShortcut[iInd, 0].Padding = 4
    hIcon = hAction.Icon
    If Not hIcon Then hIcon = $hVoid
    tvwShortcut[iInd, 0].Picture = hIcon
    tvwShortcut[iInd, 1].Text = hAction.Shortcut
    tvwShortcut[iInd, 1].Padding = 4

  Next
  
  tvwShortcut.Columns[1].Width = -1 'tvwShortcut.Width - Desktop.Scale * 24
  tvwShortcut.Columns[1].Width += 12 * Desktop.Scale
  tvwShortcut.Rows.Height = tvwShortcut.Font.Height + 8

End

Public Sub Form_Open()

  Dim hAction As CAction
  Dim hImage As Image
  
  $aAction = New CAction[]
  For Each hAction In MAction.Actions
    If hAction.HasShortcut Then $aAction.Add(hAction)
  Next
  $aAction.Sort

  'Debug tvwShortcut.Row;; tvwShortcut.Column
  tvwShortcut.Rows.Count = $aAction.Count
  'Debug tvwShortcut.Row;; tvwShortcut.Column
  tvwShortcut.Columns.Count = 2
  'Debug tvwShortcut.Row;; tvwShortcut.Column
  tvwShortcut.Columns[0].Text = ("Action")
  tvwShortcut.Columns[0].Expand = True
  tvwShortcut.Columns[1].Text = ("Shortcut")
  
  hImage = New Image(16, 16, Color.Transparent)
  $hVoid = hImage.Picture
  
  RefreshTable
  
  Settings.Read(Me, "gb.form.mdi/FShortcut")
  
End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub btnOK_Click()

  tvwShortcut.Save
  SaveShortcut
  Me.Close(True)

End

Public Sub tvwShortcut_Click()

  Dim hAction As CAction 
  
  If btnFind.Value Then Return
  If tvwShortcut.Row < 0 Then Return

  hAction = $aAction[tvwShortcut.Row]
  'If tvwShortcut.Editor And If $hEditor.Define(hAction) Then Return

  Object.Lock(tvwShortcut)
  tvwShortcut.Column = 1
  Object.Unlock(tvwShortcut)
  
  tvwShortcut.EditWith($hEditor)
  
End

Private Sub SaveShortcut()
  
  Dim hAction As CAction
  
  For Each hAction In MAction.Actions
    hAction.Save
  Next
  Settings.Save
  
End

Public Sub Form_Close()

  Settings.Write(Me, "gb.form.mdi/FShortcut")
  
End

Public Sub tvwShortcut_Save(Row As Integer, (Column) As Integer, Value As String)

  If $hEditor.BadShortcut Then Return
  
  tvwShortcut[Row, 1].Text = Value
  $aAction[Row].Shortcut = Value

End

Public Sub btnFind_Click()

  If btnFind.Value Then
    tvwShortcut.Cancel
    btnFind.SetFocus
  Else
    tvwShortcut_Click
  Endif

End

Public Sub btnFind_KeyPress()

  Dim sShortcut As String
  Dim iRow As Integer

  If btnFind.Value Then
    sShortcut = MAction.FindShortcut()
    If sShortcut Then
      For iRow = 0 To tvwShortcut.Rows.Count - 1
        If tvwShortcut[iRow, 1].Text = sShortcut Then
          tvwShortcut.Row = iRow
          Break
        Endif
      Next
    Endif
    Stop Event
  Endif

End

Public Sub btnFind_LostFocus()

  btnFind.Value = False

End

Public Sub btnDefault_Click()

  Dim hAction As CAction
  Dim iRow As Integer

  If Message.Warning(("You are going back to the default shortcuts."), ("Go back"), ("Cancel")) = 2 Then Return
  
  tvwShortcut.Cancel
  For iRow = 0 To tvwShortcut.Rows.Count - 1
    hAction = $aAction[iRow]
    hAction.Shortcut = hAction.DefaultShortcut
    tvwShortcut[iRow, 1].Text = hAction.Shortcut
  Next

  SaveShortcut

End

Public Sub HandleKey() As Boolean
  
  Dim iRow As Integer = tvwShortcut.Row
  
  If Not Key.Normal Then Return
  
  Select Case Key.Code
    Case Key.Up
      Dec iRow
    Case Key.Down
      Inc iRow
    Case Key.Home
      iRow = 0
    Case Key.End
      iRow = tvwShortcut.Rows.Count - 1
    Case Key.PageUp
      iRow -= Max(1, tvwShortcut.ClientH \ tvwShortcut.Rows.H - 1)
    Case Key.PageDown
      iRow += Max(1, tvwShortcut.ClientH \ tvwShortcut.Rows.H - 1)
    Default
      Return False
  End Select
  
  If iRow >= 0 And If iRow < tvwShortcut.Rows.Count Then
    tvwShortcut.Row = iRow
    timAfter.Trigger
  Endif
  
  Return True
  
End

Public Sub timAfter_Timer()

  tvwShortcut_Click

End

' Public Sub tvwShortcut_MouseDown()
' 
'   tvwShortcut_Select
' 
' End
' 
' Public Sub tvwShortcut_MouseUp()
' 
'   tvwShortcut_Select
' 
' End

Private Sub Export(sPath As String)

  Dim hFile As File
  Dim hAction As CAction
  Dim aKey As New String[]
  Dim sKey As String

  hFile = Open sPath For Create
  Print #hFile, SHORTCUTS_MAGIC

  For Each hAction In $aAction
    aKey.Add(hAction.Key)
  Next
  aKey.Sort
  
  For Each sKey In aKey
    Print #hFile, sKey; "="; MAction.Actions[sKey].Shortcut
  Next
  
  hFile.Close
  
Catch
  
  Message.Error(("Unable to export shortcut files.") & "\n\n" & Error.Text)
  Try hFile.Close

End

Private Sub Import(sPath As String)

  Dim hFile As File
  Dim sMagic As String
  Dim sLine As String
  Dim iPos As Integer
  Dim sShortcut As String
  Dim hAction As CAction

  hFile = Open sPath
  Line Input #hFile, sMagic
  If sMagic <> SHORTCUTS_MAGIC Then
    Message.Error(("This file is not a Gambas shortcuts file."))
    Close #hFile
    Return
  Endif

  While Not Eof(hFile)
    Line Input #hFile, sLine
    sLine = Trim(sLine)
    If Not sLine Or If Left(sLine) = "#" Or If Left(sLine) = ";" Then Continue
    iPos = InStr(sLine, "=")
    If iPos = 0 Then Continue
    sShortcut = Trim(Mid$(sLine, iPos + 1))
    sLine = Trim(Left$(sLine, iPos - 1))
    hAction = MAction.Actions[sLine]
    If Not hAction Then Continue
    hAction.Shortcut = sShortcut
  Wend
  
  hFile.Close
  
  RefreshTable
  
Catch
  
  Message.Error(("Unable to import shortcut files.") & "\n\n" & Error.Text)
  Try Close #hFile

End

Public Sub btnSave_Click()

  Dialog.Path = Settings["gb.form.mdi/FShortcut/Path", User.Home &/ Application.Name & ".gambas.shortcuts"]
  Dialog.Filter = ["*.gambas.shortcuts", ("Gambas shortcuts files")]
  Dialog.Title = ("Export shortcuts")
  Try Dialog.AutoExt = True
  If Dialog.SaveFile() Then Return
  Settings["gb.form.mdi/FShortcut/Path"] = Dialog.Path
  
  Export(Dialog.Path)

End

Public Sub btnLoad_Click()

  Dialog.Path = Settings["gb.form.mdi/FShortcut/Path", User.Home]
  Dialog.Filter = ["*.gambas.shortcuts", ("Gambas shortcuts files")]
  Dialog.Title = ("Import shortcuts")
  If Dialog.OpenFile() Then Return
  
  'Enhanced Dialog.OpenFile() is buggy 
  If Not Dialog.Path Or If IsDir(Dialog.Path) Then Return
  Settings["gb.form.mdi/FShortcut/Path"] = Dialog.Path
  
  Import(Dialog.Path)
  
End
