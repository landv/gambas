' Gambas class file

''' The TestSuite class represents a suite of different tests to be run.  The TestSuite contains
''' a part-whole hierarchy of objects that implement the ITest interface --
''' including TestCase objects and other TestSuite objects.  Executing the Run method for the
''' TestSuite will execute all test cases that it contains.  The TestSuite class also provides
''' methods for add all test cases contained in a test container object into the suite.

'' Interface declaration
Inherits ITest

'' Member variables
Private $colTests As Collection

Public Sub _new()

    $colTests = New Collection

End Sub

Private Sub Class_Terminate()

    $colTests = Null

End Sub

'' Runs all tests contained within the collection and collects the result in the TestResult parameter.
Public Sub Run(oTestResult As TestResult)

    Dim oTest As ITest

    For Each oTest In $colTests
        Try oTest.Run(oTestResult)
        If Error Then
            oTestResult.AddError(Error.Code, Error.Where, Error.Text)
        Endif
    Next

End Sub

'' Number of test cases contained in the suite
Public Function CountTestCases() As Integer

    Return $colTests.Count

End Function

'' Create a new test case and return it.
Public Function NewTestCase(sName As String, oTestContainer As ITestContainer) As ITestCase

    Dim oTestCase As TestCase

    oTestCase = New TestCase
    oTestCase.Initialize(sName, oTestContainer)

    Return oTestCase

End Function

'' Add a object implementing ITest (either a TestCase or TestSuite) to the suite.
Public Sub AddTest(oTest As ITest)

    $colTests.Add(oTest, Object.Class(oTest).Name)

End Sub

'' Add a TestCase to the suite.
Public Sub AddTestCase(oTestCase As ITestCase)

    $colTests.Add(oTestCase, Object.Class(oTestCase).Name)

End Sub

'' Create a new test case and add it to the suite.
Public Function AddNewTestCase(sName As String, oTestContainer As ITestContainer) As ITestCase

    Return NewTestCase(sName, oTestContainer)
    AddTestCase(AddNewTestCase)

End Function

'' Create all test cases that are contained in the specified TestContainer and add them to the suite.
Public Function AddAllTestCases(oTestContainer As ITestContainer)

    Dim sTests As Variant
    Dim i As Integer

    sTests = oTestContainer.TestCaseNames

    For i = 0 To sTests.Count - 1
        AddNewTestCase(CStr(sTests(i)), oTestContainer)
    Next

End

'' Runs all tests contained within the collection and collects the result in a TestResult instance.
Private Sub ITest_Run(ByRef oTestResult As TestResult)

    run(oTestResult)

End

Private Function ITest_CountTestCases() As Integer

    Return CountTestCases

End
