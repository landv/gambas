' Gambas class file

' Written by Iman Karim
' http://home.inf.fh-rhein-sieg.de/~ikarim2s/
' 14.11.2006

PRIVATE Objects AS NEW Collection
PRIVATE world_Gravity AS Float = 0.9
PRIVATE world_Bounce AS Float = 0.7
PRIVATE world_SlideFloor AS Float = 0.9
PRIVATE isDrawing AS Boolean

PRIVATE SUB AddBall(OPTIONAL x AS Integer = -1, OPTIONAL y AS Integer = -1)
  DIM cBall AS NEW cBall
  IF x = -1 THEN
    cBall.x = Rnd(1, 100)
    cBall.y = Rnd(1, 100)
  ELSE
    cBall.x = x
    cBall.y = y
  END IF
  cBall.ax = Rnd(-100, 100)
  cBall.col = Rnd(1, 90000000)
  objects.Add(cBall, Str(objects.Count + 1))
  cB.Add(Str(objects.Count))
END


PRIVATE SUB DoGravity()
  DIM myBall AS cBall
  FOR EACH myBall IN Objects
      IF togGrav.value THEN myBall.ay = myBall.ay + world_Gravity '// Make Gravity
      myBall.x = myBall.x + myBall.ax '// Move Ball
      myBall.y = myBall.y + myBall.ay
      IF myBall.x >= dW.width - 5 OR myBall.x <= 0 THEN '// Ball collidated on wall (left/right)
        myBall.ax = (myBall.ax * world_Bounce) * -1 '// Reverse Ball direction and include world_Bounce
      END IF
      IF myBall.y > dW.Height - 10 OR myBall.y < 10 THEN '// Ball collidated on Floor or Sky
        IF myball.y < 10 AND togSky.value = FALSE THEN myball.ay = (myball.ay * world_Bounce) * -1 '// If Sky is disabled no not bounce
        IF myball.y > 10 THEN myball.ay = (myball.ay * world_Bounce) * -1 '// On floor make bounce for sure
      END IF
      IF (((dW.Height - 10) - myBall.y) <= 1) AND (Abs(myBall.ay) <= 2) AND togGrav.Value THEN '// If ball is n floor and to slow to jump up again stop the ball (y)
        myball.y = (dW.Height - 10)
        myball.ay = 0
      END IF

      IF myball.ay = 0 AND myball.y = (dW.Height - 10) THEN '// If ball is already on floor decrease the roll speed depending on world_SlideFloor factor.
        IF myball.ax < 0.1 THEN
          myball.ax = Abs(myball.ax) * world_SlideFloor * -1
        ELSE IF myball.ax > 0.1 THEN
          myball.ax = Abs(myball.ax) * world_SlideFloor 
        ELSE 
          myball.ax = 0 '// If ball is moving to slow stop it
        END IF
      END IF

      IF myball.y > dW.Height - 10 THEN '// Make sure befor painting that the ball is inside your viewport. (floor)
        myball.y = dW.Height - 10
      ELSE IF myball.y <= 10 AND togSky.Value = FALSE THEN 
        myball.y = 12
      END IF
      IF myball.x > dW.width - 5 THEN '// Make sure befor painting that the ball is inside your viewport. (left\right wall)
        myball.x = dW.Width - 5
      ELSE IF myball.x < 0 THEN 
        myball.x = 0
      END IF  
  NEXT 
END

PRIVATE SUB DrawWorld()
  DIM myBall AS cBall  
  DIM index AS Integer
  IF isDrawing = FALSE THEN
    isDrawing = TRUE
    TRY Draw.begin(dW)
    Draw.Rect(0, 12, dW.Width - 6, dW.Height - 17)
    Draw.FillStyle = 1
    FOR EACH myBall IN Objects
      index = index + 1
      Draw.Foreground = myBall.col
      Draw.Ellipse(myBall.x, myBall.y, 5, 5) 
      IF Str(index) = cB.Text THEN 
        Draw.FillStyle = 0
        Draw.Foreground = Color.Red
        IF togFocus.value THEN Draw.Ellipse(myBall.x - 3, myBall.y - 3, 11, 11) 
        lblX.Caption = Str(Round(myBall.x))
        lblY.Caption = Str(Round(myBall.y))
        IF myball.y <= 0 THEN 
          lblOutOfRange.Visible = TRUE
        ELSE 
          lblOutOfRange.Visible = FALSE
        END IF
        lblaX.Caption = Str(Round(myBall.ax))
        lblaY.Caption = Str(Round(myBall.ay))
        Draw.FillStyle = 1
      END IF
    NEXT
    Draw.End
    IF cB.Text = "ALL" THEN 
      lblX.Caption = "%null%"
      lblY.Caption = "%null%"
      lblaX.Caption = "%null%"
      lblaY.Caption = "%null%"
      lblOutOfRange.Visible = FALSE
    END IF
    isDrawing = FALSE
  END IF
END

PRIVATE SUB Render()
  
  DoGravity
  IF togClear.Value THEN dW.Clear()
  WAIT 0.001
  DrawWorld
  
END


PUBLIC SUB Form_Open()
  cb.Add("ALL")
END

PUBLIC SUB Button1_Click()
   AddBall  
END

PUBLIC SUB Timer1_Timer()

  Render  

END

PUBLIC SUB Form_Resize()
  Timer1.Enabled = FALSE
  
  'DO
  '  WAIT 1
  'LOOP WHILE modGravity.isDrawing
  
  dw.Width = ME.Width - dw.Left - 10  
  dw.Height = ME.Height - dw.top - 10
  Timer1.Enabled = TRUE  
  

END


PUBLIC SUB Slider1_Change()

   lblGrav.Caption = "Gravity: " & Str(Slider1.Value / 100)
   world_Gravity = Slider1.Value / 100

END


PUBLIC SUB togGrav_Click()

  IF NOT togGrav.Value THEN 
    lblGrav.Caption = "Gravity: off"
    lblSlide.Caption = "Floor Slide: off"
    Slider1.Enabled = FALSE
    Slider2.Enabled = FALSE
    world_SlideFloor = 1
  ELSE 
    Slider1.Enabled = TRUE
    Slider2.Enabled = TRUE
    lblGrav.Caption = "Gravity: " & Str(Slider1.Value / 100)
    lblSlide.Caption = "Floor Slide: " & Str(Slider2.Value / 100)
    world_SlideFloor = Slider2.Value / 100
  END IF

END

PUBLIC SUB cmdRandomize_Click()
  DIM myBall AS cBall  
  DIM index AS Integer
  cmdRandomize.Enabled = FALSE
  Draw.begin(dW)
  Draw.FillStyle = 1
  FOR EACH myBall IN Objects
    index = index + 1
    Draw.Foreground = myBall.col
    Draw.Ellipse(myBall.x, myBall.y, 5, 5) 
    IF Str(index) = cB.Text OR cB.Text = "ALL" THEN 
      myBall.ax = Rnd(1, 100)
      myBall.ay = Rnd(1, 100)
    END IF
  NEXT
  Draw.End
  cmdRandomize.Enabled = TRUE
END



PUBLIC SUB dW_MouseMove()
  IF togAddMore.Value THEN 
    AddBall(Mouse.x, Mouse.Y)  
  END IF
END

PUBLIC SUB Slider2_Change()

   lblSlide.Caption = "Floor Slide: " & Str(Slider2.Value / 100)
   world_SlideFloor = Slider2.Value / 100

END


PUBLIC SUB togAddMore_Click()

  IF togAddMore.Value THEN 
    lbladdmore.visible = TRUE  
  ELSE 
    lblAddMore.visible = FALSE
  END IF

END

PUBLIC SUB dW_MouseUp()

  togAddMore.Value = FALSE
  lblAddMore.visible = FALSE  

END

PUBLIC SUB lblAbout_MouseDown()

  FAbout.ShowModal  

END
