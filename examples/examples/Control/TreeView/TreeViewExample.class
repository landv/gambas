' Gambas class file

PUBLIC intEventNumber AS Integer

PUBLIC SUB Form_Open()
  
  DIM picMale AS Picture
  DIM picFemale AS Picture

  picFemale = Picture["Female.png"]
  picMale = Picture["Male.png"]

  'This will populate our treeview with our starting entries
  'Note: I'll just keep the entries text and its key the same to keep it simple
  TreeView1.Add("Bill", "Bill", picMale)
  TreeView1.Add("Ted", "Ted", picMale, "Bill")
  TreeView1.Add("Sally", "Sally", picFemale, "Bill")
  TreeView1.Add("Frank", "Frank", picMale, "Sally")
  'TreeView1.MoveCurrent
  'TreeView1.Item.Selected = TRUE
  'TreeView1.Item.Expanded = TRUE
  
  TreeView1["Bill"].Expanded = TRUE

END

PRIVATE SUB RefreshInfo()

  'This little check just updates our label so that we know how many
  'children an entry has.

  DIM sText AS String

  IF NOT TreeView1.Current THEN 
    Textlabel1.Text = ""
    RETURN 
  ENDIF

  WITH TreeView1.Current

    IF .Children > 1 THEN
      sText = .Text & " has " & .Children & " children."
    ELSE IF .Children = 0 THEN
      sText = .Text & " has no children."
    ELSE
      sText = .Text & " has 1 child."
    END IF
    
    sText &= "<br>Item rect is (" & .X & "," & .Y & "," & .W & "," & .H & ")"
  
  END WITH 
  
  TextLabel1.Text = sText
  
END


PUBLIC SUB TreeView1_Click()

  'This just updates our event stack
  Stack_Event_Log("Click")
  
END


PUBLIC SUB Button1_Click()
  
  DIM sIcon AS String
  DIM sParent AS String

  IF Textbox1.Text <> NULL THEN
    IF RadioButton1.Value THEN
      sIcon = "Male.png"
    ELSE
      sIcon = "Female.png"
    END IF
    'Gets the parent item: the current item, or nothing is the treeview is void
    sParent = TreeView1.Key
    'Now we will add a new entry with a key and a name of what was in the text box
    'We will place it as a child of the currently selected entry
    TreeView1.Add(Textbox1.Text, Textbox1.Text, Picture[sIcon], sParent).EnsureVisible
    TreeView1.Item.EnsureVisible 'This will make sure that the item we just added to the list is in the visable area of the control. (Scrolling if necessary)
    TextBox1.Text = "" 'This empties out textbox
    RefreshInfo ' This will update our label and reflect the new number of kids
  END IF
END

PUBLIC SUB Button2_Click()

    IF NOT TreeView1.Key THEN RETURN
    'Lets remove the current cursor item
    TreeView1.Remove(TreeView1.Key)
    'Now move the cursor to the current item (since we are now pointing at a deleted item)
    'But first we check the count to make sure we didn't delete the last item in the list
    'if we did then we obviously don't run this part.
    IF TreeView1.Count > 0 THEN
      'TreeView1.MoveCurrent
      'This selects or 'highlights' our current item
      'TreeView1.Current.Selected = TRUE
      'This will update our label and reflect the new number of kids
      RefreshInfo
    END IF
END


PUBLIC SUB TreeView1_Collapse()
  'This just updates our event stack
  Stack_Event_Log("Collapse")
END

PUBLIC SUB TreeView1_DblClick()
  'This just updates our event stack
  Stack_Event_Log("DblClick")
END

PUBLIC SUB TreeView1_Select()
  'This just updates our event stack
  RefreshInfo
  Stack_Event_Log("Select")
END

PUBLIC SUB TreeView1_Delete()
  'This just updates our event stack
  Stack_Event_Log("Delete")
END

PUBLIC SUB TreeView1_Expand()
  'This just updates our event stack
  Stack_Event_Log("Expand")
END


PUBLIC SUB Button3_Click()
  TextArea1.Text = ""
  'IntEventNumber = 0
END

PUBLIC SUB About_Click()
  Message.Info("TreeView example written by C. Packard and Fabien Hutrel.")
END

PUBLIC SUB TreeView1_Activate()
  'This just updates our event stack
  Stack_Event_Log("Activate")
END

PUBLIC SUB TreeView1_Rename()
  'This just updates our event stack
  Stack_Event_Log("Rename")
END

PRIVATE SUB Stack_Event_Log(anevent AS String)
  'This updates our event stack, this sub is used by all events... it display the current node key.
  DIM sKey AS String
  TRY sKey = TreeView1.Item.Key
  TextArea1.Text = "Event(" & intEventNumber & "): " & anevent & " Item: '" & sKey & "'\n" & TextArea1.Text
  intEventNumber = intEventNumber + 1  
END



PUBLIC SUB TreeView1_Cancel()
  Stack_Event_Log("Cancel")
END
