' 
'   Copyright (C) 2004, Michael Isaac.  All rights reserved. 
' 

PUBLIC ID AS String

PUBLIC X AS Float 'Center X 
PUBLIC Y AS Float 'Center Y 

PUBLIC MX AS Float 'Motion X 
PUBLIC MY AS Float 'Motion Y 

PUBLIC Size AS Float

PUBLIC Points AS Integer[]
PUBLIC Distance AS Float[]
PUBLIC Degree AS Float[]

PUBLIC Direction AS Float
PUBLIC Agility AS Float
PUBLIC Acceleration AS Float
PUBLIC Torque AS Float

PUBLIC Hull AS Integer
PUBLIC Shield AS Integer

PUBLIC ShieldOn AS Boolean

PUBLIC Thrust AS Boolean
PUBLIC Attack AS Boolean
PUBLIC TurnRight AS Boolean
PUBLIC TurnLeft AS Boolean

PUBLIC SUB _new()
    Points = NEW Integer[]
    Distance = NEW Float[]
    Degree = NEW Float[]
END

PUBLIC SUB Load2DObject(sFilename AS String, sID AS String, X AS Integer, Y AS Integer)
    'DIM F AS File 
    DIM I AS Integer
    DIM sData AS String

    DIM aLine AS NEW String[]

    sData = File.Load(Application.Path &/ "object.data/" &/ sFilename)
    'OPEN Application.Path &/ "object.data/" &/ sFilename FOR READ AS #F
    'READ #F, sData, Lof(F)

    'Split this into an array and remove the CR character
    aLine = Split(Replace(sData, Chr$(13), NULL), "\n")

    WITH ME
        .X = X
        .Y = Y
        .ID = sID

        IF sID LIKE "Object*" THEN
            .Torque = -1
            '.Attack = TRUE
            .MX = Rnd(-4, +5)
            .MY = Rnd(-4, +5)
        END IF

        .Agility = 5
        .Acceleration = 0.75
        .Hull = 100

        .Direction = Rad(180)

        FOR I = 0 TO aLine.Count - 1
            IF ( NOT (Left$(aLine[I], 1) = "'")) AND ( NOT (aLine[I] = "")) THEN
                .Degree.Add(CFloat(Split(aLine[I], ",")[1]))
                .Distance.Add(CFloat(Split(aLine[I], ",")[0]))

                IF .Distance[.Distance.Count - 1] > .Size THEN
                    .Size = .Distance[.Distance.Count - 1]
                END IF
            END IF
        NEXT
    END WITH

    'CLOSE #F
END
