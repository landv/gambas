' Gambas class file

Export
Create Static

Class _Keyring

Property Read Enabled As Boolean

Private $bOpen As Boolean
Private $sKDEWalletId As String
Private $sSecretTool As String

Private Sub OpenWallet()
  
  Dim sResult As String
  Dim sWallet As String
  
  If $bOpen Then Return
  
  Select Case Desktop.Type
  
    Case "KDE"
    
      Shell "dcop kded kwalletd localWallet" To sResult
      sWallet = Trim(Split(sResult, "\n")[0])
      Shell Subst("dcop kded kwalletd open &1 0", Shell(sWallet)) To sResult
      $sKDEWalletId = Trim(sResult)
    
    Case "GNOME", "LXDE", "MATE", "XFCE", "UNITY"
    
      $sSecretTool = System.Find("secret-tool")
      If Not $sSecretTool Then Component.Load("gb.desktop.gnome.keyring")
    
    Case "KDE4", "KDE5"
    
      Shell "qdbus org.kde.kwalletd /modules/kwalletd localWallet" To sResult
      sWallet = Trim(Split(sResult, "\n")[0])
      Shell Subst("qdbus org.kde.kwalletd /modules/kwalletd open &1 0 &2", Shell$(sWallet), Shell$(Application.Title)) To sResult
      $sKDEWalletId = Trim(sResult)
    
    Default
      
      Error.Raise("desktop is not supported")
  
  End Select
  
Catch
  
  Error.Raise("Cannot store passwords on desktop " & Desktop.Type & ": " & Error.Text)

End


Public Sub _get((Key) As String) As String
  
  Dim sResult As String
  
  OpenWallet
  
  Select Case Desktop.Type
  
    Case "KDE"
    
      Shell Subst("dcop kded kwalletd readPassword &1 &2 &3", $sKDEWalletId, Shell$(Application.Name), Shell$(Key)) To sResult
      sResult = Replace(sResult, "\n", "")
      Return sResult

    Case "GNOME", "LXDE", "MATE", "XFCE", "UNITY"
    
      If $sSecretTool Then
        Exec [$sSecretTool, "lookup", "name", Key, "magic", Application.Name] To sResult
        Return Replace(sResult, "\n", "")
      Else
        Return _Keyring.GetPassword(Key)
      Endif
      
    Case "KDE4", "KDE5"
    
      Shell Subst("qdbus org.kde.kwalletd /modules/kwalletd readPassword &1 &2 &3 &4", $sKDEWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Application.Title)) To sResult
      sResult = Replace(sResult, "\n", "")
      Return sResult
  
  End Select
  
End

Public Sub _put(Value As String, (Key) As String)
  
  OpenWallet
  
  Select Case Desktop.Type
  
    Case "KDE"
    
      Shell Subst("dcop kded kwalletd writePassword &1 &2 &3 &4", $sKDEWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Value)) Wait

    Case "GNOME", "LXDE", "MATE", "XFCE", "UNITY"
    
      If $sSecretTool Then
        If Value Then
          Shell "echo -n " & Shell(Value) & "| secret-tools store --label='" & Replace(Key, "'", "'\\''") & "' name " & Shell$(Key) & " magic " & Shell(Application.Name) Wait
        Else
          Exec [$sSecretTool, "clear", "name", Key, "magic", Application.Name] Wait
        Endif
      Else
        _Keyring.SetPassword(Key, Value)
      Endif
      
    Case "KDE4", "KDE5"
  
      Shell Subst("qdbus org.kde.kwalletd /modules/kwalletd writePassword &1 &2 &3 &4 &5 >/dev/null 2>&&1", $sKDEWalletId, Shell$(Application.Name), Shell$(Key), Shell$(Value), Shell$(Application.Title)) Wait

  End Select
  
End

Private Function Enabled_Read() As Boolean

  Select Case Desktop.Type
  
    Case "KDE", "KDE4", "KDE5"
    
      Return True
    
    Case "GNOME", "LXDE", "MATE", "XFCE", "UNITY"
    
      Try OpenWallet
      If Error Then Return False
      Return True
    
    Default
      
      Return False
      
  End Select

End
