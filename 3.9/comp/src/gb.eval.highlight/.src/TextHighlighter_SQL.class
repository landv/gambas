' Gambas class file

Inherits TextHighlighter

Public Const Name As String = "sql"

Private Const IDENT_CAR As String = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789"

Static Private $cDatatype As Collection
Static Private $cFunction As Collection
Static Private $cKeyword As Collection
Static Private $cOperator As Collection
Static Private $aKeywords As String[]

Static Private Sub LoadFile(sPath As String, Optional bKeyword As Boolean) As Collection
  
  Dim sWord As String
  Dim cCol As New Collection(gb.IgnoreCase)
  
  For Each sWord In Split(File.Load(sPath), "\n", "", True)
    cCol[sWord] = True
    If bKeyword Then $aKeywords.Add(sWord)
  Next
  Return cCol
  
End


Static Public Sub _init()
  
  $aKeywords = New String[]
  $cDatatype = LoadFile("sql/datatypes")
  $cFunction = LoadFile("sql/functions")
  $cKeyword = LoadFile("sql/keywords", True)
  $cOperator = LoadFile("sql/operators")
  
End

Private Sub CheckWord(sWord As String) As Integer
  
  If $cKeyword.Exist(sWord) Then Return Highlight.Keyword
  If $cOperator.Exist(sWord) Then Return Highlight.Operator
  If $cFunction.Exist(sWord) Then Return Highlight.Function
  If $cDatatype.Exist(sWord) Then Return Highlight.DataType
  Return Highlight.Normal
  
End



Public Sub Run(sText As String)
  
  Dim iState As Integer
  Dim iTag As Integer
  Dim iLenText As Integer
  Dim iPos As Integer
  Dim sCar As String
  Dim sWait As String
  Dim iLen As Integer
  
  iState = TextHighlighter.State
  iTag = TextHighlighter.Tag
  iLenText = String.Len(sText)
  
  For iPos = 1 To iLenText
    
    sCar = String.Mid$(sText, iPos, 1)
    
    Select Case iState
      
      Case Highlight.Normal
        
        If Len(sCar) > 1 Then
          TextHighlighter.Add(Highlight.Error)
        Else If Asc(sCar) < 33 Then
          TextHighlighter.Add(iState)
        Else If sCar = "#" Or If String.Mid$(sText, iPos, 2) = "--" Then
          TextHighlighter.Add(Highlight.Comment, iLenText - iPos + 1)
          Break
        Else If String.Mid$(sText, iPos, 2) = "/*" Then
          iState = Highlight.Comment
          TextHighlighter.Add(iState)
        Else If sCar = "'" Or If sCar = "\"" Then
          iState = Highlight.String
          TextHighlighter.Add(iState)
          sWait = sCar
        Else If sCar = "`" Then
          iState = Highlight.Symbol
          TextHighlighter.Add(iState)
          sWait = sCar
        Else
          iLen = Helper.ReadNumber(sText, iPos)
          If iLen > 0 Then
            TextHighlighter.Add(Highlight.Number, iLen)
            iPos += iLen - 1
            Continue
          Endif
          
          iLen = Helper.ReadIdentifier(sText, iPos, IDENT_CAR)
          If InStr(IDENT_CAR, String.Mid$(sText, iPos, 1)) Then
            iState = CheckWord(String.Mid$(sText, iPos, iLen))
          Else
            While iLen > 0
              iState = CheckWord(String.Mid$(sText, iPos, iLen))
              If iState <> Highlight.Normal Then Break
              Dec iLen
            Wend
          Endif
          
          If iLen > 0 Then
            If iState <> Highlight.Normal Then
              TextHighlighter.Add(iState, iLen)
              iPos += iLen - 1
              iState = Highlight.Normal
              Continue
            Else 
              TextHighlighter.Add(Highlight.Symbol, iLen)
              iPos += iLen - 1
              Continue
            Endif
          Endif
          
          TextHighlighter.Add(Highlight.Error)
            
        Endif
        
      Case Highlight.Symbol
        
        TextHighlighter.Add(iState)
        If sCar = sWait Then
          iState = Highlight.Normal
        Endif
        
      Case Highlight.Comment
        
        TextHighlighter.Add(iState)
        If String.Mid$(sText, iPos, 2) = "*/" Then
          TextHighlighter.Add(iState)
          Inc iPos
          iState = Highlight.Normal
        Endif
        
      Case Highlight.String
        
        TextHighlighter.Add(iState)
        If sCar = "\\" Then
          TextHighlighter.Add(iState)
          Inc iPos
        Else If sCar = sWait Then
          iState = Highlight.Normal
        Endif
        
    End Select
  
  Next
  
  'If bTestShowLimit Then
  '  Highlight.ShowLimit = LTrim(sText) Begins "function "
  'Endif
  
  TextHighlighter.State = iState
  TextHighlighter.Tag = iTag
  
End

Public Sub GetKeywords() As String[]
  
  Return $aKeywords
  
End
