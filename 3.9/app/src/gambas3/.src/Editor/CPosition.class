' Gambas class file

Static Private $aPositions As New CPosition[]
Static Private $iCurrent As Integer
Static Private $iDisable As Integer

Private Const MAX_POS As Integer = 40

Public Path As String
Public Method As String
Public (Line) As Integer
Public Column As Integer
Public Weak As Boolean

Static Public Sub Clear()
  
  $aPositions.Clear
  $iCurrent = 0
  $iDisable = 0
  UpdatePosition
  
End

Static Private Sub UpdatePosition()
  
  FMain.UpdatePosition($iCurrent <= 1, $iCurrent > $aPositions.Max)
  
End


Static Public Sub SaveCurrent(hForm As Object)

  Dim hEditor As TextEditor
  Dim hPos As CPosition

  If $iDisable Then Return
  If Not hForm Then Return
  If hForm <> Project.ActiveForm Then Return

  hPos = New CPosition
  With hForm
    hPos.Path = .Path
    Try hEditor = hForm.GetEditor()
    If hEditor Then
      hPos.Line = hEditor.Line
      hPos.Column = hEditor.Column
      Try hPos.Method = hForm.GetProcAt(hEditor.Line)
    Else
      hPos.Line = -1
      hPos.Column = -1
    Endif
  End With

  If $iCurrent > 0 Then
    With $aPositions[$iCurrent - 1]
      If .IsEqual(hPos) Then Return
      If .IsNear(hPos) Then
        If .Weak Then 
          .Line = hPos.Line
          .Column = hPos.Column
          Return
        Else
          hPos.Weak = True
        Endif
      Endif
    End With
  Endif

  If $iCurrent > MAX_POS Then
    $aPositions.Remove(0)
    Dec $iCurrent
  Endif

  $aPositions.Resize($iCurrent)
  $aPositions.Add(hPos)
  Inc $iCurrent
  
  UpdatePosition
  
End

Static Public Sub MovePrevious()
  
  If $iCurrent <= 1 Then Return
  
  Dec $iCurrent
  $aPositions[$iCurrent - 1].Move
  UpdatePosition
  
End

Static Public Sub MoveNext()
  
  If $iCurrent > $aPositions.Max Then Return
  
  $aPositions[$iCurrent].Move
  Inc $iCurrent
  UpdatePosition
  
End

Public Sub IsEqual(hPos As CPosition) As Boolean
  
  If Path = hPos.Path And If {Line} = hPos.Line Then Return True 'And If Column = hPos.Column Then Return True
  
End

Public Sub IsNear(hPos As CPosition) As Boolean
  
  If Abs({Line} - hPos.Line) <= 1 Then Return Path = hPos.Path 
  
End

Public Sub Move()
  
  Dim hForm As Object
  
  Inc $iDisable
  Try hForm = Project.OpenFile(Path)
  If hForm And If {Line} >= 0 Then hForm.Goto({Line}, Column)
  Dec $iDisable
  
End

Static Public Sub Disable()
  
  Inc $iDisable
  
End

Static Public Sub Enable()
  
  If $iDisable <= 0 Then Return
  Dec $iDisable
  
End

Public Sub GetDesc() As String
  
  Dim sDesc As String
  
  sDesc = File.Name(Path)
  If Method Then sDesc &= "." & Method
  If {Line} >= 0 Then sDesc &= "." & CStr({Line} + 1)
  
  Return sDesc
  
End


Static Public Sub FillMenu(mnuParent As Menu)
  
  Dim I As Integer
  Dim hMenu As Menu
  
  mnuParent.Children.Clear
  
  For I = $aPositions.Max DownTo 0
    hMenu = New Menu(mnuParent) As "mnuBackward"
    With $aPositions[I]
      hMenu.Text = .GetDesc()
      hMenu.Picture = Project.GetFileIcon(.Path)
      hMenu.Tag = I
      If I = ($iCurrent - 1) Then hMenu.Checked = True
    End With
  Next
  
End

Static Public Sub mnuBackward_Click()
  
  Dim I As Integer = Last.Tag
  
  $iCurrent = I + 1
  $aPositions[I].Move
  UpdatePosition
  
End
