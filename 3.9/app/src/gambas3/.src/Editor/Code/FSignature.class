' Gambas class file

Static Private $hEditor As TextEditor
Private $bUseHelp As Boolean
Private $bShowHelp As Boolean

Private $DX As Integer
Private $DY As Integer
Private $iMinW As Integer
Private $iMinH As Integer
Private $iMaxY As Integer
Private $hSymbol As CSymbolInfo
Private $iArrow As Integer
Private $iCol As Integer

Public Sub _new()
  
  webHelp.Zoom = 0.7
  
End


Private Sub UpdateSignature(Optional hForm As FEditor)
  
  Dim iX, iY As Integer
  Dim hCont As Container

  panSignature.H = lblNewSignature.H + 4
  If $bShowHelp And $bUseHelp Then
    MHelp.InitWebViewWith(webHelp, MHelp.TYPE_SYMBOL, $hSymbol.Name, $hSymbol.Class, "noimage")
    sepHelp.Show
    panHelp.Show
    panResizeTop.Show
    panResizeBottom.Show
    $iMinW = Max(128, lblNewSignature.W + 2 + panResizeTop.W + btnHelp.W)
    $iMinH = Desktop.Scale * 24
    Me.Resize(Max(Me.W, $iMinW), Max(Me.H, $iMinH))
  Else
    sepHelp.Hide
    panHelp.Hide
    panResizeTop.Hide
    panResizeBottom.Hide
    If hForm Then
      Me.Resize(lblNewSignature.W + 4 + If($bUseHelp, btnHelp.W + panResizeTop.W, 0), lblNewSignature.H + 6)
    Else
      Me.H = lblNewSignature.H + 6
    Endif
  Endif
  
  iY = $hEditor.Y + $hEditor.ToPosY() + $hEditor.Current.Height
  
  If (iY + Me.Height) > ($hEditor.Y + $hEditor.H) Then
    iY = $hEditor.Y + $hEditor.ToPosY() - Me.Height
    If iY < 0 Then
      Me.Height += iY
      iY = 0
    Endif
    panResizeBottom.Hide
    panResizeTop.Show
    sepHelp.Raise
    panSignature.Raise
    $iArrow = If($bShowHelp, Align.Bottom, Align.Top)
  Else
    panResizeBottom.Show
    panResizeTop.Hide
    sepHelp.Raise
    panHelp.Raise
    $iArrow = If($bShowHelp, Align.Top, Align.Bottom)
  Endif

  If $bUseHelp Then btnHelp.Refresh

  hCont = $hEditor.Parent
  iX = $hEditor.ToPosX($iCol)
  Do
    If hCont Is Form Then Break
    iX += hCont.X
    iY += hCont.Y
    hCont = hCont.Parent
  Loop
  
  iX = Max(0, Min(iX, $hEditor.W - Me.Width))
  
  If Not hForm Then 
    Me.Move(iX, iY)
    Return
  Endif
  
  If Me.Parent = hForm And If iX = Me.X And iY = Me.Y And Me.Visible Then Return

  Me.Reparent(hForm, iX, iY)
  Me.Show
  Me.Raise
  $hEditor.SetFocus
  
End


Public Sub Open(hForm As FEditor, iCol As Integer, hSymbol As CSymbolInfo, iArg As Integer)
  
  Dim sSign As String
  Dim sName As String

  If hForm.GetEditor() <> $hEditor Then HideFrom($hEditor)
  $hEditor = hForm.GetEditor()

  sSign = hSymbol.GetSignature(True, iArg)
  If Not sSign Then Return
  
  lblSignature.Font = $hEditor.Font
  lblNewSignature.Font = $hEditor.Font
  $bShowHelp = False 
  $bUseHelp = Settings["/ShowHelpInPopup", 1]
  btnHelp.Visible = $bUseHelp
  
  sName = hSymbol.Name
  If Left$(sName) = "_" Then sName = hSymbol.Class
  sSign = "<b>" & sName & "</b>" & sSign 
  
  lblNewSignature.W = Max(64, $hEditor.W - 64)
  lblNewSignature.Text = sSign
  lblNewSignature.Adjust
  'lblSignature.AutoResize = FALSE
  'lblSignature.W = lblNewSignature.W
  'DEBUG lblSignature.W;; hEditor.W
  
  $hSymbol = hSymbol
  $iCol = iCol
  
  UpdateSignature(hForm)
  
  ' If $bShowHelp Then
  '   MHelp.InitWebViewWith(webHelp, MHelp.TYPE_SYMBOL, hSymbol.Name, hSymbol.Class, "noimage")
  '   sepHelp.Show
  '   webHelp.Show
  '   panRight.Show
  '   $iMinW = Max(128, lblNewSignature.W + 2 + panRight.W + btnHelp.W)
  '   $iMinH = Desktop.Scale * 24
  '   Me.Resize(Max(Me.W, $iMinW), Max(Me.H, $iMinH))
  ' Else
  '   sepHelp.Hide
  '   webHelp.Hide
  '   panRight.Hide
  '   Me.Resize(lblNewSignature.W + 2 + btnHelp.W, lblSignature.H + 2)
  ' Endif

  lblSignature.Text = sSign
  'lblSignature.Adjust
  
  
End


Public Function ManageKey() As Boolean
  
  Select Case Key.Code
  
    Case Key.Escape
      Me.Hide
      Return True
    
    'CASE Key.Backspace
      'ME.Hide
      
  End Select
  
End


Public Sub lblSignature_MouseDown()

  Me.Hide

End

Public Sub panResizeBottom_MouseDown()

  $DX = Me.W - Mouse.ScreenX
  $DY = Me.H - Mouse.ScreenY

End

Public Sub panResizeBottom_MouseMove()

  Dim W, H As Integer
  
  W = Max($iMinW, $DX + Mouse.ScreenX)
  H = Max($iMinH, $DY + Mouse.ScreenY)
  
  Me.Resize(W, H)

End

Public Sub panResizeTop_MouseDown()

  $DX = Me.W - Mouse.ScreenX
  $DY = Me.Y - Mouse.ScreenY
  $iMaxY = Me.Y + Me.H - $iMinH

End

Public Sub panResizeTop_MouseMove()

  Dim W, Y As Integer
  
  W = Max($iMinW, $DX + Mouse.ScreenX)
  Y = Min($iMaxY, $DY + Mouse.ScreenY)
  
  Me.Move(Me.X, Y, W, Me.H + Me.Y - Y)

End

Public Sub Form_Close()

  $hEditor = Null

End

Public Sub HideFrom(hEditor As TextEditor)
  
  If $hEditor <> hEditor Then Return
  $hEditor = Null
  Me.Hide
  
End

Public Sub VisibleFrom(hEditor As TextEditor) As Boolean

  Return $hEditor = hEditor And Me.Visible
  
End

Public Sub webHelp_GotFocus()

  Try $hEditor.SetFocus

End

Public Sub btnHelp_MouseDown()

  $bShowHelp = Not $bShowHelp
  UpdateSignature

End

Public Sub btnHelp_Draw()

  If btnHelp.Hovered Then Draw.Foreground = Color.Blue
  Draw.Style.Arrow(0, 0, btnHelp.W, btnHelp.H, $iArrow)

End

Public Sub btnHelp_Enter()

  btnHelp.Refresh

End

Public Sub btnHelp_Leave()

  btnHelp.Refresh

End

Public Sub panHelp_Arrange()

  panResizeTop.Move(panHelp.W - panResizeTop.W, 0)
  panResizeBottom.Move(panHelp.W - panResizeBottom.W, panHelp.H - panResizeBottom.H)
  panResizeTop.Raise
  panResizeBottom.Raise

End
