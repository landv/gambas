' Gambas class file

Private $sType As String

Static Private $iMagicNumber As Integer = 314159265

Static Public Sub __Get(sType As String) As Variant
  
  Dim vVal As Variant
  
  Inc $iMagicNumber
  
  Select Case sType
    
    Case "b"
      vVal = True
    Case "c"
      vVal = CByte($iMagicNumber)
    Case "d"
      vVal = Now
    Case "f"
      vVal = Pi
    Case "i"
      vVal = $iMagicNumber
    Case "l"
      vVal = CLong($iMagicNumber)
    Case "o"
      vVal = New CDatatype("o")
    Case "p"
      vVal = CPointer($iMagicNumber)
    Case "h"
      vVal = CShort($iMagicNumber)
    Case "g"
      vVal = CSingle($iMagicNumber)
    Case "s"
      vVal = "Gambas"
    Case "v"
      vVal = New CDatatype("v")
    Case Else
      vVal = New CDatatype(sType)
    
  End Select

  Return vVal
  
End

Static Public Sub __Make(hArray As Object) As CDatatype
  
  Return New CDatatype(Object.Type(hArray))
  
End

Public Sub _new(sType As String)
  
  $sType = sType
  
End

Public Sub _get(...) As Variant

  Dim hSymbol As CSymbolInfo  
  
  If $sType = "o" Or If $sType = "v" Then Return __Get("v")
  
  Try hSymbol = Project.Documentation.GetClassSymbols($sType)["_get"]
  If hSymbol Then Return __Get(hSymbol.Type)
  
End

Public Sub _put((vVal) As Variant, ...)
  
End

Public Sub _property() As Boolean
  
  Dim hSymbol As CSymbolInfo  

  Try hSymbol = Project.Documentation.GetClassSymbols($sType)[Param.Name]
  If hSymbol Then Return hSymbol.IsProperty()
  
End

Public Sub _unknown(...) As Variant
  
  Dim hSymbol As CSymbolInfo  

  Try hSymbol = Project.Documentation.GetClassSymbols($sType)[Param.Name]
  If hSymbol Then Return __Get(hSymbol.Type)
  
End

Public Sub __GetType() As String
  
  Return $sType
  
End

