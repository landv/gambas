' Gambas class file

Static Public Sort As Integer
Static Public Ascending As Boolean

Public Name As String
Public Count As Integer
Public Time As Long
Property Read Self As Long
Public FirstTime As Long
Public MaxTime As Long
Public Level As Integer
Public RecTime As Long

Public Called As New Collection
Public CalledList As New CProfile[]

Public Caller As New Collection
Public CallerList As New CProfile[]

Public StartLine As Integer = -1
Public Code As String

Private $iSelf As Long = -1

Public Sub _compare(hOther As CProfile) As Integer
  
  Dim iRet As Integer
  
  Select Case Sort
    
    Case 0
      iRet = Comp(Name, hOther.Name, gb.IgnoreCase)
      
    Case 1
      iRet = - Sgn(Count - hOther.Count)
      
    Case 2
      iRet = - Sgn({Time} - hOther.Time)
      
    Case 3
      iRet = - Sgn({Time} / Count - hOther.Time / hOther.Count)
      
    Case 4
      iRet = - Sgn(Me.Self - hOther.Self)
      
    Case 5
      iRet = - Sgn(Me.Self / Count - hOther.Self / hOther.Count)
      
  End Select
  
  If Not Ascending Then iRet = - iRet
  Return iRet
  
End

Public Sub AddCalled(sFunc As String, iTime As Long)
  
  Dim hProf As CProfile
  
  hProf = Called[sFunc]
  If Not hProf Then
    hProf = New CProfile
    hProf.Name = sFunc
    Called[sFunc] = hProf
    CalledList.Add(hProf)
  Endif
  
  Inc hProf.Count
  If Level > 1 Then
    hProf.RecTime += iTime
  Else
    hProf.Time += iTime
  Endif
  
End

Private Function Self_Read() As Long

  Dim hProf As CProfile
  
  If $iSelf < 0 Then
  
    $iSelf = {Time} + RecTime
    For Each hProf In CalledList
      $iSelf -= hProf.Time + hProf.RecTime
    Next
  
  Endif
  
  Return $iSelf

End

Public Sub AddCaller(sFunc As String)
  
  Dim hProf As CProfile
  
  hProf = Caller[sFunc]
  If Not hProf Then
    hProf = New CProfile
    hProf.Name = sFunc
    Caller[sFunc] = hProf
    CallerList.Add(hProf)
  Endif
  
  Inc hProf.Count
  
End

Public Sub GetTitle() As String
  
  If Name Begins ".Eval." Then
    Return "<i>" & ("Evaluator") & "</i>"
  Else If Name = "@" Then
    Return "<i>" & ("Event loop") & "</i>"
  Else
    Return Name
  Endif
  
End

Public Sub SetEventLoop()
  
  {Time} -= Self_Read()
  $iSelf = 0
  
End
