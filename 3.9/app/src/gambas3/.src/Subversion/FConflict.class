' Gambas class file

Private $sPath As String
Private $sLoadedPath As String
Private $bModify As Boolean
Private $iType As Integer

Private Const TYPE_TEXT As Integer = 0
Private Const TYPE_IMAGE As Integer = 1
Private Const TYPE_BINARY As Integer = 2

Public Sub Run(sPath As String) As Boolean
  
  Dim sFile As String
  Dim iRev As Integer
  Dim iMaxRev As Integer

  For Each sFile In Dir(File.Dir(sPath), File.Name(sPath) & ".r*")
    Try iRev = CInt(Mid$(File.Ext(sFile), 2))
    If iRev > iMaxRev Then iMaxRev = iRev
  Next
  
  Select Case Message.Warning(Subst(("This file is in conflict with the revision #&1.\nYou must resolve the conflict in order to use the file."), CStr(iMaxRev)), ("&Edit"), ("Close"))
    Case 2
      Return
  End Select

  $sPath = sPath
  FConflict.ShowDialog
  
End


Public Sub btnCut_Click()

  edtConflict.Cut

End

Public Sub btnCopy_Click()

  edtConflict.Copy

End

Public Sub btnPaste_Click()

  edtConflict.Paste

End

Public Sub btnUndo_Click()

  edtConflict.Undo

End

Public Sub btnRedo_Click()

  edtConflict.Redo

End

Public Sub btnIndent_Click()

  edtConflict.Indent

End

Public Sub btnUnindent_Click()

  edtConflict.Unindent

End

Public Sub btnClose_Click()

  Me.Close

End

Private Sub LoadFile(sPath As String)

  Inc Application.Busy
  
  If $iType = TYPE_TEXT Then
    edtConflict.Load(sPath)
    $bModify = False
    edtConflict.SetFocus
  Else
    fprInfo.Hide
  'Else If $iType = TYPE_IMAGE Then
  '  ivwImage.Image = Image.Load(sPath)
  Endif
  
  fprInfo.Path = sPath
  $sLoadedPath = sPath
  
  sPath = Mid$(sPath, Len(Project.Dir) + 1)
  If Left(sPath) = "/" Then sPath = Mid$(sPath, 2)
  lblPath.Text = sPath
  panConflict_Arrange
  '
  Dec Application.Busy
  
Catch
  
  Application.Busy = 0
  Message.Error(("Unable to load file:") & "\n<tt>" & sPath & "</tt>\n\n" & Error.Text)
    
End

Private Sub GetFileType() As Integer
  
  Select Case String.LCase(File.Name($sPath))
    Case "changelog"
      Return TYPE_TEXT
  End Select
  
  Select Case LCase(File.Ext($sPath))
  
    Case "class", "module", "form", "text", "txt", "html", "css", "svg", "desktop", "inf"
      Return TYPE_TEXT
      
    Case "jpg", "jpeg", "png", "gif", "xpm", "bmp"
      Return TYPE_IMAGE
  
  End Select
  
  Return TYPE_BINARY
  
End



Public Sub Form_Open()

  Dim hTabPanel As TabPanel
  Dim sFile As String
  Dim hMenu As Menu

  'Me.Title = Mid$($sPath, Len(Project.Dir) + 2) & " - " & ("Version conflict")
  Me.Icon = Project.GetFileIcon($sPath)
  
  $iType = GetFileType()
  
  'tabConflict[0].Visible = $iType = TYPE_TEXT
  'tabConflict[1].Visible = $iType = TYPE_IMAGE
  
  If $iType = TYPE_TEXT Then
    fprInfo.Add(panEditor, ("Text"))
  Else If $iType = TYPE_IMAGE Then
    fprInfo.Add(panImage, ("Image"))
  Endif

  hTabPanel = Container(fprInfo.Children[0]).Children[0]
  hTabPanel.Index = hTabPanel.Count - 1

  edtConflict.ReadConfig
  edtConflict.Styles[Highlight.Comment].Bold = True

  hMenu = New Menu(mnuOpen) As "mnuOpen"
  hMenu.Text = File.Name($sPath)
  For Each sFile In Dir(File.Dir($sPath), File.Name($sPath) & ".*")
    hMenu = New Menu(mnuOpen) As "mnuOpen"
    hMenu.Text = sFile
  Next
  btnOpen.Menu = "mnuOpen"

  LoadFile($sPath)
  
  Settings.Read(Me)

End


Public Sub edtConflict_Highlight(Text As String)

  Dim iState As Integer

  iState = TextHighlighter.State

  TextHighlighter.Limit = False
  
  If Text Begins "<<<<<<" Then 
    'iPos = String.InStr(sText, " ")
    TextHighlighter.Add(Highlight.Comment, String.Len(Text))
    'Highlight.Add(Highlight.Keyword, String.Len(sText) - iPos)
    TextHighlighter.State = Highlight.Number
    TextHighlighter.ShowLimit = True
  Else If Text Begins "======" Then
    TextHighlighter.Add(Highlight.Comment, String.Len(Text))
    TextHighlighter.State = Highlight.Function
  Else If Text Begins ">>>>>>" Then
    TextHighlighter.Add(Highlight.Comment, String.Len(Text))
    'iPos = String.InStr(sText, " ")
    'Highlight.Add(Highlight.Comment, iPos)
    'Highlight.Add(Highlight.Keyword, String.Len(sText) - iPos)
    TextHighlighter.State = Highlight.Normal
  Else 
    TextHighlighter.Add(iState, String.Len(Text))
  Endif

End

Public Sub Form_Close()

  If $bModify Then 
    Select Case Message.Question(("The file has been modified.\nDo you really want to close the dialog?"), ("Close"), ("Cancel"))
      Case 2
        Stop Event
        Return
    End Select
  Endif

  If panConflict.Visible Then Settings.Write(Me)

End

Public Sub edtConflict_Change()

  $bModify = True

End

Public Sub btnSolve_Click()

  Dim iInd As Integer
  Dim sText As String
  
  btnSave_Click
  
  For iInd = 0 To edtConflict.Count - 1
    sText = edtConflict[iInd].Text
    If sText Begins "<<<<<<" Or If sText Begins "======" Or If sText Begins ">>>>>>" Then 
      edtConflict.GotoCenter(0, iInd)
      Message.Warning(("Some conflicts are not yet resolved."))
      Return
    Endif
  Next

  If VersionControl.Resolve($sPath) Then 
    Message.Error(("Unable to resolve the conflict."))
    Return
  Endif
  
  Me.Close

End

Public Sub btnSave_Click()

  Select $iType
    Case TYPE_TEXT
      edtConflict.Save($sPath)
      $bModify = False
    Default
      If $sLoadedPath <> $sPath Then
        Kill $sPath
        Copy $sLoadedPath To $sPath
        $bModify = False
      Endif
  End Select

End

Public Sub btnOpen_Click()

  If $iType = TYPE_TEXT Then
    If $bModify Then 
      Select Case Message.Question(("The file has been modified.\nDo you really want to open another file?"), ("Open"), ("Cancel"))
        Case 2
          Return
      End Select
    Endif
  Endif

  Dialog.Path = $sPath
  Dialog.Filter = [File.Name($sPath) & "*", ("Conflict files")]
  Dialog.ShowHidden = True
  If Dialog.OpenFile() Then Return

  LoadFile(Dialog.Path)
  $bModify = True

End

Public Sub mnuOpen_Click()
  
  LoadFile(File.Dir($sPath) &/ Last.Text)
  
End

Public Sub panConflict_Arrange()

  lblPath.W = lblPath.Font.TextWidth(lblPath.Text) + 8
  lblPath.Move(panConflict.W - lblPath.W, 0)
  lblPath.Raise

End
