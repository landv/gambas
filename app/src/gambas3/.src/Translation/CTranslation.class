' Gambas class file

Public Header As String
Public Keys As New String[]
Public Translations As New Collection
Public Comments As New Collection

Private Const MODE_NONE As Integer = 0
Private Const MODE_MSGID As Integer = 1
Private Const MODE_MSGSTR As Integer = 2

Public Sub _new(sLang As String)
  
  LoadTranslation(sLang)
  
End

Static Public Sub SubstHeader(sHeader As String, Optional sLang As String) As String

  Dim sDate As String
  
  sDate = Format(DateAdd(Now, gb.Second, System.TimeZone), "yyyy-mm-dd hh:nn UTC")
  
  sHeader = Replace(sHeader, "$(PACKAGE)", Project.Name)
  sHeader = Replace(sHeader, "$(VERSION)", Project.FullVersion)
  sHeader = Replace(sHeader, "$(NOW)", sDate)
  sHeader = Replace(sHeader, "$(DATE)", sDate)
  sHeader = Replace(sHeader, "$(NAME)", Settings["/Identity/Name", User.Name])
  sHeader = Replace(sHeader, "$(MAIL)", Settings["/Identity/Mail", User.Name & "@" & System.Host])
  sHeader = Replace(sHeader, "$(LANG)", sLang)
  
  Return sHeader
  
End

Private Sub CheckTranslate(sMsgComment As String, cCache As Collection) As String

  Dim iPos As Integer
  Dim sFile As String
  Dim sPath As String
  Dim aFile As String[]
  Dim I As Integer
  Dim aResult As New String[]
  Dim bShouldTranslate As Boolean
  
  aFile = Split(sMsgComment, " ", "", True)
  For I = 0 To aFile.Max
    sFile = aFile[I]
    If sFile Begins "." Then 
      aResult.Add(sFile)
    Else
      sPath = sFile
      iPos = InStr(sPath, ":")
      If iPos Then sPath = Left(sPath, iPos - 1)
      
      If cCache.Exist(sPath) Then 
        bShouldTranslate = cCache[sPath]
      Else
        bShouldTranslate = Project.ShouldTranslate(Project.FindPath(sPath), True)
        cCache[sPath] = bShouldTranslate
      Endif
      
      If bShouldTranslate Then aResult.Add(sFile)
      
    Endif
  Next
  
  Return aResult.Join(" ")
  
End

Private Sub LoadTranslation(sLang As String) 
  
  Dim sPath As String
  Dim hFile As File
  Dim sLine As String
  Dim sMsgId As String
  Dim sMsgStr As String
  Dim sMsgComment As String
  Dim iMode As Integer
  Dim bFuzzy As Boolean
  Dim iPos As Integer
  Dim cCache As New Collection
  Dim cKey As New Collection
  Dim bIgnore As Boolean
  
  sPath = Language.GetPath(sLang, "po")
  If Not Exist(sPath) Then Return 
  
  hFile = Open sPath 

  While Not Eof(hFile)
    Line Input #hFile, sLine
    If Not sLine Then Break
    Header &= sLine & "\n"
  Wend

  iPos = InStr(Header, "#, fuzzy")
  If iPos = 0 Then iPos = InStr(Header, "#,fuzzy")
  If iPos Then Header = Left(Header, iPos - 1)

  Header &= SubstHeader(File.Load("po-header.txt"), sLang)

  Do

    If Not Eof(hFile) Then

      Line Input #hFile, sLine

      If sLine Begins "#" Then

        If sLine Begins "#:" Then
          sMsgComment = Trim(sMsgComment & " " & Mid$(sLine, 3))
          Continue
        Else If sLine Begins "#," Then
          If InStr(sLine, "fuzzy") Then
            bFuzzy = True
            Continue
          Endif
        Else If sLine = "# gb-ignore" Then
          bIgnore = True
        Endif
        
      Else

        If Left$(sLine, 6) = "msgid " Then
          sMsgId = Mid$(sLine, 8, -1)
          iMode = MODE_MSGID
          Continue
        Endif
  
        If Left$(sLine, 7) = "msgstr " Then
          sMsgStr = Mid$(sLine, 9, -1)
          iMode = MODE_MSGSTR
          Continue
        Endif
  
        If Left$(sLine) = Chr$(34) Then
          If iMode = MODE_MSGID Then
            sMsgId = sMsgId & Mid$(sLine, 2, -1)
          Else If iMode = MODE_MSGSTR Then
            sMsgStr = sMsgStr & Mid$(sLine, 2, -1)
          Endif
          Continue
        Endif
        
      Endif

    Endif

    If Trim(sMsgId) Then

      If sMsgComment Then
        sMsgComment = CheckTranslate(sMsgComment, cCache)
        If Not sMsgComment Then 
          sMsgId = ""
          sMsgComment = ""
          sMsgStr = ""
          bFuzzy = False
          bIgnore = False
          Continue
        Endif
      Endif

      'Inc iIndex
      If Not cKey.Exist(sMsgId) Then
        Keys.Add(sMsgId)
        cKey[sMsgId] = True
      Else
        Error "gambas3: warning: duplicate translation: "; sMsgId
      Endif

      If sMsgStr = "-\\n" Then sMsgStr = "-"
      
      If bIgnore Then
        sMsgStr = "-"
        bIgnore = False
      Endif

      If bFuzzy Then
        bFuzzy = False
      Else
        Translations[sMsgId] = sMsgStr
      Endif
      Comments[sMsgId] = sMsgComment
      sMsgId = ""
      sMsgComment = ""
      sMsgStr = ""

    Endif

    If Eof(hFile) Then Break

  Loop
  
  Close #hFile
  
End

Static Public Sub FindTranslation(sPath As String, sFind As String) As String
  
  Dim hFile As File
  Dim sLine As String
  Dim sMsgId As String
  Dim sMsgStr As String
  Dim sMsgComment As String
  Dim iMode As Integer
  Dim bFuzzy As Boolean
  Dim bIgnore As Boolean
  
  If Not Exist(sPath) Then Return 
  
  sFind = Replace(sFind, "\n", "\\n")
  
  hFile = Open sPath 

  While Not Eof(hFile)
    Line Input #hFile, sLine
    If Not sLine Then Break
    'Header &= sLine & "\n"
  Wend

  ' iPos = InStr(Header, "#, fuzzy")
  ' If iPos = 0 Then iPos = InStr(Header, "#,fuzzy")
  ' If iPos Then Header = Left(Header, iPos - 1)
  ' 
  ' Header &= SubstHeader(File.Load("po-header.txt"), sLang)

  Do

    If Not Eof(hFile) Then

      Line Input #hFile, sLine

      If sLine Begins "#" Then
        If sLine Begins "#:" Then
          Continue
        Else If sLine Begins "#," Then
          If InStr(sLine, "fuzzy") Then
            bFuzzy = True
            Continue
          Endif
        Else If sLine = "# gb-ignore" Then
          bIgnore = True
        Endif
      Else
        If Left$(sLine, 6) = "msgid " Then
          sMsgId = Mid$(sLine, 8, -1)
          iMode = MODE_MSGID
          Continue
        Endif
  
        If Left$(sLine, 7) = "msgstr " Then
          sMsgStr = Mid$(sLine, 9, -1)
          iMode = MODE_MSGSTR
          Continue
        Endif
      Endif

      If Left$(sLine) = Chr$(34) Then
        If iMode = MODE_MSGID Then
          sMsgId = sMsgId & Mid$(sLine, 2, -1)
        Else If iMode = MODE_MSGSTR Then
          sMsgStr = sMsgStr & Mid$(sLine, 2, -1)
        Endif
        Continue
      Endif

    Endif

    If Trim(sMsgId) Then

      If sMsgStr = "-\\n" Then sMsgStr = "-"
      
      If bIgnore Then
        sMsgStr = "-"
        bIgnore = False
      Endif

      If bFuzzy Then
        bFuzzy = False
      Else
        If sMsgId = sFind Then 
          If sMsgStr = "-" Then sMsgStr = sMsgId
          Close #hFile
          Return Replace(sMsgStr, "\\n", "\n")
        Endif
      Endif

      sMsgId = ""
      sMsgComment = ""
      sMsgStr = ""

    Endif

    If Eof(hFile) Then Break

  Loop
  
  Close #hFile
  
End
