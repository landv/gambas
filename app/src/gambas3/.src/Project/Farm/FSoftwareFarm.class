' Gambas class file

Private $bNoRefresh As Boolean
Private $SY As Integer
Private $hSoft As CSoftware

Private Enum WIZ_INDEX, WIZ_FARM, WIZ_SOFTWARE

Private Enum SORT_DATE, SORT_DOWNLOAD, SORT_VOTE, SORT_INSTALLED

Private $hIdentity As FarmIdentity
Private $hTimerArrange As Timer

Public Sub Run()
  
  Me.ShowModal
  
End

Public Sub Form_Open()

  Dim aGroup As New CSoftwareGroup[]
  Dim hButton As MenuButton
  Dim hGroup As CSoftwareGroup
  Dim sIcon As String

  Settings.Read(Me)
  Me.Center

  $hIdentity = FarmIdentity.Get(FarmIdentity.LastFarm)
  ReloadFarm

  $bNoRefresh = True
  'cmbFarm.List = FarmRequest.GetFarms()
  'cmbFarm.Text = FarmIdentity.LastFarm
  cmbSort.Index = 0
  $bNoRefresh = False
  
  aGroup.Add(CSoftwareGroup("Game", ("Games"), "game"))
  aGroup.Add(CSoftwareGroup("Development", ("Development"), "development"))
  aGroup.Add(CSoftwareGroup("Example", ("Examples"), "help"))
  aGroup.Add(CSoftwareGroup("Education", ("Education"), "book"))
  aGroup.Add(CSoftwareGroup("Graphics", ("Graphics"), "color"))
  aGroup.Add(CSoftwareGroup("Audio", ("Audio"), "audio"))
  aGroup.Add(CSoftwareGroup("Video", ("Video"), "video"))
  aGroup.Add(CSoftwareGroup("Office", ("Office"), "office"))
  aGroup.Add(CSoftwareGroup("Accessories", ("Accessories"), "tools"))
  aGroup.Add(CSoftwareGroup("Internet", ("Internet"), "internet"))
  aGroup.Add(CSoftwareGroup("System", ("System"), "computer"))

  aGroup.Sort

  aGroup.Add(CSoftwareGroup("", ("All software"), "img/48/all.png"))
  
  For Each hGroup In aGroup
    
    hButton = New MenuButton(panGroup) As "ButtonGroup"
    hButton.Text = hGroup.Name
    hButton.Arrow = False
    hButton.Border = False
    hButton.Tag = hGroup.Key
    sIcon = hGroup.Icon
    If InStr(sIcon, "/") = 0 Then sIcon = "icon:/48" &/ sIcon
    hButton.Picture = Picture[sIcon]
    hButton.ResizeScaled(32, 10)
    hButton.Mouse = Mouse.Pointing
    
  Next
  
End

Public Sub ButtonGroup_Click()
  
  wizFarm.MoveNext
  tagFarm.Clear
  If Last.Tag Then tagFarm.Add(Last.Tag)
  Reload
  
End


' Public Sub Form_Arrange()
' 
'   dwgBackground.Move(svwFarm.X, svwFarm.Y, svwFarm.W, svwFarm.H)
'   dwgBackground.Lower
' 
' End
' 
' Public Sub dwgBackground_Draw()
' 
'   Paint.DrawImage($hLogo, 16, 16, 256, 256)
'   Paint.Font.Size = 40
'   Paint.Font.Bold = True
'   Paint.Background = Color.Gray
'   Paint.DrawTextShadow("Gambas\nSoftware\nFarm", 292, 16, Me.W, 256, Align.Left)
'   Paint.Text("Gambas\nSoftware\nFarm", 292, 16, Me.W, 256, Align.Left)
'   Paint.Fill
' 
' End

Public Sub cmbSort_Click()

  Reload

End

' Public Sub cmbFarm_Click()
' 
'   tagFarm.SetFarm(cmbFarm.Text)
'   ReloadFarm
' 
' End

Public Sub Reload()

  Dim hReq As FarmRequest
  
  If wizFarm.Index <> WIZ_FARM Then Return
  If $bNoRefresh Then Return
  
  timLoad.Stop
  
  $SY = svwFarm.ScrollY
  
  FarmRequestManager.Clear
  svwFarm.Children.Clear
  
  hReq = New FarmRequest($hIdentity.Farm) As "Request"
  hReq.SearchSoftware(["date", "download", "vote", "date"][cmbSort.Index], "", txtFilter.Text, tagFarm.GetTags())
  spnFarm.Show
  
End

Private Sub ShowMessage(sText As String)

  Dim hLabel As Label
  
  hLabel = New Label(svwFarm)
  hLabel.Text = sText
  hLabel.Font.Italic = True
  hLabel.Font.Grade = 2
  hLabel.Foreground = Color.LightForeground
  hLabel.Padding = Desktop.Scale
  hLabel.AutoResize = True
  
End


Private Sub CheckSoftwareCount()
  
  If svwFarm.Children.Count Then Return
  ShowMessage(("No software found."))
  
End


Public Sub Request_Finished()
  
  Dim hReq As FarmRequest = Last
  Dim sId As String
  Dim hSoftwareBox As SoftwareBox
  Dim aId As String[]
  Dim sText As String
  
  spnFarm.Hide
  
  If hReq.HasFailed() Then
    If hReq.ErrorText Then 
      sText = hReq.ErrorText
    Else
      sText = ("Request cancelled.")
    Endif
    ShowMessage(sText)
    Return
  Endif
  
  aId = Split(hReq.Result["Result"])
  For Each sId In aId
    
    hSoftwareBox = New SoftwareBox(svwFarm, CInt(sId), hReq.Farm) As "SoftwareBox"
    If cmbSort.Index = SORT_INSTALLED Then hSoftwareBox.Hide
    hSoftwareBox.ResizeScaled(48, 30)
    If cmbSort.Index = SORT_INSTALLED Then hSoftwareBox.Load
    
  Next
  
  CheckSoftwareCount()
  
  If $SY Then 
    Wait
    svwFarm.ScrollY = $SY
  Endif

End

Public Sub SoftwareBox_Ready()
  
  Dim hSoftwareBox As SoftwareBox = Last
  Dim hSoft As CSoftware
  
  hSoft = hSoftwareBox.Software
  
  If cmbSort.Index = SORT_INSTALLED And If Not hSoft.IsInstalled() Then Goto DELETE
  If hSoft.IsInstalled() And If Comp(hSoft.Version, hSoft.GetInstallVersion(), gb.Natural) < 0 Then Goto DELETE
  hSoftwareBox.Show
  Return
  
DELETE:

  hSoftwareBox.Delete
    
End


Public Sub Form_Close()

  If $hTimerArrange Then $hTimerArrange.Stop
  
  FarmRequestManager.Clear
  FarmIdentity.LastFarm = $hIdentity.Farm
  Settings.Write(Me)

End

Public Sub txtFilter_Click()

  txtFilter.Clear

End

Public Sub txtFilter_Change()

  timLoad.Stop
  timLoad.Start

End

Public Sub timLoad_Timer()

  Reload

End

Public Sub tagFarm_Change()

  timLoad.Stop
  timLoad.Start

End

Public Sub dwgTitle_Draw()

  Dim DS As Integer = Desktop.Scale
  
  Paint.Font.Grade = 8
  Paint.Font.Bold = True
  Paint.Background = Color.Black
  Paint.DrawTextShadow(("Gambas Software Farm"), DS, 0, DS * 32, Paint.H, Align.Left, 8)
  Paint.Background = Color.White
  Paint.DrawText(("Gambas Software Farm"), DS, 0, DS * 32, Paint.H, Align.Left)
  
End

Private Sub ReloadFarm()

  Dim hIdentity As FarmIdentity

  CSoftware.ClearCache($hIdentity.Farm)
  hIdentity = FarmIdentity.Get($hIdentity.Farm)
  hIdentity.Init(lblIdentity)
  tagFarm.SetFarm($hIdentity.Farm)
  Reload

End

Public Sub btnLogin_Click()

  If FFarmLogin.Run($hIdentity.Farm) Then Return
  
  $hIdentity = FFarmLogin.Identity
  ReloadFarm

End

Private Sub UpdateSoftware()

  Dim sText As String
  Dim sTag As String
  Dim hTag As Label
  
  If Not $hSoft Then Return

  If $hSoft.State = CSoftware.STATE_ERROR Then Return

  With $hSoft
  
    'lblName.Text = .Name & " " & .Version & " (" & .Vendor & ") " 
    dwgName.Tooltip = "#" & $hSoft.Id
  
    panURL.Visible = Not IsNull(.URL)
    urlWebSite.Link = .URL
  
    If .YourVote < 0 Then
      btnVote.Text = ("Vote")
      btnVote.Enabled = False
    Else
      btnVote.Enabled = True
      If .YourVote = 1 Then
        btnVote.Text = ("Cancel my vote")
      Else
        btnVote.Text = ("Vote")
      Endif
    Endif
  
    If .CanUpgrade() Then
      btnInstall.Text = ("Upgrade")
      btnInstall.Picture = Picture["icon:/medium/up"]
      btnDownload.Hide
    Else If .IsInstalled() Then
      btnInstall.Text = ("Uninstall")
      btnInstall.Picture = Picture["icon:/medium/undo"]
      btnDownload.Hide
    Else
      btnInstall.Text = ("Install")
      btnInstall.Picture = Picture["icon:/medium/add"]
      btnDownload.Show
    Endif
    
    btnRemove.Visible = FarmIdentity.Get($hSoft.Farm).Login = $hSoft.Owner
  
    sText = Trim(.Description)
  
    If Not sText Then
      
      txtDescription.Hide
      
    Else
    
      txtDescription.Text = sText
      txtDescription.H = txtDescription.Font.RichTextHeight(Replace(Html(sText), "\n", "<br>"), txtDescription.W)
      txtDescription.Show
      
    Endif
    
    lblDesc.Visible = txtDescription.Visible
    
    Try picIcon.Picture = .Icon.Picture
  
    panTags.Children.Clear
    
    If .Tags Then
      For Each sTag In .Tags
        hTag = New Label(panTags)
        hTag.Text = " " & sTag & " "
        hTag.Padding = 4
        If sTag Begins "gb." Then
          hTag.Background = &HDF6B00&
        Else
          hTag.Background = &H3398C3&
        Endif
        hTag.Foreground = Color.White
        hTag.Font.Bold = True
        hTag.AutoResize = True
      Next
      
      lblTags.Visible = .Tags.Count > 0
    Endif
    
    imvScreenshot.Image = Null
    panScreenshot.Hide
    If .DownloadScreenshot() Then
      Software_Screenshot
    Else
      spnScreenshot.Show
      spnScreenshot.Raise
    Endif
  
  End With
  
  dwgName.Refresh
  dwgStat.Refresh
  
End

Public Sub Software_Screenshot()
  
  spnScreenshot.Hide
  If $hSoft.Screenshot Then
    Try imvScreenshot.Image = $hSoft.Screenshot
    imvScreenshot.ZoomFit
    panScreenshot.Show
  Else
    panScreenshot.Hide
  Endif
  
End


Public Sub SoftwareBox_Click()
  
  Dim hSoft As CSoftware = Last.Software
  If hSoft.State <> CSoftware.STATE_READY Then Return
  
  $hSoft = hSoft
  wizFarm.MoveNext
  
End

Public Sub btnGoBack_Click()

  wizFarm.MovePrevious

End

Public Sub panTitle_Arrange()

  Dim W As Integer

  W = picIcon.Parent.H - Desktop.Scale * 2
  picIcon.Resize(W, W)
  'dwgStat.Move(dwgStat.Parent.W - dwgStat.W - Desktop.Scale, Desktop.Scale)
  
End

' Public Sub dwgScreenshot_Draw()
' 
'   Dim fScale, W, H As Float
'   
'   If $hScreenshot Then 
'     fScale = Max($hScreenshot.W / dwgScreenshot.W, $hScreenshot.H / dwgScreenshot.H)
'     W = $hScreenshot.W / fScale
'     H = $hScreenshot.H / fScale
'     Paint.DrawImage($hScreenshot, (dwgScreenshot.W - W) / 2, (dwgScreenshot.H - H) / 2, W, H)
'   Endif
' 
' End

Public Sub panTextDesc_Arrange()

  If txtDescription.Visible Then
    If Not $hTimerArrange Then
      $hTimerArrange = New Timer As "TimerArrange"
      $hTimerArrange.Trigger
    Endif
    
  Endif

End

Public Sub TimerArrange_Timer()
  
  txtDescription.H = txtDescription.Font.RichTextHeight(Replace(Html(txtDescription.Text), "\n", "<br>"), txtDescription.W)
  $hTimerArrange.Stop
  $hTimerArrange = Null
  
End


Public Sub panDesc_Arrange()
  
  spnScreenshot.Move(panDesc.ScreenX - spnScreenshot.Parent.ScreenX + panDesc.W \ 2 - spnScreenshot.W \ 2, panDesc.ScreenY - spnScreenshot.Parent.ScreenY + panDesc.H \ 2 - spnScreenshot.H \ 2)
  If wizFarm.Index = WIZ_SOFTWARE Then imvScreenshot.ZoomFit
  
End


Public Sub dwgStat_Draw()
  
  If Not $hSoft Then Return
  Paint.Font.Grade = 2
  SoftwareBox.PaintStat($hSoft, True)
  
End

Public Sub btnDownload_Click()
  
  Dim sName As String = $hSoft.GetTitle()
  Dim sErr As String

  If Message.Question(Subst(("Do you really want to download <b>&1</b>?"), sName), ("Download"), ("Cancel")) = 1 Then
    sErr = $hSoft.Install(True) 
    If sErr Then
      Message.Error(Subst(("Unable to download <b>&1</b>:"), sName) & "\n\n" & sErr)
    Else
      Message(Subst(("<b>&1</b> has been successfully downloaded."), sName))
      Reload
    Endif
  Endif
  
End


Public Sub btnInstall_Click()

  Dim sName As String = $hSoft.GetTitle()
  Dim sErr As String
  
  If $hSoft.IsInstalled() Then
    If $hSoft.CanUpgrade() Then
      If Message.Question(Subst(("Do you really want to upgrade to <b>&1</b>?"), sName), ("Upgrade"), ("Cancel")) = 1 Then
        sErr = $hSoft.Install() 
        If sErr Then
          Message.Error(Subst(("Unable to upgrade to <b>&1</b>:"), sName) & "\n\n" & sErr)
        Else
          Message(Subst("<b>&1</b> has been successfully upgraded.", sName))
          Goto REFRESH
        Endif
      Endif
    Else
      If Message.Question(Subst(("Do you really want to uninstall <b>&1</b>?"), sName), ("Uninstall"), ("Cancel")) = 1 Then
        sErr = $hSoft.Uninstall() 
        If sErr Then
          Message.Error(Subst(("Unable to remove <b>&1</b>:"), sName) & "\n\n" & sErr)
        Else
          Message(Subst(("<b>&1</b> has been successfully removed."), sName))
          Goto REFRESH
        Endif
      Endif
    Endif
  Else
    If Message.Question(Subst(("Do you really want to install <b>&1</b>?"), sName), ("Install"), ("Cancel")) = 1 Then
      sErr = $hSoft.Install() 
      If sErr Then
        Message.Error(Subst(("Unable to install <b>&1</b>:"), sName) & "\n\n" & sErr)
      Else
        Message(Subst(("<b>&1</b> has been successfully installed."), sName))
        Goto REFRESH
      Endif
    Endif
  Endif

  Return
  
REFRESH:

  Reload

End

Public Sub btnVote_Click()

  Dim sErr As String

  sErr = $hSoft.ToggleVote() 
  If sErr Then
    Message.Error(("Unable to modify your vote.") & "\n\n" & sErr)
  Else
    Reload
  Endif

End

Public Sub Software_Change()
  
  UpdateSoftware
  
End

Public Sub svwFarm_Arrange()

  spnFarm.Move(svwFarm.W \ 2 - 32, svwFarm.H \ 2 - 32, 64, 64)

End

Public Sub urlWebSite_Click()

  Dim sLink As String

  sLink = urlWebSite.Link
  If sLink Not Like "http*://*" Then sLink = "http://" &/ sLink
  Project.OpenWebPage(sLink)
  Stop Event

End

Public Sub btnRemove_Click()
  
  Dim sName As String = $hSoft.Name
  Dim sErr As String
  
  If Message.Warning(Subst(("Do you really want to delete <b>&1</b> from the farm server?"), sName), ("Delete"), ("Cancel")) <> 1 Then Return
  
  sErr = $hSoft.Delete()   
  If sErr Then
    Message.Error(Subst(("Unable to remove <b>&1</b>:"), sName) & "\n\n" & sErr)
  Else
    Message(Subst("<b>&1</b> has been successfully removed.", sName))
  Endif
  
  wizFarm.MovePrevious
  ReloadFarm
  
End

' Public Sub txtVendor_Click()
' 
'   txtVendor.Clear
' 
' End
' 
' Public Sub txtVendor_Change()
' 
'   timLoad.Stop
'   timLoad.Start
' 
' End
' 
' Public Sub txtVendor_KeyPress()
'   
'   Project.OnVendorKeyPress()
'   
' End

Public Sub wizFarm_Change()

  Dim hObs As Observer
  
  btnGoBack.Enabled = wizFarm.Index > 0
  
  Select Case wizFarm.Index
    
    Case WIZ_INDEX
      
      FarmRequestManager.Clear
  
    Case WIZ_FARM 
    
      $hSoft = Null
      imvScreenshot.Image = Null
    
    Case WIZ_SOFTWARE 
    
      If Not $hSoft.Observed Then 
        hObs = New Observer($hSoft) As "Software"
        $hSoft.Observed = True
      Endif
    
      UpdateSoftware
    
  End Select

End

Public Sub chkShowFilter_Click()

  Dim hPanel As VBox

  panFilter.Visible = chkShowFilter.Value
  
  hPanel = panFilter.Parent
  hPanel.AutoResize = True
  hPanel.AutoResize = False

End

Public Sub btnRegister_Click()

  FFarmRegister.Run

End

Public Sub dwgName_Draw()

  If Not $hSoft Then Return
  
  Paint.Font.Grade = 4
  $hSoft.PaintName(0, 0)

End
