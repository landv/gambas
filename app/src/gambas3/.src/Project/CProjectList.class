' Gambas class file

Public Enum TYPE_RECENT, TYPE_EXAMPLE

Event Click(Path As String, Another As Boolean)

Property AllowOpenExtern As Boolean

Private $hList As ScrollView
Private $hFilter As ButtonBox
Private $iSort As Integer
Private $iType As Integer
Private $hObserver As Observer
Private $iArrange As Integer
Private $hObsList As Observer
Private $hButton As Label
Private $bOpenExtern As Boolean
Private $dRecent As Date
Private $sLastURL As String
Private $hHelp As WebView

Public Sub _new(hList As ScrollView, hFilter As ButtonBox, iType As Integer, Optional iArrange As Integer = Arrange.Row)
  
  $hList = hList
  $hFilter = hFilter
  $iType = iType
  $iArrange = iArrange
  
  $hObserver = New Observer($hFilter) As "Filter"
  $hObsList = New Observer(hList) As "ScrollView"
  
  $hButton = New Label(hList.Window) As "Button"
  $hButton.Ignore = True
  $hButton.Hide
  $hButton.Text = ("Open in another window") & "â€¦"
  $hButton.ResizeScaled(3, 3)
  $hButton.Padding = 8
  $hButton.AutoResize = True
  $hButton.Font.Grade = -2
  $hButton.Mouse = Mouse.Pointing
  $hButton.Border = False
  $hButton.Foreground = &HE0E0E0&
  
End

Public Sub SetSort(iSort As Integer)
  
  $iSort = iSort
  Fill(True)
  
End

Public Sub SetArrangement(iArrange As Integer)
  
  If $iArrange = iArrange Then Return
  
  $iArrange = iArrange
  Clear
  Fill
  
End

Private Sub GetExamples() As String[]

  Dim sFile As String
  Dim aList As New String[]
  Dim sDir As String
  Dim hStat As Stat

  sDir = Desktop.DataDir &/ "gambas3/src/example"
  If Not IsDir(sDir) Then Return aList

  For Each sFile In Dir(sDir)
    If Left(sFile) = "." Then Continue
    hStat = Stat(sDir &/ sFile)
    If hStat.Link Then
      aList.Add(Project.GetAbsoluteLink(sDir &/ sFile, hStat.Link))
    Else
      aList.Add(sDir &/ sFile)
    Endif
  Next

  aList.Sort(gb.Natural)

  Return aList

End


Private Sub FillWithExample()

  Dim sExample As String
  ' Dim sDir As String
  ' Dim sLastDir As String
  ' Dim hDrawingArea As DrawingArea
  Dim hProjectItem As ProjectBox
  Dim sGroup As String
  Dim aExamples As String[]
  
  Inc Application.Busy
  $hList.Arrangement = Arrange.None
  
  aExamples = GetExamples()
  If aExamples.Count = 0 Then
    
    If Not $hHelp Then
      Clear
      $hHelp = New WebView($hList) As "ExampleWebView"
      $hHelp.MoveScaled(0, 0, 4, 4)
      $hHelp.Foreground = Color.LightForeground
      $hHelp.HTML = "<html><body><style type=\"text/css\">BODY { font-family:sans-serif;font-style:italic;color:#" & Hex$(Color.LightForeground) & "; }</style>" & 
        Subst(("Examples are stored on the Gambas farm server. Click &1 to access the farm server and download them..."), "<a href=\"farm://\">" & ("here") & "</a>") &
        "</body></html>"
    Endif
    $hList.Arrangement = Arrange.Fill
    $hFilter.Enabled = False
    
  Else
  
    Clear

    For Each sExample In aExamples
    
      ' sDir = File.Dir(sExample)
      ' If sDir <> sLastDir Then
      '   If $iArrange = Arrange.Row And If $hList.Children.Count Then
      '     hPanel = New Panel($hList)
      '     hPanel.Resize(1, 1)
      '     hPanel.Expand = True
      '   Endif
      '   hDrawingArea = New DrawingArea($hList) As "dwgTitle"
      '   With hDrawingArea
      '     .Enabled = False
      '     .Tag = Project.ExampleTitle[sDir]
      '     sGroup = .Tag
      '     '.Font = Font["Bold"]
      '     .H = .Font.Height
      '     If $iArrange = Arrange.Row Then .Expand = True
      '   End With
      '   'bHighlight = False
      '   sLastDir = sDir
      ' Endif
      
      hProjectItem = New ProjectBox($hList) As "ProjectItem"
      If $iArrange = Arrange.Row Then
        hProjectItem.ResizeScaled(32, 16)
      Else
        hProjectItem.ResizeScaled(1, 9)
      Endif
      hProjectItem.ShowAuthors = True
      hProjectItem.Path = sExample
      hProjectItem.Group = sGroup
    
    Next
  
    ApplyFilter($hFilter.Text)
    $hList.Arrangement = $iArrange
    $hFilter.Enabled = True
  
  Endif
  
  Dec Application.Busy

End

Public Sub Clear()
  
  HideButton
  $hList.Children.Clear
  $hHelp = Null
  
End


Private Sub FillWithRecent(bClear As Boolean)
  
  Dim hProjectItem As ProjectBox
  'Dim hFirst As ProjectBox
  Dim aRecent As CRecentProject[]
  Dim hRecent As CRecentProject
  'Dim bHighlight As Boolean
  Dim sTitle As String
  Dim sLastTitle As String
  Dim hDrawingArea As DrawingArea
  Dim hPanel As Panel
  
  If Not bClear Then
    If $hList.Children.Count And If Not CRecentProject.IsOutOfDate($dRecent) Then Return
  Endif

  Inc Application.Busy

  'panRecent.Hide
  'lstRecent.Lock
  $hList.Arrangement = Arrange.None
  Clear()

  aRecent = CRecentProject.Get($iSort)

  For Each hRecent In aRecent
    
    sTitle = hRecent.GetTitle($iSort)
    
    If sTitle <> sLastTitle Then
      If $iArrange = Arrange.Row Then
        If $hList.Children.Count Then
          hPanel = New Panel($hList)
          hPanel.Resize(1, 1)
          hPanel.Expand = True
        Endif
      Endif
      hDrawingArea = New DrawingArea($hList) As "dwgTitle"
      With hDrawingArea
        .Enabled = False
        .Tag = sTitle 
        '.Font = Font["Bold"]
        .H = .Font.Height
        If $iArrange = Arrange.Row Then .Expand = True
      End With
      sLastTitle = sTitle
    Endif
    
    hProjectItem = New ProjectBox($hList) As "ProjectItem"
    If $iArrange = Arrange.Row Then
      hProjectItem.ResizeScaled(32, 16)
    Else
      hProjectItem.ResizeScaled(1, 9)
    Endif
    hProjectItem.ShowAuthors = True
    hProjectItem.Path = hRecent.Path
    
  Next
  
  ApplyFilter($hFilter.Text)
  
  'If hFirst Then hFirst.Selected = True
  
  ' Workaround a scrollview bug that does not show the scrollbars.
  'lstRecent.Unlock 
  'panRecent.Show
  
  $dRecent = CRecentProject.LastLoad
  
  $hList.Arrangement = $iArrange
  $hList.ScrollY = 0
  
  $hFilter.Enabled = aRecent.Count
  
  Dec Application.Busy
  
End

Public Sub Fill(Optional bClear As Boolean)
  
  Select Case $iType
    Case TYPE_RECENT
      FillWithRecent(bClear)
    Case TYPE_EXAMPLE
      FillWithExample
  End Select
  
End

Public Sub ApplyFilter(sFilter As String)

  Dim hCtrl, hLast As Control
  Dim hProjectItem As ProjectBox
  Dim bShowEnd As Boolean

  $hList.Arrangement = Arrange.None
  
  If Not sFilter Then
    sFilter = "*"
  Else
    sFilter = "*" & String.LCase(sFilter) & "*"
  Endif
  
  For Each hCtrl In $hList.Children
    
    If hCtrl Is ProjectBox Then
      hProjectItem = hCtrl
      hProjectItem.Visible = hProjectItem.Match(sFilter)
      ' If hProjectItem.Visible Then 
      '   If Not hFirst Then hFirst = hProjectItem
      ' Endif
    Endif
    
  Next
  
  For Each hCtrl In $hList.Children
    
    If hCtrl Is DrawingArea Then
      If hLast Then 
        hLast.Hide
      Endif
      hLast = hCtrl
      bShowEnd = False
    Else If hCtrl Is ProjectBox Then
      If hCtrl.Visible Then
        If hLast Then 
          hLast.Show
        Endif
        hLast = Null
        bShowEnd = True
      Endif
    Else
      hCtrl.Visible = bShowEnd
    Endif
    
  Next
  
  If hLast Then hLast.Hide
  
  $hList.Arrangement = Arrange.Row
  
  'hFirst.Selected = True
  'hList.Unlock
  
End


Public Sub dwgTitle_Draw()
  
  Dim P As Integer
  Dim hDrawingArea As DrawingArea = Last  
  
  Paint.Background = Color.LightForeground
  Paint.DrawText(hDrawingArea.Tag, 1, 0, Paint.W - P * 2, Paint.H, Align.BottomNormal)
  
End

Private Sub HideButton()

  $hButton.Hide
  $hButton.Reparent($hButton.Window)

End

Public Sub ProjectItem_Click()

  Raise Click(Last.Path, False)
  
End

Public Sub Button_Enter()
  
  $hButton.Foreground = Color.LinkForeground
  
End

Public Sub Button_Leave()
  
  $hButton.Foreground = &HE0E0E0&
  
End

Public Sub Button_MouseDown()
  
  Raise Click(Last.Parent.Parent.Path, True)
  
End

Public Sub ProjectItem_Enter()
  
  Dim hProject As ProjectBox
  
  If Not $bOpenExtern Then Return
  hProject = Last  
  $hButton.Reparent(hProject.Children[0])
  $hButton.Move(hProject.W - $hButton.W, hProject.H - $hButton.H)
  $hButton.Show
  
End

Public Sub ProjectItem_Leave()
  
  If Not $bOpenExtern Then Return
  HideButton
  
End



Public Sub GetFirst() As String

  Dim hChild As Control
  Dim hProjectItem As ProjectBox

  For Each hChild In $hList.Children
    Try hProjectItem = hChild
    If Not Error And If hProjectItem.Visible Then Return hProjectItem.Path
  Next

End


Public Sub Filter_Click()

  $hFilter.Text = ""

End

Public Sub Filter_Change()

  ApplyFilter($hFilter.Text)

End

Public Sub Filter_Activate()
  
  Dim sFirst As String = GetFirst()
  If sFirst Then Raise Click(sFirst, False)
  
End


Public Sub ScrollView_GotFocus()
  
  $hFilter.SetFocus
  
End

' Public Sub ScrollView_Arrange()
'   
'   Debug $hList.Name;; $hList.Children.Count;; 
'   If $hList.Children.Count Then
'     Error Str($hList.Children[0].Visible);;
'   Endif
'   Error
'   
' End


Private Function AllowOpenExtern_Read() As Boolean

  Return $bOpenExtern

End

Private Sub AllowOpenExtern_Write(Value As Boolean)

  $bOpenExtern = Value
  If Not Value Then $hButton.Hide

End

Public Sub ExampleWebView_Link(sURL As String)
  
  $sLastURL = sURL
  
End

Public Sub ExampleWebView_Error()
  
  If $sLastURL = "farm://" Then 
    FSoftwareFarm.Run
    Fill
  Endif
  
End

Public Sub ExampleWebView_Menu()
  
  Stop Event
  
End
