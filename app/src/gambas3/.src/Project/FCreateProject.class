' Gambas class file

Static Public InAnotherWindow As Boolean

Static Private $sPath As String

Static Private $bRepository As Boolean
Static Private $bAnother As Boolean

Static Private $hTemplate As CProjectList
Static Private $sTemplate As String

Static Public Sub Run(Optional bAnother As Boolean) As String
  
  $bAnother = bAnother
  Inc Application.Busy
  If Me.ShowModal() Then Return $sPath

End

Public Sub Form_Open()

  'dchProject.SelectedPath = Settings["/FCreateProject/Path", System.User.Home]
  Settings.Read(Me)
  wizProject.Index = 0
  edtOutput.ReadConfig
  edtOutput.Text = ""
  chkOther.Visible = $bAnother
  Settings.Read(dchProject, "dchProject")

  ProjectBox.ShowButton = False
  $hTemplate = New CProjectList(svwTemplate, txtFilter, CProjectList.TYPE_TEMPLATE, Arrange.Row) As "ProjectItem"
  $hTemplate.Fill
  $hTemplate.ApplyFilter(txtFilter.Text)
  txtFilter.SetFocus

  $sTemplate = ""

  Dec Application.Busy

End

Public Sub wizProject_Cancel()

  Me.Close  

End

Public Sub ProjectItem_Click(sPath As String, (bAnother) As Boolean)
  
  $sTemplate = sPath
  Balloon.Hide
  
End

Public Sub ProjectItem_DblClick((sPath) As String)
  
  wizProject.MoveNext
  
End

Private Sub CreateProject() As Boolean
  
  Dim sDir As String
  Dim sName As String
  Dim sPath As String 
  Dim bErr As Boolean
  Dim hFile As File
  Dim hDest As File
  Dim sLine As String
  Dim sTemp As String
  
  'DIM hIcon AS Picture

  If $bRepository Then 
  
    sPath = Trim(txtRepository.Text)
    If Right(sPath) = "/" Then sPath = Left(sPath, -1)
    
    sDir = dchProject.SelectedPath 
    edtOutput.ReadOnly = False
    bErr = VersionControl.CheckoutSVN(sPath, sDir, edtOutput)
    edtOutput.ReadOnly = True
    
    If bErr Then Error.Raise(("Project checkout has failed."))
    
    sDir &/= File.Name(sPath)

  Else
  
    sName = Trim(txtName.Text)
    sDir = dchProject.SelectedPath &/ sName
    
    Project.CopyProject($sTemplate, sDir)
    
    Shell "rm -rf " & Shell$(sDir &/ ".lang") Wait
    Kill sDir &/ "icon.png"
    
    sTemp = Temp$()
    
    hFile = Open sDir &/ ".project"
    hDest = Open sTemp For Create
    
    For Each sLine In hFile.Lines
      
      If sLine Begins "# Compiled with" Then 
        Continue
      Else If sLine Begins "Title=" Then
        sLine = "Title=" & txtTitle.Text
      Else If sLine Begins "Translate=" Then
        If Not chkTranslate.Value Then Continue
        sLine = "Translate=1"
        Mkdir sDir &/ ".lang"
      Else If sLine Begins "Version=" Then
        sLine = "Version=0.0.1"
      Else If sLine Begins "Description=" Then
        Continue
      Else If sLine Begins "Icon=" Then
        Continue
      Endif
      
      Print #hDest, sLine
      
    Next
    
    Close #hFile
    Close #hDest
    
    Kill sDir &/ ".project"
    Copy sTemp To sDir &/ ".project"
    
    Project.MakeDirectoryIcon(sDir)

  Endif
  
  $sPath = sDir
  Return False

Catch

  Message.Error(("Cannot create project!") & "\n\n" & Error.Text)
  Return True
  
End


Public Sub Form_Close()

  Settings.Write(dchProject, "dchProject")
  Settings.Write(Me)

End

Public Sub dchProject_Icon(Path As String)

  If Exist(Path &/ ".project") Then 
    dchProject.Icon = Project.GetIcon(Path, 16)
  Endif  

End

Public Sub wizProject_BeforeChange()
  
  Select Case wizProject.Index
    
    Case 0
      If Not $sTemplate Then
        Balloon.Warning(("Please choose a template"), svwTemplate)
        Stop Event
      Endif
      $bRepository = File.Name($sTemplate) = "~subversion"
    
    Case 1
      panRepository.Visible = $bRepository
      panIdent.Visible = Not $bRepository
      If $bRepository Then  
        txtRepository.SetFocus
      Else 
        txtName.SetFocus
        txtName_Change
      Endif
      
  End Select
  
End


Public Sub wizProject_Close()

  Dim sMsg As String

  If $bRepository Then 
  
    If Not Trim(txtRepository.Text) Then
      txtRepository.SetFocus
      Balloon.Warning(("Please enter the location of the repository."), txtRepository)
      Return
    Endif
  
  Else

    sMsg = Project.CheckProjectName(txtName.Text, dchProject.SelectedPath) 
    If sMsg
      txtName.SetFocus
      txtName.SelectAll
      Balloon.Warning(sMsg, txtName)
      Return
    Endif  

  Endif

  ' IF NOT dchProject.SelectedPath THEN 
  '   dchProject.SetFocus
  '   'tabProject.Index = 1
  '   Balloon.Warning(("Choose the project parent directory."), dchProject)
  '   RETURN
  ' ENDIF

  If CreateProject() Then Return
  
  Message(("The project has been successfully created."))
  
  InAnotherWindow = chkOther.Value
  
  Me.Close(True)

End

' Public Sub lstType_Click()
' 
'   $bRepository = Left(lstType.Current.Tag) = "!"
'   svwOption.Enabled = Not $bRepository
' 
' End

Public Sub txtName_Change()

  If Trim(txtName.Text) Then
    lblFinalDir.Text = dchProject.SelectedPath &/ Trim(txtName.Text)
  Else
    lblFinalDir.Text = dchProject.SelectedPath &/ "..."
  Endif

End

Public Sub svwTemplate_MouseUp()

  $hTemplate.Current = Null
  $sTemplate = ""

End
