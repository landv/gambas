' Gambas class file

Inherits DrawingArea

Event Activate
Event Cancel
Event Insert

Property Text As String
Property Pos As Integer

Static Private $hComp As FileCompletion

Private $hTextBox As TextBox

Public Sub _new()

  $hTextBox = New TextBox(Me) As "TextBox"
  $hTextBox.Border = False
  AutoResize
  
  Me.Proxy = $hTextBox
  
End

Private Sub AutoResize()

  Me.Resize(Max(Me.Font.TextWidth($hTextBox.Text), Me.Font.TextWidth("ø")) + Desktop.Scale + 2, Desktop.Scale * 3)
  $hTextBox.Move(1, 1, Me.W - 2, Me.H - 2)

End


Private Function Text_Read() As String

  Dim sText As String

  sText = $hTextBox.Text
  If sText = "ø" Then sText = ""
  Return sText

End

Private Sub Text_Write(Value As String)

  If Me.Next Then
    If Not Value Then 
      Value = "ø"
      $hTextBox.Foreground = Color.LightForeground
    Else
      $hTextBox.Foreground = Color.Default
    Endif
  Endif
  $hTextBox.Text = Value

End

Public Sub TextBox_Change()
  
  AutoResize
  
End

Public Sub TextBox_GotFocus()

  If Not $hComp Then 
    $hComp = New FileCompletion(Last)
  Else
    $hComp.Editor = Last
  Endif
  
  If $hTextBox.Text = "ø" Then 
    $hTextBox.Text = ""
    $hTextBox.Foreground = Color.Default
  Endif
  Me.Border = Border.Plain
  
End

Public Sub TextBox_LostFocus()

  If Me.Next Then
    If $hTextBox.Text = "" Then 
      $hTextBox.Text = "ø"
      $hTextBox.Foreground = Color.LightForeground
    Endif
  Else
    If $hTextBox.Text Then Raise Activate
  Endif
  
  Me.Border = Border.None
  
End

Public Sub TextBox_KeyPress()
  
  Dim hArg As ArgListBox
  Dim sText As String
  Dim iPos As Integer
  
  If Key.Normal Then
  
    If Key.Code = Key.Left Then
      
      If $hTextBox.Pos = 0 Then
        hArg = Me.Previous
        If hArg And If Object.IsValid(hArg) Then
          hArg.SetFocus
          hArg.MoveEnd
          Stop Event
        Endif
      Endif
      
    Else If Key.Code = Key.Right Then
      
      If $hTextBox.Pos = $hTextBox.Length Then
        hArg = Me.Next
        If hArg Then
          hArg.SetFocus
          hArg.MoveBegin
          Stop Event
        Endif
      Endif
      
    Else If Key.Code = Key.Tab Then
      
      Raise Activate
      Stop Event
      
    Else If Key.Code = Key.Enter Or If Key.Code = Key.Return Then
      
      Raise Insert
      Stop Event
      
    Else If Key.Code = Key.Delete Then
      
      If $hTextBox.Pos = $hTextBox.Length Then
        hArg = Me.Next
        If hArg And If hArg.Next Then
          sText = Me.Text
          iPos = String.Len(sText)
          Me.Text &= hArg.Text
          Me.Pos = iPos
          hArg.Delete
        Endif
        Stop Event
      Endif
      
    Else If Key.Code = Key.Backspace Then
      
      If $hTextBox.Pos = 0 Then
        hArg = Me.Previous
        If hArg Then
          sText = hArg.Text
          iPos = String.Len(sText)
          If Me.Next Then
            hArg.Text = sText & Me.Text
          Endif
          Me.Delete
          hArg.SetFocus
          hArg.Pos = iPos
        Endif
        Stop Event
      Endif
      
      ' If $hTextBox.Length = 0 Then
      '   hArg = Me.Previous
      '   Me.Delete
      '   If hArg And If Object.IsValid(hArg) Then
      '     hArg.SetFocus
      '     hArg.MoveEnd
      '   Endif
      '   Stop Event
      ' Endif
      
    Else If Key.Code = Key.Escape Then
      
      Raise Cancel
      Stop Event
      
    Else If Key.Code = Key.Home Then
      
      If $hTextBox.Pos = 0 Then
        hArg = Me.Parent.Children[0]
        hArg.SetFocus
        hArg.MoveBegin
      Endif
      
    Else If Key.Code = Key.End Then
      
      If $hTextBox.Pos = $hTextBox.Length Then
        hArg = Me.Parent.Children[Me.Parent.Children.Count - 1]
        hArg.SetFocus
      Endif
      
    Endif
    
  Endif
  
End

Public Sub MoveBegin()
  
  $hTextBox.Pos = 0
  
End

Public Sub MoveEnd()
  
  $hTextBox.Pos = $hTextBox.Length
  
End


Private Function Pos_Read() As Integer

  Return $hTextBox.Pos

End

Private Sub Pos_Write(Value As Integer)

  $hTextBox.Pos = Value

End
