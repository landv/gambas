' Gambas class file

Event Change()

Private Const SELECT_TOOL As String = "Select"

Private $iSize As Integer

Public (Key) As String
Public Container As Container

Private $sType As String
Private $cButton As New Collection
Private $sTool As String
Private $bNoEvent As Boolean


Public Sub _new(sName As String, sType As String)

  Select Case Settings["/ToolboxSize", 0]
    Case 0
      $iSize = 32
    Case 1
      $iSize = 24
    Case 2
      $iSize = 48
  End Select

  Key = sName
  $sType = sType
  'btnTool.Text = sName
  'btnTool.Height = 20

  Add(SELECT_TOOL)
  SetTool
  Container = panTool

End


Public Sub Add(sControl As String, Optional sComp As String, Optional sType As String)

  Dim hCtrl As ToolButton
  Dim hPict As Picture
  Dim W, H As Integer

  If Not sType Then sType = "*"

  W = $iSize + 8
  H = $iSize + 8

  hCtrl = New ToolButton(panTool) As "btnControl"
  hCtrl.Tag = [sControl, sType]
  hCtrl.Border = False
  hCtrl.Toggle = True
  hCtrl.ToolTip = sControl
  hCtrl.Design = True

  hPict = CControl.GetIcon(sControl, sComp)
  If hPict Then
    If hPict.W > hPict.H Then W = ($iSize * hPict.W) \ hPict.H + 8
    Picture[".control" &/ LCase(sControl)] = hPict
    If hPict.Height <> $iSize Then hPict = hPict.Image.Stretch(-1, $iSize).Picture
    hCtrl.Picture = hPict
  Endif

  hCtrl.Move(0, 0, W, H)
  $cButton[sControl] = hCtrl

End

Public Sub Exist(sControl As String) As Boolean
  
  Return $cButton.Exist(sControl)
  
End



' PUBLIC SUB Form_Resize()
' 
'   DIM hCtrl AS ToolButton
'   DIM X AS Integer
'   DIM Y AS Integer
'   DIM XM AS Integer
'   DIM YM AS Integer
' 
'   btnTool.Width = ME.ClientW
'   panTool.Resize(ME.ClientW, ME.ClientH - btnTool.H)
' 
' '   FOR EACH hCtrl IN panTool.Children
' '
' '     IF (X + WIDTH) > panTool.ClientW THEN
' '       X = 0
' '       Y = Y + WIDTH
' '     ENDIF
' '
' '     hCtrl.Move(X, Y)
' '
' '     XM = Max(XM, X)
' '     YM = Max(YM, Y)
' '
' '     X = X + WIDTH
' '
' '   NEXT
' '
' '   XM = XM + WIDTH
' '   YM = YM + WIDTH
' 
'   'ME.Resize(XM, YM)
' 
' END


Public Function GetTool() As String

  If $sTool <> SELECT_TOOL Then Return $sTool

End


Public Sub SetTool(Optional hButton As ToolButton)

  $bNoEvent = True

  If $sTool Then
    $cButton[$sTool].Value = False
  Endif

  If Not hButton Then
    hButton = $cButton[SELECT_TOOL]
  Endif

  hButton.Value = True
  $sTool = hButton.Tag[0]
  
  $bNoEvent = False

End

Public Procedure btnControl_Enter()
  
  Last.Border = True
  
End

Public Procedure btnControl_Leave()
  
  Last.Border = False
  
End


Public Procedure btnControl_MouseUp()

  Dim sComp As String
  Dim sClass As String

  If $bNoEvent Then Return 

  If Mouse.Right Then
  
    'MHelp.GotoClass(CComponent.Classes[Last.Tag[0]].Component, Last.Tag[0])
    sClass = Last.Tag[0]
    If sClass <> SELECT_TOOL Then
      sComp = Project.Documentation.Classes[sClass].Component
      If sComp = CComponent.PROJECT_NAME Then
        Project.OpenFile(Last.Tag[0])
      Else
        MHelp.ShowHelpBrowserWith(MHelp.TYPE_CLASS, Last.Tag[0])
      Endif
    Endif

  Else

    If Last.Tag[0] = $sTool Then
      SetTool
    Else
      SetTool(Last)
    Endif
    
  Endif

End


Public Sub btnControl_DblClick()

  If Project.IsForm(Project.ActiveForm) Then
    If GetTool() Then
      Project.ActiveForm.AddControl(GetTool())
    Endif
  Endif

End

Public Sub btnControl_MouseDrag()
  
  Dim hTool As Object = Last
  Dim sTool As String = hTool.Tag[0]
  
  If sTool = SELECT_TOOL Then Return 

  Drag.Icon = hTool.Picture
  Drag(hTool, File.Name(sTool), MMime.CONTROL)
  Try Project.ActiveForm.HideFrame
  
End



Public Sub ShowToolBar(bShow As Boolean)

  panTool.Visible = bShow
  'IF bShow THEN $cButton["Select"].SetFocus

End

