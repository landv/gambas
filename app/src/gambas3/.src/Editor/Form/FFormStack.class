' Gambas class file

Static Private $hForm As FForm 'FForm
Static Private $cPict As New Collection

Private $iNoSelect As Integer
Private $hRefreshTimer As New Timer As "RefreshTimer"

Private Sub GetForm() As Boolean
  
  $hForm = Null
  Try $hForm = Project.ActiveForm
  If Not $hForm Then 
    HideAll
    Return True
  Endif
  
End


Public Sub Form_Open()
  
  ReadConfig
  
End


Public Sub Form_Show()

  RefreshAll
  txtSearch.Editor.SelectAll
  txtSearch.Editor.SetFocus

End


Public Sub Form_Hide()

  $hForm = Null

End

Static Public Sub GetControlIcon(sKind As String) As Picture
  
  Dim sImg As String
  Dim hPict As Picture
  
  If sKind <> "Form" Then
    sImg = ".control" &/ LCase(sKind)
  Else
    sImg = "img/32/form.png"
  Endif

  hPict = $cPict[sImg]
  If Not hPict Then
    hPict = Picture[sImg]
    If Not hPict Then hPict = Picture["img/control/unknown.png"]
    hPict = hPict.Image.Stretch(16, 16).Picture  
    $cPict[sImg] = hPict
  Endif
  
  Return hPict
  
End

Private Sub FillTree(hCtrl As CControl, Optional sParent As String)

  Dim hChild As Control
  Dim hTab As Object
  Dim iTab As Integer
  Dim sKey As String
  Dim hPict As Picture
  Dim hCChild As CControl

  If Not hCtrl Then Return

  If sParent Then
    'sImg = "img/control/" & LCase(hCtrl.Kind) & ".png"
    'sImg = ".control" &/ LCase(hCtrl.Kind)
    hPict = GetControlIcon(hCtrl.Kind)
  Else
    hPict = Picture["img/16/form.png"]
    'sImg = "img/32/form.png"
  Endif

  Inc $iNoSelect 
  Try tvwControl[hCtrl.Name].Delete
  Dec $iNoSelect
  tvwControl.Add(hCtrl.Name, hCtrl.Name, hPict, sParent)

  If Not hCtrl.IsContainer() Then Return

  'IF hCtrl.Kind = "TabStrip" THEN
  If hCtrl.IsMultiContainer() Then

    hTab = hCtrl.Control

    For iTab = 0 To hTab.Count - 1
      sKey = hCtrl.Name & "." & iTab
      tvwControl.Add(sKey, hTab[iTab].Text, GetControlIcon("TabStrip"), hCtrl.Name)
      For Each hChild In hTab[iTab].Children
        hCChild = $hForm.GetControl(hChild)
        If hCChild Then FillTree(hCChild, sKey)
      Next
      tvwControl[sKey].Expanded = True
    Next

  Else

    For Each hChild In hCtrl.Control.Children
      hCChild = $hForm.GetControl(hChild)
      If hCChild Then FillTree(hCChild, hCtrl.Name)
    Next

  Endif

  tvwControl[hCtrl.Name].Expanded = True

End

Public Sub RefreshReadOnly()
  
  If GetForm() Then Return

  panControl.Visible = Not $hForm.ReadOnly  
  
End

Public Sub RefreshAll()
  
  $hRefreshTimer.Trigger
  
End

Public Sub RefreshTimer_Timer()
  
  DoRefreshAll
  
End


Public Sub DoRefreshAll(Optional (sKey) As String, Optional bForce As Boolean)

  If Not Me.Visible Then Return

  If GetForm() Then Return
  
  'IF NOT Project.IsForm($hForm) THEN RETURN

  ' If Not sKey Then
  '   Try sKey = $hForm.Master.Name
  ' Endif 
  
  If bForce Then $cPict.Clear

  tvwControl.Clear
  FillTree($hForm.Control[$hForm.Name])
  tvwControl.Show
  'sepControl.Show
  lblMessage.Hide
  RefreshReadOnly
  SelectCurrent
  
  ' If sKey Then
  '   Object.Lock(tvwControl)
  '   Try tvwControl[sKey].Selected = True
  '   Object.Unlock(tvwControl)
  '   Try tvwControl[sKey].EnsureVisible
  ' Endif
  ' 
  ' $iNoSelect = False
  
End

Public Sub RefreshOne(sKey As String)
  
  If Not Me.Visible Then Return
  If GetForm() Then Return
  
  FillTree($hForm.Control[sKey])
  SelectCurrent
  'TRY tvwControl[sKey].Selected = TRUE
  'TRY tvwControl[sKey].EnsureVisible

End


Public Sub HideAll()

  tvwControl.Hide
  panControl.Hide
  'sepControl.Hide
  lblMessage.Show

End


Public Sub btnDown_Click()

  Dim sKey As String

  sKey = tvwControl.Key
  Try $hForm.Control[tvwControl.Current.Text].MoveDown
  If Error Then Return
  DoRefreshAll(sKey)

End

Public Sub btnBottom_Click()

  Dim sKey As String

  sKey = tvwControl.Key
  Try $hForm.Control[tvwControl.Current.Text].Raise
  If Error Then Return
  DoRefreshAll(sKey)

End

Public Sub btnTop_Click()

  Dim sKey As String

  sKey = tvwControl.Key
  Try $hForm.Control[tvwControl.Current.Text].Lower
  If Error Then Return
  DoRefreshAll(sKey)

End

Public Sub btnUp_Click()

  Dim sKey As String

  sKey = tvwControl.Key
  Try $hForm.Control[tvwControl.Current.Text].MoveUp
  If Error Then Return
  DoRefreshAll(sKey)

End

Public Sub SelectCurrent()
  
  Dim sName As String
  
  If Not $hForm Then Return
  Try sName = $hForm.Master.Name
  If Not sName Then sName = $hForm.Name
  
  If tvwControl.Exist(sName) Then 
    Try tvwControl[sName].EnsureVisible
    Inc $iNoSelect 
    tvwControl[sName].Selected = True
    Dec $iNoSelect 
  Endif

End


Public Sub tvwControl_Select()
  
  If $iNoSelect Then Return

  Inc $iNoSelect 
  If InStr(tvwControl.Current.Key, ".") Then 
    tvwControl.MoveParent
    Try $hForm.SelectControl(tvwControl.Item.Text)
  Else
    Try $hForm.SelectControl(tvwControl.Current.Text)
  Endif
  Dec $iNoSelect

End

' Public Sub tvwControl_Collapse()
' 
'   tvwControl.Item.Expanded = True  
' 
' End
' 

Public Sub ReadConfig()

  Project.SetNormalFont(tvwControl)
  'MTheme.InitControl(tvwControl)
  DoRefreshAll

End

Public Sub tvwControl_Activate()

  FMain.ActivatePropertyTab

End

Public Sub txtSearch_Click()

  Dim sName As String
  
  sName = LCase(Trim(txtSearch.Text))
  If Not sName Then Return
  
  tvwControl.MoveCurrent
  Do
    If tvwControl.MoveBelow() Then tvwControl.MoveFirst
    If tvwControl.Item.Key = tvwControl.Key Then Break
    If InStr(LCase(tvwControl.Item.Text), sName) Then
      tvwControl.Item.Selected = True
      Break
    Endif
  Loop

End

Public Sub txtSearch_Activate()
  
  txtSearch_Click
  
End

Public Sub tvwControl_Menu()

  If tvwControl.Current.Text = Null Then Return
  ' faking the TAG
  'tvwControl.Tag = tvwControl.Current.Text
  'Try $hForm.Control_MouseDown()
  ' calling Menu
  'If Mouse.Right Then
    Try $hForm.Control_Menu()
  'End If 
  ' deleting the faked TAG
  'tvwControl.Tag = Null

End
