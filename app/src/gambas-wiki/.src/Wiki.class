' Gambas class file

Private Sub _PrintTitle()

  If Main.Path Then
    Print Html(Main.Path);
  Else
    Print "/";
  Endif

End

Private Sub _PrintLink()

  Dim aPath As String[]
  Dim sElt As String
  Dim sPath As String
  
  aPath = Split(Main.Path, "/", "", True)
  For Each sElt In aPath
    sPath &= "/" & sElt
    Print "<a href=\""; Application.Root &/ sPath; Main.LinkSuffix; "\">"; "/"; sElt; "</a>";
  Next
  
End

Private Sub GetMaxHistory() As Integer

  Dim sPath As String
  Dim sDir As String

  sPath = Main.SolvePath(Main.Path)
  sDir = File.Dir(Main.GetPagePathFrom(sPath))
  Try Return Dir(sDir, "~page*.*").Count - 1

End

Private Sub _PrintPage()

  Dim sPath As String
  Dim sData As String
  Dim iPos As Integer
  Dim aFile As String[]
  Dim sDir As String
  Dim sLine As String
  Dim sColor As String
  Dim sResult As String
  Dim aLine As String[]
  Dim dDate As Date
  Dim sDate As String
  Dim hStat As Stat
  Dim hStatDef As Stat

  If Main.Edit Then
    sPath = Main.GetPagePath()  
    If Exist(sPath) Then sData = File.Load(sPath)
    If Not sData Then sData = OldWiki.GetPage(Main.Path)
    If Not sData Then
      If Main.Symbol Then
        sData = "@{syntax}\n" & Main.GetDefaultPage()
      Else If Main.Class Then
        sData = "@{symbols}\n"
      Endif
    Endif
    Print Html(sData);
    Return
  Endif

  If Main.Image Then
    Print "<img src=\"" & Application.Root &/ Main.Path & "?v\" />";
    Return
  Endif
  
  If Main.Preview Then
    
    sData = Request["page"]
    Print "<div class=\"unknown\">"; Subst(("Warning! This is a preview. Click on the <b>&1</b> button to go back to the edit page."), ("Cancel")); "</div>"
    
  Else
  
    sPath = Main.SolvePath(Main.Path)
    
    If Not Main.ExistPage(sPath) Then
      If Main.Lang = Main.DEFAULT_LANG Then
        Print "<div class=\"unknown\">"; ("This page does not exist."); "</div>"
      Else
        Print "<div class=\"unknown\">"; ("This page does not exist in that language."); "</div>"
      Endif
      If Not Main.ExistPage(sPath, Main.DEFAULT_LANG) Then Return
      Main.Lang = Main.DEFAULT_LANG
    Endif
    
    If Main.History Then
      
      sDir = File.Dir(Main.GetPagePathFrom(sPath))
      aFile = Dir(sDir, "~page.*.*").Sort(gb.Descent)
      If aFile.Count >= 2 Then
        iPos = Min(Main.History - 1, aFile.Max - 1)
        Exec ["diff", "-U", "10000", sDir &/ aFile[iPos + 1], sDir &/ aFile[iPos]] To sResult
        
        sDate = Mid$(aFile[iPos], 7)
        dDate = Date(CInt(Mid$(sDate, 1, 4)), CInt(Mid$(sDate, 5, 2)), CInt(Mid$(sDate, 7, 2)), CInt(Mid$(sDate, 9, 2)), CInt(Mid$(sDate, 11, 2)), CInt(Mid$(sDate, 13, 2)))
        Print "<h3>"; Html(Format(dDate, gb.GeneralDate)); " - "; Html(File.Ext(aFile[iPos])); "</h3>"
        
        If sResult Then
        
          aLine = Split(sResult, "\n")
          aLine.Remove(0, 3)
          
          For Each sLine In aLine
            
            sColor = Left(sLine)
            sLine = Mid$(sLine, 2)
            
            sData &= "<div style=\"background-color:"
            If sColor = " " Then
              sData &= "none"
            Else If sColor = "+" Then
              sData &= "#D8FFD8"
            Else If sColor = "-" Then
              sData &= "#FFD8D8"
            Endif
            sData &= ";\">"
            If sColor = "-" Then sData &= "<s>"
            
            sData &= Html(sLine)
            
            If sColor = "-" Then sData &= "</s>"
            sData &= "</div>"
            If Not sLine Then sData &= "\n"
            
          Next
          
          Print "<div><pre>"; sData; "</pre></div>"
          
        Else
          
          Print "<br><div class=\"unknown\">"; ("No change."); "</div>"
          
        Endif
          
        Return
        
      Endif
      
    Endif
    
    If Main.Lang <> Main.DEFAULT_LANG Then
      hStat = Stat(Main.GetPagePathFrom(Main.Path))
      hStatDef = Stat(Main.GetPagePathFrom(Main.Path, Main.DEFAULT_LANG))
      If hStat And If hStatDef And If hStatDef.LastModified > hStat.LastModified Then
        Print "<div><i><a target=\"_blank\" href=\"" & Html(URL.UnsetQuery("http://" & Application.Host &/ Application.Root &/ Request.Path & Main.LinkSuffix, "l")) & "\">" & Html(("The english page is more recent.")) & "</a></i></div>"
      Endif
    Endif
    
    sData = LTrim(File.Load(Main.GetPagePathFrom(sPath)))
    
  Endif
  
  If Main.Class Then
    If sData Begins "# " Then
      iPos = InStr(sData, "\n")
      If iPos = 0 Then iPos = Len(sData)
      sData = Mid$(sData, iPos + 1)
    Endif
    'sData = "# <a href=\"" & Application.Root &/ File.Dir(Main.Path) & "\" class=\"symbol\">" & Html(Main.GetSymbolTitle()) & "</a>\n" & sData
    If Main.Symbol Then
      sData = "# " & Main.GetSymbolTitle() & "\n" & sData
    Else
      sData = "# " & Main.GetClassTitle() & "\n" & sData
    Endif
  Endif
  
  Print WikiMarkdown.ToHTML(sData)
  
Catch
  
  Print "<pre>"; Html(Error.Text); " at line #"; WikiMarkdown.Line + 1; ":\n\n"; Html(WikiMarkdown.Current); "\n\nStack backtrace:\n\n"; Error.Backtrace.Join("\n"); "</pre>";

End

Private Sub _PrintParent()

  Print Html(Application.Root & Main.LinkSuffix);

End

Private Sub _PrintLang()

  Dim sLang As String
  
  Print "<select id=\"lang\" name=\"lang\" onchange=\"document.form.submit();\">"

  For Each sLang In Main.Languages.Copy().Sort()
    Print "<option value=\""; sLang; "\"";
    If sLang = Main.Lang Then Print " selected";
    Print ">"; Html(sLang); "</option>"
  Next

  Print "</select>"  

End
